{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/AdminSection/admin_cat.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions';\n\nclass AdminCat extends Component {\n  componentDidMount() {\n    this.props.dispatch(getAllColls());\n    this.props.dispatch(getAllCats());\n    this.props.dispatch(getAllSubCats());\n  }\n\n  render() {\n    console.log(this.props.chosenCatInfo);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, this.props.chosenCatInfo ? /*#__PURE__*/React.createElement(TabPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 1\n      }\n    }, \"Hi\")) : null);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    colls: state.collections.colls,\n    cats: state.cats.cats,\n    subcats: state.cats.subcats\n  };\n}\n\nexport default connect(mapStateToProps)(AdminCat);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/AdminSection/admin_cat.js"],"names":["React","Component","connect","Tab","Tabs","TabList","TabPanel","getAllColls","getAllCats","getAllSubCats","AdminCat","componentDidMount","props","dispatch","render","console","log","chosenCatInfo","mapStateToProps","state","colls","collections","cats","subcats"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AACA,OAAO,iCAAP;AAGA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,aAAlC,QAAwD,eAAxD;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAI7BU,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,QAAX,CAAoBN,WAAW,EAA/B;AACA,SAAKK,KAAL,CAAWC,QAAX,CAAoBL,UAAU,EAA9B;AACA,SAAKI,KAAL,CAAWC,QAAX,CAAoBJ,aAAa,EAAjC;AACH;;AAEDK,EAAAA,MAAM,GAAG;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,aAAvB;AAIA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKL,KAAL,CAAWK,aAAX,gBAEM,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA+HxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/HwB,CAFN,GAqIA,IAtIN,CADJ;AA2IH;;AA3J4B;;AA8JjC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHC,IAAAA,KAAK,EAACD,KAAK,CAACE,WAAN,CAAkBD,KADrB;AAEHE,IAAAA,IAAI,EAACH,KAAK,CAACG,IAAN,CAAWA,IAFb;AAGHC,IAAAA,OAAO,EAACJ,KAAK,CAACG,IAAN,CAAWC;AAHhB,GAAP;AAKH;;AAED,eAAerB,OAAO,CAACgB,eAAD,CAAP,CAAyBR,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\n\nimport { getAllColls, getAllCats, getAllSubCats  } from '../../actions';\n\nclass AdminCat extends Component {\n\n\n\n    componentDidMount() {\n        this.props.dispatch(getAllColls())\n        this.props.dispatch(getAllCats());\n        this.props.dispatch(getAllSubCats());\n    }\n\n    render() {\n\n        console.log(this.props.chosenCatInfo)\n\n      \n\n        return (\n            <div>\n                { this.props.chosenCatInfo ? \n                        \n                        <TabPanel>\n\n\n                            {/* <form onSubmit={this.submitForm}>\n                                <table>\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            <h2>Title</h2>\n                                        </td>\n                                        <td>\n\n                                            <input\n                                                type=\"text\"\n                                                placeholder={this.props.chosenCatInfo.title}\n                                                defaultValue={this.props.chosenCatInfo.title} \n                                                onChange={(event) => this.handleInput(event)}\n                                            />\n\n\n\n\n                                        </td>\n                                    </tr>\n\n\n                                    <tr>\n                                        <td>\n                                            <h2>Description</h2>\n                                        </td>\n                                        <td>\n                                            <textarea\n                                                type=\"text\"\n                                                placeholder=\"Enter category description\"\n                                                defaultValue={null} \n                                                onChange={(event) => this.handleInput(event)}\n                                                rows={6}\n                                            />\n                                        </td>\n                                    </tr>\n\n\n                                    <tr>\n                                        <td>\n                                            <img className=\"change_cat_img\" src={`/images/cover_img_cat/${this.props.chosenCatInfo._id}.jpg`}  />\n                                        </td>\n                                        <td>\n                                            Change image\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <h3>Sub-categories</h3>\n                                    </tr>\n\n\n                                    { this.props.subcats ?\n                                        this.props.subcats.map( (subcat, i) => (\n                                            \n                                                    subcat.parent_cat == this.props.chosenCatInfo._id ? \n                                                        <tr key={i}>\n                                                            <td>\n\n                                                                <input\n                                                                    type=\"text\"\n                                                                    placeholder={subcat.title}\n                                                                    defaultValue={subcat.title} \n                                                                    onChange={(event) => this.handleInput(event)}\n                                                                />\n\n\n\n\n                                                            </td>\n\n                                                            <td>\n                                                                <input\n                                                                    type=\"text\"\n                                                                    placeholder=\"Description\"\n                                                                    defaultValue={subcat.description} \n                                                                    onChange={(event) => this.handleInput(event)}\n                                                                />\n                                                            </td>\n                                                            <td>\n                                                                <button type=\"button\">Remove</button>\n\n                                                            </td>\n                                                        </tr>\n                                                    \n                                                    : null \n                                                \n                                            \n                                        ) )    \n                                    : null }\n                                    <tr >\n                                                            <td>\n\n                                                                <input\n                                                                    type=\"text\"\n                                                                    placeholder=\"Add new subcategory\"\n                                                                    defaultValue={null} \n                                                                    onChange={(event) => this.handleInput(event)}\n                                                                />\n\n\n\n\n                                                            </td>\n\n                                                            <td>\n                                                                <input\n                                                                    type=\"text\"\n                                                                    placeholder=\"Description\"\n                                                                    defaultValue={null} \n                                                                    onChange={(event) => this.handleInput(event)}\n                                                                />\n                                                            </td>\n                                                            <td>\n                                                                <button type=\"button\">+</button>\n\n                                                            </td>\n                                                        </tr>\n                                </tbody>\n                                </table>\n                            </form>\n                            <button type=\"button\">Delete Category</button>\n                            <button type=\"submit\">Save</button> */}\n<p>Hi</p>\n                        </TabPanel>\n\n                        \n                : null }\n            </div>\n\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        colls:state.collections.colls,\n        cats:state.cats.cats,\n        subcats:state.cats.subcats\n    }\n}\n\nexport default connect(mapStateToProps)(AdminCat);"]},"metadata":{},"sourceType":"module"}