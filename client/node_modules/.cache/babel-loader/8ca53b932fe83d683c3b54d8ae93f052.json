{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'; // create alot of actions to bring in the book info\n// import { getBook, updateBook, clearBook, deleteBook } from '../../actions';\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions';\n\nclass EditItem extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        // submit id to find post\n        _id: this.props.match.params.id,\n        title: '',\n        //\n        creator: '',\n        //\n        subject: '',\n        description: '',\n        //\n        source: '',\n        //\n        date_created: '',\n        tags: [],\n        contributor: '',\n        collection_id: '',\n        //\n        item_format: '',\n        materials: '',\n        physical_dimensions: '',\n        pages: '',\n        //\n        editor: '',\n        publisher: '',\n        further_info: '',\n        // external_link: '',\n        language: '',\n        reference: '',\n        rights: '',\n        file_format: '',\n        // address: '',\n        category_ref: [],\n        subcategory_ref: []\n      },\n      otherdata: {\n        link_url: '',\n        link_text: '',\n        address: ''\n      }\n    };\n\n    this.handleInput = (event, name) => {\n      // make a copy of formdata\n      const newFormdata = { ...this.state.formdata\n      };\n      const newOtherdata = { ...this.state.otherdata\n      }; // populate the copy with the input value\n\n      newFormdata[name] = event.target.value;\n      newOtherdata[name] = event.target.value; // copy it back to state\n\n      this.setState({\n        formdata: newFormdata,\n        otherdata: newOtherdata\n      });\n    };\n\n    this.submitForm = e => {\n      e.preventDefault(); // console.log(this.state.formdata);\n\n      this.props.dispatch(updateItem({ ...this.state.formdata,\n        external_link: {\n          url: this.state.otherdata.link_url,\n          text: this.state.otherdata.link_text\n        },\n        geo: {\n          address: this.state.otherdata.address\n        }\n      }));\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.props.match.params.id));\n      this.props.history.push('/user/all-items');\n    };\n\n    this.redirectUser = () => {\n      setTimeout(() => {\n        this.props.history.push('/user/all-items');\n      }, 1000);\n    };\n\n    this.createTextInput = (stateVar, name, placeholder, type) => {\n      // let string = `this.state.formdata.${variable}`;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form_element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: placeholder,\n        value: stateVar,\n        onChange: event => this.handleInput(event, name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    this.createSelectInput = (db, value, name, placeholder) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form_element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        value: value,\n        onChange: event => this.handleInput(event, name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        selected: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, placeholder), /*#__PURE__*/React.createElement(\"option\", {\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }, \"N/A\"), db.map((option, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: option.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }\n      }, option.title))));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById(this.props.match.params.id));\n    this.props.dispatch(getAllColls());\n    this.props.dispatch(getAllCats());\n    this.props.dispatch(getAllSubCats());\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n    let item = nextProps.items.item; // console.log(book);\n    // can create a updatedFormdata variable, but no need\n\n    this.setState({\n      formdata: {\n        _id: item._id,\n        title: item.title,\n        //\n        creator: item.creator,\n        //\n        description: item.description,\n        //\n        pages: item.pages,\n        //\n        collection_id: item.collection_id,\n        //\n        source: item.source,\n        //\n        subject: item.subject,\n        date_created: item.date_created,\n        tags: item.tags,\n        contributor: item.contributor,\n        item_format: item.item_format,\n        materials: item.materials,\n        physical_dimensions: item.physical_dimensions,\n        editor: item.editor,\n        publisher: item.publisher,\n        further_info: item.further_info,\n        // external_link: item.external_link,\n        language: item.language,\n        reference: item.reference,\n        rights: item.rights,\n        file_format: item.file_format,\n        // address: item.geo.address,\n        category_ref: item.category_ref,\n        subcategory_ref: item.subcategory_ref\n      },\n      otherdata: {\n        link_url: item.external_link.url || this.state.otherdata.link_url,\n        link_text: item.external_link.text || this.state.otherdata.link_text,\n        address: item.geo.address || this.state.otherdata.address\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearItem());\n  }\n\n  render() {\n    // console.log(this.state);\n    let items = this.props.items;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, items.updateItem ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    }, \"Post updated, \", /*#__PURE__*/React.createElement(Link, {\n      to: `/items/${items.item._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 43\n      }\n    }, \"Click here to see your post\")) : null, items.itemDeleted ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red_tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }, \"Item Deleted\", this.redirectUser()) : null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, \"Select item to edit:\"), this.createTextInput(this.state.formdata.title, 'title', \"Enter title\"), this.createTextInput(this.state.formdata.creator, 'creator', \"Enter creator\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.formdata.description,\n      onChange: event => this.handleInput(event, 'description'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter pages\",\n      value: this.state.formdata.pages,\n      onChange: event => this.handleInput(event, 'pages'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 25\n      }\n    })), this.createTextInput(this.state.formdata.source, 'source', \"Enter item source\"), this.createTextInput(this.state.formdata.subject, 'subject', \"Subject\"), this.createTextInput(this.state.formdata.date_created, 'date_created', \"contributor\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, \" TAGS \"), this.createTextInput(this.state.formdata.contributor, 'contributor', \"contributor\"), this.createTextInput(this.state.formdata.item_format, 'item_format', \"item_format\"), this.createTextInput(this.state.formdata.materials, 'materials', \"materials\"), this.createTextInput(this.state.formdata.physical_dimensions, 'physical_dimensions', \"physical_dimensions\"), this.createTextInput(this.state.formdata.editor, 'editor', \"editor\"), this.createTextInput(this.state.formdata.publisher, 'publisher', \"publisher\"), this.createTextInput(this.state.formdata.further_info, 'further_info', \"further_info\"), this.createTextInput(this.state.otherdata.link_url, 'link_url', \"link_url\"), this.createTextInput(this.state.otherdata.link_text, 'link_text', \"link_text\"), this.createTextInput(this.state.formdata.language, 'language', \"language\"), this.createTextInput(this.state.formdata.reference, 'reference', \"reference\"), this.createTextInput(this.state.formdata.rights, 'rights', \"rights\"), this.createTextInput(this.state.formdata.file_format, 'file_format', \"file_format\"), this.createTextInput(this.state.formdata.address, 'address', \"address\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.formdata.collection_id,\n      onChange: event => this.handleInput(event, 'collection_id'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 29\n      }\n    }, \"Collection\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 29\n      }\n    }, \"* None\"), this.props.colls && this.props.colls.length ? this.props.colls.map((coll, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: `\"${coll.id}\"`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 37\n      }\n    }, coll.title)) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.formdata.category_ref,\n      onChange: event => this.handleInput(event, 'category_ref'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 29\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 29\n      }\n    }, \"* None\"), this.props.cats && this.props.cats.length ? this.props.cats.map((cat, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: `\"${cat.cat_id}\"`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 37\n      }\n    }, cat.title)) : null)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }, \"Existing categories:\", this.state.formdata.category_ref.map((ref, i) => `${ref} `)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.formdata.subcategory_ref,\n      onChange: event => this.handleInput(event, 'subcategory_ref'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 29\n      }\n    }, \"Sub Category\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 29\n      }\n    }, \"* None\"), this.props.subcats && this.props.subcats.length ? this.props.subcats.map((subcat, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: `\"${subcat.subcat_id}\"`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 37\n      }\n    }, subcat.title)) : null)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }\n    }, \"Submit Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"delete_post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: e => {\n        if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 25\n      }\n    }, \"Delete item\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // console.log(state); \n  return {\n    items: state.items,\n    colls: state.collections.colls,\n    cats: state.cats.cats,\n    subcats: state.cats.subcats\n  };\n}\n\nexport default connect(mapStateToProps)(EditItem);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js"],"names":["React","PureComponent","connect","Link","getItemById","updateItem","clearItem","deleteItem","getAllColls","getAllCats","getAllSubCats","EditItem","state","formdata","_id","props","match","params","id","title","creator","subject","description","source","date_created","tags","contributor","collection_id","item_format","materials","physical_dimensions","pages","editor","publisher","further_info","language","reference","rights","file_format","category_ref","subcategory_ref","otherdata","link_url","link_text","address","handleInput","event","name","newFormdata","newOtherdata","target","value","setState","submitForm","e","preventDefault","dispatch","external_link","url","text","geo","deletePost","history","push","redirectUser","setTimeout","createTextInput","stateVar","placeholder","type","createSelectInput","db","map","option","i","componentDidMount","componentWillReceiveProps","nextProps","console","log","item","items","componentWillUnmount","render","itemDeleted","colls","length","coll","cats","cat","cat_id","ref","subcats","subcat","subcat_id","window","confirm","mapStateToProps","collections"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAGA;AACA;;AAEA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,eAA/D;AAEA,SAAQC,WAAR,EAAqBC,UAArB,EAAiCC,aAAjC,QAAuD,eAAvD;;AAIA,MAAMC,QAAN,SAAuBV,aAAvB,CAAqC;AAAA;AAAA;AAAA,SAGjCW,KAHiC,GAGzB;AACJC,MAAAA,QAAQ,EAAC;AACL;AACAC,QAAAA,GAAG,EAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAFvB;AAGLC,QAAAA,KAAK,EAAE,EAHF;AAGO;AACZC,QAAAA,OAAO,EAAE,EAJJ;AAIS;AACdC,QAAAA,OAAO,EAAE,EALJ;AAMLC,QAAAA,WAAW,EAAE,EANR;AAMa;AAClBC,QAAAA,MAAM,EAAE,EAPH;AAOQ;AACbC,QAAAA,YAAY,EAAE,EART;AASLC,QAAAA,IAAI,EAAE,EATD;AAULC,QAAAA,WAAW,EAAE,EAVR;AAWLC,QAAAA,aAAa,EAAE,EAXV;AAWoB;AACzBC,QAAAA,WAAW,EAAE,EAZR;AAaLC,QAAAA,SAAS,EAAE,EAbN;AAcLC,QAAAA,mBAAmB,EAAE,EAdhB;AAeLC,QAAAA,KAAK,EAAE,EAfF;AAee;AACpBC,QAAAA,MAAM,EAAE,EAhBH;AAiBLC,QAAAA,SAAS,EAAE,EAjBN;AAkBLC,QAAAA,YAAY,EAAE,EAlBT;AAmBL;AACAC,QAAAA,QAAQ,EAAE,EApBL;AAqBLC,QAAAA,SAAS,EAAE,EArBN;AAsBLC,QAAAA,MAAM,EAAE,EAtBH;AAuBLC,QAAAA,WAAW,EAAE,EAvBR;AAwBL;AACAC,QAAAA,YAAY,EAAE,EAzBT;AA0BLC,QAAAA,eAAe,EAAE;AA1BZ,OADL;AA6BJC,MAAAA,SAAS,EAAC;AACNC,QAAAA,QAAQ,EAAE,EADJ;AAENC,QAAAA,SAAS,EAAE,EAFL;AAGNC,QAAAA,OAAO,EAAE;AAHH;AA7BN,KAHyB;;AAAA,SAwCjCC,WAxCiC,GAwCnB,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC3B;AACA,YAAMC,WAAW,GAAG,EAChB,GAAG,KAAKpC,KAAL,CAAWC;AADE,OAApB;AAGA,YAAMoC,YAAY,GAAG,EACjB,GAAG,KAAKrC,KAAL,CAAW6B;AADG,OAArB,CAL2B,CAS3B;;AACAO,MAAAA,WAAW,CAACD,IAAD,CAAX,GAAoBD,KAAK,CAACI,MAAN,CAAaC,KAAjC;AACAF,MAAAA,YAAY,CAACF,IAAD,CAAZ,GAAqBD,KAAK,CAACI,MAAN,CAAaC,KAAlC,CAX2B,CAc3B;;AACA,WAAKC,QAAL,CAAc;AACVvC,QAAAA,QAAQ,EAACmC,WADC;AAEVP,QAAAA,SAAS,EAACQ;AAFA,OAAd;AAKH,KA5DgC;;AAAA,SA+DjCI,UA/DiC,GA+DnBC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF,GADgB,CAEhB;;AAEA,WAAKxC,KAAL,CAAWyC,QAAX,CAAoBnD,UAAU,CAAC,EACvB,GAAG,KAAKO,KAAL,CAAWC,QADS;AAEvB4C,QAAAA,aAAa,EAAE;AACXC,UAAAA,GAAG,EAAE,KAAK9C,KAAL,CAAW6B,SAAX,CAAqBC,QADf;AAEXiB,UAAAA,IAAI,EAAC,KAAK/C,KAAL,CAAW6B,SAAX,CAAqBE;AAFf,SAFQ;AAMvBiB,QAAAA,GAAG,EAAE;AACDhB,UAAAA,OAAO,EAAE,KAAKhC,KAAL,CAAW6B,SAAX,CAAqBG;AAD7B;AANkB,OAAD,CAA9B;AAWH,KA9EgC;;AAAA,SAiFjCiB,UAjFiC,GAiFpB,MAAM;AACf,WAAK9C,KAAL,CAAWyC,QAAX,CAAoBjD,UAAU,CAAC,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAA9B;AACA,WAAKH,KAAL,CAAW+C,OAAX,CAAmBC,IAAnB,CAAwB,iBAAxB;AACH,KApFgC;;AAAA,SAwFjCC,YAxFiC,GAwFlB,MAAM;AACjBC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKlD,KAAL,CAAW+C,OAAX,CAAmBC,IAAnB,CAAwB,iBAAxB;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KA5FgC;;AAAA,SA0JjCG,eA1JiC,GA0Jf,CAACC,QAAD,EAAWpB,IAAX,EAAiBqB,WAAjB,EAA8BC,IAA9B,KAAuC;AACrD;AAEA,0BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAED,WAFjB;AAGI,QAAA,KAAK,EAAED,QAHX;AAII,QAAA,QAAQ,EAAGrB,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,EAAwBC,IAAxB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAUH,KAvKgC;;AAAA,SAqLjCuB,iBArLiC,GAqLb,CAACC,EAAD,EAAKpB,KAAL,EAAYJ,IAAZ,EAAkBqB,WAAlB,KAAkC;AAClD,0BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AACI,QAAA,KAAK,EAAEjB,KADX;AAEI,QAAA,QAAQ,EAAGL,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,EAAwBC,IAAxB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAiB,QAAA,QAAQ,MAAzB;AAA0B,QAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCqB,WAApC,CAJJ,eAKI;AAAQ,QAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,EAOKG,EAAE,CAACC,GAAH,CAAQ,CAACC,MAAD,EAASC,CAAT,kBACL;AAAQ,QAAA,GAAG,EAAEA,CAAb;AAAgB,QAAA,KAAK,EAAED,MAAM,CAACvD,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCuD,MAAM,CAACtD,KAA1C,CADH,CAPL,CADJ,CADJ;AAeH,KArMgC;AAAA;;AA+FjCwD,EAAAA,iBAAiB,GAAG;AAEhB,SAAK5D,KAAL,CAAWyC,QAAX,CAAoBpD,WAAW,CAAC,KAAKW,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAA/B;AACA,SAAKH,KAAL,CAAWyC,QAAX,CAAoBhD,WAAW,EAA/B;AACA,SAAKO,KAAL,CAAWyC,QAAX,CAAoB/C,UAAU,EAA9B;AACA,SAAKM,KAAL,CAAWyC,QAAX,CAAoB9C,aAAa,EAAjC;AACH;;AAGDkE,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,QAAIG,IAAI,GAAGH,SAAS,CAACI,KAAV,CAAgBD,IAA3B,CAFiC,CAIjC;AAEA;;AAEA,SAAK5B,QAAL,CAAc;AACVvC,MAAAA,QAAQ,EAAC;AACLC,QAAAA,GAAG,EAACkE,IAAI,CAAClE,GADJ;AAELK,QAAAA,KAAK,EAAC6D,IAAI,CAAC7D,KAFN;AAEc;AACnBC,QAAAA,OAAO,EAAC4D,IAAI,CAAC5D,OAHR;AAGkB;AACvBE,QAAAA,WAAW,EAAC0D,IAAI,CAAC1D,WAJZ;AAI0B;AAC/BS,QAAAA,KAAK,EAACiD,IAAI,CAACjD,KALN;AAKc;AACnBJ,QAAAA,aAAa,EAACqD,IAAI,CAACrD,aANd;AAM8B;AACnCJ,QAAAA,MAAM,EAACyD,IAAI,CAACzD,MAPP;AAOiB;AAEtBF,QAAAA,OAAO,EAAE2D,IAAI,CAAC3D,OATT;AAULG,QAAAA,YAAY,EAAEwD,IAAI,CAACxD,YAVd;AAWLC,QAAAA,IAAI,EAAEuD,IAAI,CAACvD,IAXN;AAYLC,QAAAA,WAAW,EAAEsD,IAAI,CAACtD,WAZb;AAaLE,QAAAA,WAAW,EAAEoD,IAAI,CAACpD,WAbb;AAcLC,QAAAA,SAAS,EAAEmD,IAAI,CAACnD,SAdX;AAeLC,QAAAA,mBAAmB,EAAEkD,IAAI,CAAClD,mBAfrB;AAgBLE,QAAAA,MAAM,EAAEgD,IAAI,CAAChD,MAhBR;AAiBLC,QAAAA,SAAS,EAAE+C,IAAI,CAAC/C,SAjBX;AAkBLC,QAAAA,YAAY,EAAE8C,IAAI,CAAC9C,YAlBd;AAmBL;AACAC,QAAAA,QAAQ,EAAE6C,IAAI,CAAC7C,QApBV;AAqBLC,QAAAA,SAAS,EAAE4C,IAAI,CAAC5C,SArBX;AAsBLC,QAAAA,MAAM,EAAE2C,IAAI,CAAC3C,MAtBR;AAuBLC,QAAAA,WAAW,EAAE0C,IAAI,CAAC1C,WAvBb;AAwBL;AACAC,QAAAA,YAAY,EAAEyC,IAAI,CAACzC,YAzBd;AA0BLC,QAAAA,eAAe,EAAEwC,IAAI,CAACxC;AA1BjB,OADC;AA6BVC,MAAAA,SAAS,EAAC;AACNC,QAAAA,QAAQ,EAAEsC,IAAI,CAACvB,aAAL,CAAmBC,GAAnB,IAA0B,KAAK9C,KAAL,CAAW6B,SAAX,CAAqBC,QADnD;AAENC,QAAAA,SAAS,EAAEqC,IAAI,CAACvB,aAAL,CAAmBE,IAAnB,IAA2B,KAAK/C,KAAL,CAAW6B,SAAX,CAAqBE,SAFrD;AAGNC,QAAAA,OAAO,EAAEoC,IAAI,CAACpB,GAAL,CAAShB,OAAT,IAAoB,KAAKhC,KAAL,CAAW6B,SAAX,CAAqBG;AAH5C;AA7BA,KAAd;AAmCH;;AAEDsC,EAAAA,oBAAoB,GAAG;AACnB,SAAKnE,KAAL,CAAWyC,QAAX,CAAoBlD,SAAS,EAA7B;AACH;;AAkDD6E,EAAAA,MAAM,GAAG;AACL;AAEA,QAAIF,KAAK,GAAG,KAAKlE,KAAL,CAAWkE,KAAvB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGQA,KAAK,CAAC5E,UAAN,gBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACkB,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAAS4E,KAAK,CAACD,IAAN,CAAWlE,GAAI,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADlB,CADJ,GAME,IATV,EAcQmE,KAAK,CAACG,WAAN,gBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEK,KAAKpB,YAAL,EAFL,CADJ,GAME,IApBV,eAwBI;AAAM,MAAA,QAAQ,EAAE,KAAKX,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,EAGK,KAAKa,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBM,KAAzC,EAA+C,OAA/C,EAAwD,aAAxD,CAHL,EAIK,KAAK+C,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBO,OAAzC,EAAiD,SAAjD,EAA4D,eAA5D,CAJL,eAMI;AACI,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,QAAX,CAAoBS,WAD/B;AAEI,MAAA,QAAQ,EAAGwB,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,EAAwB,aAAxB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAWI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,WAAW,EAAC,aAFhB;AAGI,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWC,QAAX,CAAoBkB,KAH/B;AAII,MAAA,QAAQ,EAAGe,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,EAAwB,OAAxB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAXJ,EAmBK,KAAKoB,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBU,MAAzC,EAAgD,QAAhD,EAA0D,mBAA1D,CAnBL,EAoBK,KAAK2C,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBQ,OAAzC,EAAiD,SAAjD,EAA4D,SAA5D,CApBL,EAqBK,KAAK6C,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBW,YAAzC,EAAsD,cAAtD,EAAsE,aAAtE,CArBL,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ,EAuBK,KAAK0C,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBa,WAAzC,EAAqD,aAArD,EAAoE,aAApE,CAvBL,EAwBK,KAAKwC,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBe,WAAzC,EAAqD,aAArD,EAAoE,aAApE,CAxBL,EAyBK,KAAKsC,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBgB,SAAzC,EAAmD,WAAnD,EAAgE,WAAhE,CAzBL,EA0BK,KAAKqC,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBiB,mBAAzC,EAA6D,qBAA7D,EAAoF,qBAApF,CA1BL,EA2BK,KAAKoC,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBmB,MAAzC,EAAgD,QAAhD,EAA0D,QAA1D,CA3BL,EA4BK,KAAKkC,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBoB,SAAzC,EAAmD,WAAnD,EAAgE,WAAhE,CA5BL,EA6BK,KAAKiC,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBqB,YAAzC,EAAsD,cAAtD,EAAsE,cAAtE,CA7BL,EA+BK,KAAKgC,eAAL,CAAqB,KAAKtD,KAAL,CAAW6B,SAAX,CAAqBC,QAA1C,EAAmD,UAAnD,EAA+D,UAA/D,CA/BL,EAgCK,KAAKwB,eAAL,CAAqB,KAAKtD,KAAL,CAAW6B,SAAX,CAAqBE,SAA1C,EAAoD,WAApD,EAAiE,WAAjE,CAhCL,EAiCK,KAAKuB,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBsB,QAAzC,EAAkD,UAAlD,EAA8D,UAA9D,CAjCL,EAkCK,KAAK+B,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBuB,SAAzC,EAAmD,WAAnD,EAAgE,WAAhE,CAlCL,EAmCK,KAAK8B,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoBwB,MAAzC,EAAgD,QAAhD,EAA0D,QAA1D,CAnCL,EAoCK,KAAK6B,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoByB,WAAzC,EAAqD,aAArD,EAAoE,aAApE,CApCL,EAqCK,KAAK4B,eAAL,CAAqB,KAAKtD,KAAL,CAAWC,QAAX,CAAoB+B,OAAzC,EAAiD,SAAjD,EAA4D,SAA5D,CArCL,eAwCI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWC,QAAX,CAAoBc,aAD/B;AAEI,MAAA,QAAQ,EAAGmB,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,EAAwB,eAAxB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAQ,MAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,EAOM,KAAK/B,KAAL,CAAWsE,KAAX,IAAoB,KAAKtE,KAAL,CAAWsE,KAAX,CAAiBC,MAArC,GACE,KAAKvE,KAAL,CAAWsE,KAAX,CAAiBb,GAAjB,CAAuB,CAACe,IAAD,EAAOb,CAAP,kBACnB;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAG,IAAGa,IAAI,CAACrE,EAAG,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCqE,IAAI,CAACpE,KAA7C,CADJ,CADF,GAIA,IAXN,CADJ,CAxCJ,eAyDI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,QAAX,CAAoB0B,YAD/B;AAEI,MAAA,QAAQ,EAAGO,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,EAAwB,cAAxB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAMI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,EAQM,KAAK/B,KAAL,CAAWyE,IAAX,IAAmB,KAAKzE,KAAL,CAAWyE,IAAX,CAAgBF,MAAnC,GACE,KAAKvE,KAAL,CAAWyE,IAAX,CAAgBhB,GAAhB,CAAsB,CAACiB,GAAD,EAAMf,CAAN,kBAClB;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAG,IAAGe,GAAG,CAACC,MAAO,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CD,GAAG,CAACtE,KAA/C,CADJ,CADF,GAIA,IAZN,CADJ,CAzDJ,eAyEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACM,KAAKP,KAAL,CAAWC,QAAX,CAAoB0B,YAApB,CAAiCiC,GAAjC,CAAsC,CAACmB,GAAD,EAAMjB,CAAN,KACnC,GAAEiB,GAAI,GADT,CADN,CAzEJ,eA+EI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAE,KAAK/E,KAAL,CAAWC,QAAX,CAAoB2B,eAD/B;AAEI,MAAA,QAAQ,EAAGM,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,EAAwB,iBAAxB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,EAOM,KAAK/B,KAAL,CAAW6E,OAAX,IAAsB,KAAK7E,KAAL,CAAW6E,OAAX,CAAmBN,MAAzC,GACE,KAAKvE,KAAL,CAAW6E,OAAX,CAAmBpB,GAAnB,CAAyB,CAACqB,MAAD,EAASnB,CAAT,kBACrB;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAG,IAAGmB,MAAM,CAACC,SAAU,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDD,MAAM,CAAC1E,KAAxD,CADJ,CADF,GAIA,IAXN,CADJ,CA/EJ,eAoGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBApGJ,eAsGI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAGmC,CAAD,IAAO;AAAE,YAAIyC,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAJ,EAAkE,KAAKnC,UAAL,CAAgBP,CAAhB;AAAoB,OAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAtGJ,CAxBJ,CADJ;AAiJH;;AA/VgC;;AAkWrC,SAAS2C,eAAT,CAAyBrF,KAAzB,EAAgC;AAC5B;AACA,SAAO;AACHqE,IAAAA,KAAK,EAACrE,KAAK,CAACqE,KADT;AAEHI,IAAAA,KAAK,EAACzE,KAAK,CAACsF,WAAN,CAAkBb,KAFrB;AAGHG,IAAAA,IAAI,EAAC5E,KAAK,CAAC4E,IAAN,CAAWA,IAHb;AAIHI,IAAAA,OAAO,EAAChF,KAAK,CAAC4E,IAAN,CAAWI;AAJhB,GAAP;AAMH;;AAED,eAAe1F,OAAO,CAAC+F,eAAD,CAAP,CAAyBtF,QAAzB,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\n// create alot of actions to bring in the book info\n// import { getBook, updateBook, clearBook, deleteBook } from '../../actions';\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\n\nimport {getAllColls, getAllCats, getAllSubCats  } from '../../actions';\n\n\n\nclass EditItem extends PureComponent {\n\n\n    state = {\n        formdata:{\n            // submit id to find post\n            _id:this.props.match.params.id,\n            title: '',  //\n            creator: '',  //\n            subject: '',\n            description: '',  //\n            source: '',  //\n            date_created: '',\n            tags: [],\n            contributor: '',\n            collection_id: '',       //\n            item_format: '',\n            materials: '',\n            physical_dimensions: '',\n            pages: '',          //\n            editor: '',\n            publisher: '',\n            further_info: '',\n            // external_link: '',\n            language: '',\n            reference: '',\n            rights: '',\n            file_format: '',\n            // address: '',\n            category_ref: [],\n            subcategory_ref: []\n        },\n        otherdata:{\n            link_url: '',\n            link_text: '',\n            address: ''\n        }\n    }\n\n\n    handleInput = (event, name) => {\n        // make a copy of formdata\n        const newFormdata = {\n            ...this.state.formdata\n        }\n        const newOtherdata = {\n            ...this.state.otherdata\n        }\n\n        // populate the copy with the input value\n        newFormdata[name] = event.target.value;\n        newOtherdata[name] = event.target.value;\n\n\n        // copy it back to state\n        this.setState({\n            formdata:newFormdata,\n            otherdata:newOtherdata\n\n        })\n    }\n\n\n    submitForm = (e) => {\n        e.preventDefault();\n        // console.log(this.state.formdata);\n\n        this.props.dispatch(updateItem({\n                ...this.state.formdata,\n                external_link: {\n                    url: this.state.otherdata.link_url,\n                    text:this.state.otherdata.link_text\n                },\n                geo: {\n                    address: this.state.otherdata.address\n                }\n            }\n        ))\n    }\n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.props.match.params.id));\n        this.props.history.push('/user/all-items');\n    }\n\n\n\n    redirectUser = () => {\n        setTimeout(() => {\n            this.props.history.push('/user/all-items')\n        }, 1000)\n    }\n\n\n    componentDidMount() {\n\n        this.props.dispatch(getItemById(this.props.match.params.id))\n        this.props.dispatch(getAllColls())\n        this.props.dispatch(getAllCats());\n        this.props.dispatch(getAllSubCats());\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        console.log(nextProps);\n        let item = nextProps.items.item;\n        \n        // console.log(book);\n\n        // can create a updatedFormdata variable, but no need\n        \n        this.setState({\n            formdata:{\n                _id:item._id,\n                title:item.title,  //\n                creator:item.creator,  //\n                description:item.description,  //\n                pages:item.pages,  //\n                collection_id:item.collection_id,  //\n                source:item.source,   //\n\n                subject: item.subject,\n                date_created: item.date_created,\n                tags: item.tags,\n                contributor: item.contributor,\n                item_format: item.item_format,\n                materials: item.materials,\n                physical_dimensions: item.physical_dimensions,\n                editor: item.editor,\n                publisher: item.publisher,\n                further_info: item.further_info,\n                // external_link: item.external_link,\n                language: item.language,\n                reference: item.reference,\n                rights: item.rights,\n                file_format: item.file_format,\n                // address: item.geo.address,\n                category_ref: item.category_ref,\n                subcategory_ref: item.subcategory_ref\n            },\n            otherdata:{\n                link_url: item.external_link.url || this.state.otherdata.link_url,\n                link_text: item.external_link.text || this.state.otherdata.link_text,\n                address: item.geo.address || this.state.otherdata.address,\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.props.dispatch(clearItem())\n    }\n\n\n    createTextInput = (stateVar, name, placeholder, type) => {\n        // let string = `this.state.formdata.${variable}`;\n\n        return (\n            <div className=\"form_element\">\n                <input\n                    type=\"text\"\n                    placeholder={placeholder}\n                    value={stateVar} \n                    onChange={(event) => this.handleInput(event, name)}\n                />\n            </div>\n        )\n    }\n\n\n\n    // <div className=\"form_element\">\n    //     <input\n    //         type=\"text\"\n    //         placeholder=\"Enter title\"\n    //         value={this.state.formdata.title} \n    //         onChange={(event) => this.handleInput(event, 'title')}\n    //     />\n    // </div>\n\n\n    createSelectInput = (db, value, name, placeholder) => {\n        return (\n            <div className=\"form_element\">\n                <select\n                    value={value}\n                    onChange={(event) => this.handleInput(event, name)}\n                >\n                    <option value=\"\" disabled selected>{placeholder}</option>\n                    <option value={null} >N/A</option>\n\n                    {db.map( (option, i) => (\n                        <option key={i} value={option.id}>{option.title}</option>\n                    ) )}\n                </select>\n            </div>\n        )\n    }\n\n\n\n    render() {\n        // console.log(this.state);\n\n        let items = this.props.items;\n\n        return (\n            <div className=\"rl_container article\">\n\n                {\n                    items.updateItem ?\n                        <div className=\"edit_confirm\">\n                            Post updated, <Link to={`/items/${items.item._id}`}>\n                                Click here to see your post\n                            </Link>\n                        </div>\n                    : null\n                }\n\n\n                {\n                    items.itemDeleted ?\n                        <div className=\"red_tag\">\n                            Item Deleted\n                            {this.redirectUser()}\n                        </div>\n\n                    : null\n                }\n\n\n                <form onSubmit={this.submitForm}>\n                    \n                    <h2>Select item to edit:</h2>\n                    {this.createTextInput(this.state.formdata.title,'title', \"Enter title\")}\n                    {this.createTextInput(this.state.formdata.creator,'creator', \"Enter creator\")}\n\n                    <textarea\n                        value={this.state.formdata.description}\n                        onChange={(event) => this.handleInput(event, 'description')}\n                    />\n\n                    <div className=\"form_element\">\n                        <input\n                            type=\"number\"\n                            placeholder=\"Enter pages\"\n                            value={this.state.formdata.pages} \n                            onChange={(event) => this.handleInput(event, 'pages')}                        />\n                    </div>\n\n                    {this.createTextInput(this.state.formdata.source,'source', \"Enter item source\")}\n                    {this.createTextInput(this.state.formdata.subject,'subject', \"Subject\")}\n                    {this.createTextInput(this.state.formdata.date_created,'date_created', \"contributor\")}\n                    <p> TAGS </p>\n                    {this.createTextInput(this.state.formdata.contributor,'contributor', \"contributor\")}\n                    {this.createTextInput(this.state.formdata.item_format,'item_format', \"item_format\")}\n                    {this.createTextInput(this.state.formdata.materials,'materials', \"materials\")}\n                    {this.createTextInput(this.state.formdata.physical_dimensions,'physical_dimensions', \"physical_dimensions\")}\n                    {this.createTextInput(this.state.formdata.editor,'editor', \"editor\")}\n                    {this.createTextInput(this.state.formdata.publisher,'publisher', \"publisher\")}\n                    {this.createTextInput(this.state.formdata.further_info,'further_info', \"further_info\")}\n                    {/* {this.createTextInput(this.state.formdata.external_link,'external_link', \"external_link\")} */}\n                    {this.createTextInput(this.state.otherdata.link_url,'link_url', \"link_url\")}\n                    {this.createTextInput(this.state.otherdata.link_text,'link_text', \"link_text\")}\n                    {this.createTextInput(this.state.formdata.language,'language', \"language\")}\n                    {this.createTextInput(this.state.formdata.reference,'reference', \"reference\")}\n                    {this.createTextInput(this.state.formdata.rights,'rights', \"rights\")}\n                    {this.createTextInput(this.state.formdata.file_format,'file_format', \"file_format\")}\n                    {this.createTextInput(this.state.formdata.address,'address', \"address\")}\n                    \n                    \n                    <div className=\"form_element\">\n                        <select\n                            value={this.state.formdata.collection_id}\n                            onChange={(event) => this.handleInput(event, 'collection_id')}\n                        >\n                            <option value=\"\" disabled selected>Collection</option>\n                            <option value={null} >* None</option>\n\n                            { this.props.colls && this.props.colls.length ?\n                                this.props.colls.map ( (coll, i) => (\n                                    <option key={i} value={`\"${coll.id}\"`}>{coll.title}</option>\n                                ))\n                            : null }\n                        </select>\n                    </div>\n\n\n                    <div className=\"form_element\">\n                        <select\n                            value={this.state.formdata.category_ref}\n                            onChange={(event) => this.handleInput(event, 'category_ref')}\n                        >   \n                            <option value=\"\" disabled selected>Category</option>\n\n                            <option value=\"\">* None</option>\n\n                            { this.props.cats && this.props.cats.length ?\n                                this.props.cats.map ( (cat, i) => (\n                                    <option key={i} value={`\"${cat.cat_id}\"`}>{cat.title}</option>\n                                ))\n                            : null }\n                        </select>\n                    </div>  \n                    <p>Existing categories: \n                        { this.state.formdata.category_ref.map( (ref, i) => (\n                            `${ref} `\n                         )) }\n                    </p>\n\n                    <div className=\"form_element\">\n                        <select\n                            value={this.state.formdata.subcategory_ref}\n                            onChange={(event) => this.handleInput(event, 'subcategory_ref')}\n                        >\n                            <option value=\"\" disabled selected>Sub Category</option>\n                            <option value=\"\" >* None</option>\n\n                            { this.props.subcats && this.props.subcats.length ?\n                                this.props.subcats.map ( (subcat, i) => (\n                                    <option key={i} value={`\"${subcat.subcat_id}\"`}>{subcat.title}</option>\n                                ))\n                            : null }\n                        </select>\n                    </div>\n\n\n\n\n\n\n                    <button type=\"submit\">Submit Edit</button>\n                    \n                    <div className=\"delete_post\">\n                        <div className=\"button\" onClick={(e) => { if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e) } }>\n                            Delete item\n                        </div>\n\n\n           \n\n\n\n                    </div>\n\n\n\n\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    // console.log(state); \n    return {\n        items:state.items,\n        colls:state.collections.colls,\n        cats:state.cats.cats,\n        subcats:state.cats.subcats\n    }\n}\n\nexport default connect(mapStateToProps)(EditItem)\n\n\n"]},"metadata":{},"sourceType":"module"}