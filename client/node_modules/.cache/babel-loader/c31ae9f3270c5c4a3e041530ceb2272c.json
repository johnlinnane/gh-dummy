{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js\";\nimport React, { Component } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass Sandbox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      numPages: null,\n      pageNumber: 1\n    };\n\n    this.onDocumentLoadSuccess = ({\n      numPages\n    }) => {\n      this.setState({\n        numPages\n      });\n    };\n  }\n\n  isFileImage(file) {\n    return file && file['type'].split('/')[0] === 'image';\n  }\n\n  render() {\n    const {\n      pageNumber,\n      numPages\n    } = this.state;\n    const filename = \"0.jpg\";\n    console.log(isFileImage(filename));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Document, {\n      file: \"/images/items/5eb4417bf2ff151113f3e178/original/0.pdf\",\n      onLoadSuccess: this.onDocumentLoadSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Page, {\n      pageNumber: pageNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Page \", pageNumber, \" of \", numPages));\n  }\n\n}\n\nexport default Sandbox;","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js"],"names":["React","Component","Document","Page","pdfjs","GlobalWorkerOptions","workerSrc","version","Sandbox","state","numPages","pageNumber","onDocumentLoadSuccess","setState","isFileImage","file","split","render","filename","console","log"],"mappings":";AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,KAAzB,QAAsC,WAAtC;AACAA,KAAK,CAACC,mBAAN,CAA0BC,SAA1B,GAAuC,2CAA0CF,KAAK,CAACG,OAAQ,gBAA/F;;AAEA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BQ,KAD4B,GACpB;AACJC,MAAAA,QAAQ,EAAE,IADN;AAEJC,MAAAA,UAAU,EAAE;AAFR,KADoB;;AAAA,SAM5BC,qBAN4B,GAMJ,CAAC;AAAEF,MAAAA;AAAF,KAAD,KAAkB;AACtC,WAAKG,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACH,KAR2B;AAAA;;AAU5BI,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,WAAOA,IAAI,IAAIA,IAAI,CAAC,MAAD,CAAJ,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,MAA+B,OAA9C;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEN,MAAAA,UAAF;AAAcD,MAAAA;AAAd,QAA2B,KAAKD,KAAtC;AAKA,UAAMS,QAAQ,GAAG,OAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAW,CAACI,QAAD,CAAvB;AAGA,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAC,uDADT;AAEI,MAAA,aAAa,EAAE,KAAKN,qBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIA,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAED,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASA,UAAT,UAAyBD,QAAzB,CAPJ,CADA;AAWH;;AAnC2B;;AAuChC,eAAeF,OAAf","sourcesContent":["\n\n\nimport React, { Component } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n \nclass Sandbox extends Component {\n    state = {\n        numPages: null,\n        pageNumber: 1,\n    }\n \n    onDocumentLoadSuccess = ({ numPages }) => {\n        this.setState({ numPages });\n    }\n \n    isFileImage(file) {\n        return file && file['type'].split('/')[0] === 'image';\n    }\n\n    render() {\n        const { pageNumber, numPages } = this.state;\n\n\n        \n\n        const filename = \"0.jpg\";\n        console.log(isFileImage(filename));\n\n    \n        return (\n        <div className=\"pdf\">\n            <Document\n                file=\"/images/items/5eb4417bf2ff151113f3e178/original/0.pdf\"\n                onLoadSuccess={this.onDocumentLoadSuccess}\n            >\n            <Page pageNumber={pageNumber} />\n            </Document>\n            <p>Page {pageNumber} of {numPages}</p>\n        </div>\n        );\n    }\n}\n\n\nexport default Sandbox;\n"]},"metadata":{},"sourceType":"module"}