{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar invariant = require('invariant');\n\nvar isCallingCanDrag = false;\nvar isCallingIsDragging = false;\n\nvar SourceMonitor =\n/** @class */\nfunction () {\n  function SourceMonitor(manager) {\n    this.internalMonitor = manager.getMonitor();\n  }\n\n  SourceMonitor.prototype.receiveHandlerId = function (sourceId) {\n    this.sourceId = sourceId;\n  };\n\n  SourceMonitor.prototype.canDrag = function () {\n    invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs-drag-source-monitor.html');\n\n    try {\n      isCallingCanDrag = true;\n      return this.internalMonitor.canDragSource(this.sourceId);\n    } finally {\n      isCallingCanDrag = false;\n    }\n  };\n\n  SourceMonitor.prototype.isDragging = function () {\n    invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs-drag-source-monitor.html');\n\n    try {\n      isCallingIsDragging = true;\n      return this.internalMonitor.isDraggingSource(this.sourceId);\n    } finally {\n      isCallingIsDragging = false;\n    }\n  };\n\n  SourceMonitor.prototype.subscribeToStateChange = function (listener, options) {\n    return this.internalMonitor.subscribeToStateChange(listener, options);\n  };\n\n  SourceMonitor.prototype.isDraggingSource = function (sourceId) {\n    return this.internalMonitor.isDraggingSource(sourceId);\n  };\n\n  SourceMonitor.prototype.isOverTarget = function (targetId, options) {\n    return this.internalMonitor.isOverTarget(targetId, options);\n  };\n\n  SourceMonitor.prototype.getTargetIds = function () {\n    return this.internalMonitor.getTargetIds();\n  };\n\n  SourceMonitor.prototype.isSourcePublic = function () {\n    return this.internalMonitor.isSourcePublic();\n  };\n\n  SourceMonitor.prototype.getSourceId = function () {\n    return this.internalMonitor.getSourceId();\n  };\n\n  SourceMonitor.prototype.subscribeToOffsetChange = function (listener) {\n    return this.internalMonitor.subscribeToOffsetChange(listener);\n  };\n\n  SourceMonitor.prototype.canDragSource = function (sourceId) {\n    return this.internalMonitor.canDragSource(sourceId);\n  };\n\n  SourceMonitor.prototype.canDropOnTarget = function (targetId) {\n    return this.internalMonitor.canDropOnTarget(targetId);\n  };\n\n  SourceMonitor.prototype.getItemType = function () {\n    return this.internalMonitor.getItemType();\n  };\n\n  SourceMonitor.prototype.getItem = function () {\n    return this.internalMonitor.getItem();\n  };\n\n  SourceMonitor.prototype.getDropResult = function () {\n    return this.internalMonitor.getDropResult();\n  };\n\n  SourceMonitor.prototype.didDrop = function () {\n    return this.internalMonitor.didDrop();\n  };\n\n  SourceMonitor.prototype.getInitialClientOffset = function () {\n    return this.internalMonitor.getInitialClientOffset();\n  };\n\n  SourceMonitor.prototype.getInitialSourceClientOffset = function () {\n    return this.internalMonitor.getInitialSourceClientOffset();\n  };\n\n  SourceMonitor.prototype.getSourceClientOffset = function () {\n    return this.internalMonitor.getSourceClientOffset();\n  };\n\n  SourceMonitor.prototype.getClientOffset = function () {\n    return this.internalMonitor.getClientOffset();\n  };\n\n  SourceMonitor.prototype.getDifferenceFromInitialOffset = function () {\n    return this.internalMonitor.getDifferenceFromInitialOffset();\n  };\n\n  return SourceMonitor;\n}();\n\nfunction createSourceMonitor(manager) {\n  return new SourceMonitor(manager);\n}\n\nexports.default = createSourceMonitor;","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/node_modules/react-dnd/lib/createSourceMonitor.js"],"names":["Object","defineProperty","exports","value","invariant","require","isCallingCanDrag","isCallingIsDragging","SourceMonitor","manager","internalMonitor","getMonitor","prototype","receiveHandlerId","sourceId","canDrag","canDragSource","isDragging","isDraggingSource","subscribeToStateChange","listener","options","isOverTarget","targetId","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","createSourceMonitor","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIC,gBAAgB,GAAG,KAAvB;AACA,IAAIC,mBAAmB,GAAG,KAA1B;;AACA,IAAIC,aAAa;AAAG;AAAe,YAAY;AAC3C,WAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAC5B,SAAKC,eAAL,GAAuBD,OAAO,CAACE,UAAR,EAAvB;AACH;;AACDH,EAAAA,aAAa,CAACI,SAAd,CAAwBC,gBAAxB,GAA2C,UAAUC,QAAV,EAAoB;AAC3D,SAAKA,QAAL,GAAgBA,QAAhB;AACH,GAFD;;AAGAN,EAAAA,aAAa,CAACI,SAAd,CAAwBG,OAAxB,GAAkC,YAAY;AAC1CX,IAAAA,SAAS,CAAC,CAACE,gBAAF,EAAoB,8EACzB,+EADK,CAAT;;AAEA,QAAI;AACAA,MAAAA,gBAAgB,GAAG,IAAnB;AACA,aAAO,KAAKI,eAAL,CAAqBM,aAArB,CAAmC,KAAKF,QAAxC,CAAP;AACH,KAHD,SAIQ;AACJR,MAAAA,gBAAgB,GAAG,KAAnB;AACH;AACJ,GAVD;;AAWAE,EAAAA,aAAa,CAACI,SAAd,CAAwBK,UAAxB,GAAqC,YAAY;AAC7Cb,IAAAA,SAAS,CAAC,CAACG,mBAAF,EAAuB,oFAC5B,+EADK,CAAT;;AAEA,QAAI;AACAA,MAAAA,mBAAmB,GAAG,IAAtB;AACA,aAAO,KAAKG,eAAL,CAAqBQ,gBAArB,CAAsC,KAAKJ,QAA3C,CAAP;AACH,KAHD,SAIQ;AACJP,MAAAA,mBAAmB,GAAG,KAAtB;AACH;AACJ,GAVD;;AAWAC,EAAAA,aAAa,CAACI,SAAd,CAAwBO,sBAAxB,GAAiD,UAAUC,QAAV,EAAoBC,OAApB,EAA6B;AAC1E,WAAO,KAAKX,eAAL,CAAqBS,sBAArB,CAA4CC,QAA5C,EAAsDC,OAAtD,CAAP;AACH,GAFD;;AAGAb,EAAAA,aAAa,CAACI,SAAd,CAAwBM,gBAAxB,GAA2C,UAAUJ,QAAV,EAAoB;AAC3D,WAAO,KAAKJ,eAAL,CAAqBQ,gBAArB,CAAsCJ,QAAtC,CAAP;AACH,GAFD;;AAGAN,EAAAA,aAAa,CAACI,SAAd,CAAwBU,YAAxB,GAAuC,UAAUC,QAAV,EAAoBF,OAApB,EAA6B;AAChE,WAAO,KAAKX,eAAL,CAAqBY,YAArB,CAAkCC,QAAlC,EAA4CF,OAA5C,CAAP;AACH,GAFD;;AAGAb,EAAAA,aAAa,CAACI,SAAd,CAAwBY,YAAxB,GAAuC,YAAY;AAC/C,WAAO,KAAKd,eAAL,CAAqBc,YAArB,EAAP;AACH,GAFD;;AAGAhB,EAAAA,aAAa,CAACI,SAAd,CAAwBa,cAAxB,GAAyC,YAAY;AACjD,WAAO,KAAKf,eAAL,CAAqBe,cAArB,EAAP;AACH,GAFD;;AAGAjB,EAAAA,aAAa,CAACI,SAAd,CAAwBc,WAAxB,GAAsC,YAAY;AAC9C,WAAO,KAAKhB,eAAL,CAAqBgB,WAArB,EAAP;AACH,GAFD;;AAGAlB,EAAAA,aAAa,CAACI,SAAd,CAAwBe,uBAAxB,GAAkD,UAAUP,QAAV,EAAoB;AAClE,WAAO,KAAKV,eAAL,CAAqBiB,uBAArB,CAA6CP,QAA7C,CAAP;AACH,GAFD;;AAGAZ,EAAAA,aAAa,CAACI,SAAd,CAAwBI,aAAxB,GAAwC,UAAUF,QAAV,EAAoB;AACxD,WAAO,KAAKJ,eAAL,CAAqBM,aAArB,CAAmCF,QAAnC,CAAP;AACH,GAFD;;AAGAN,EAAAA,aAAa,CAACI,SAAd,CAAwBgB,eAAxB,GAA0C,UAAUL,QAAV,EAAoB;AAC1D,WAAO,KAAKb,eAAL,CAAqBkB,eAArB,CAAqCL,QAArC,CAAP;AACH,GAFD;;AAGAf,EAAAA,aAAa,CAACI,SAAd,CAAwBiB,WAAxB,GAAsC,YAAY;AAC9C,WAAO,KAAKnB,eAAL,CAAqBmB,WAArB,EAAP;AACH,GAFD;;AAGArB,EAAAA,aAAa,CAACI,SAAd,CAAwBkB,OAAxB,GAAkC,YAAY;AAC1C,WAAO,KAAKpB,eAAL,CAAqBoB,OAArB,EAAP;AACH,GAFD;;AAGAtB,EAAAA,aAAa,CAACI,SAAd,CAAwBmB,aAAxB,GAAwC,YAAY;AAChD,WAAO,KAAKrB,eAAL,CAAqBqB,aAArB,EAAP;AACH,GAFD;;AAGAvB,EAAAA,aAAa,CAACI,SAAd,CAAwBoB,OAAxB,GAAkC,YAAY;AAC1C,WAAO,KAAKtB,eAAL,CAAqBsB,OAArB,EAAP;AACH,GAFD;;AAGAxB,EAAAA,aAAa,CAACI,SAAd,CAAwBqB,sBAAxB,GAAiD,YAAY;AACzD,WAAO,KAAKvB,eAAL,CAAqBuB,sBAArB,EAAP;AACH,GAFD;;AAGAzB,EAAAA,aAAa,CAACI,SAAd,CAAwBsB,4BAAxB,GAAuD,YAAY;AAC/D,WAAO,KAAKxB,eAAL,CAAqBwB,4BAArB,EAAP;AACH,GAFD;;AAGA1B,EAAAA,aAAa,CAACI,SAAd,CAAwBuB,qBAAxB,GAAgD,YAAY;AACxD,WAAO,KAAKzB,eAAL,CAAqByB,qBAArB,EAAP;AACH,GAFD;;AAGA3B,EAAAA,aAAa,CAACI,SAAd,CAAwBwB,eAAxB,GAA0C,YAAY;AAClD,WAAO,KAAK1B,eAAL,CAAqB0B,eAArB,EAAP;AACH,GAFD;;AAGA5B,EAAAA,aAAa,CAACI,SAAd,CAAwByB,8BAAxB,GAAyD,YAAY;AACjE,WAAO,KAAK3B,eAAL,CAAqB2B,8BAArB,EAAP;AACH,GAFD;;AAGA,SAAO7B,aAAP;AACH,CApFkC,EAAnC;;AAqFA,SAAS8B,mBAAT,CAA6B7B,OAA7B,EAAsC;AAClC,SAAO,IAAID,aAAJ,CAAkBC,OAAlB,CAAP;AACH;;AACDP,OAAO,CAACqC,OAAR,GAAkBD,mBAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant = require('invariant');\nvar isCallingCanDrag = false;\nvar isCallingIsDragging = false;\nvar SourceMonitor = /** @class */ (function () {\n    function SourceMonitor(manager) {\n        this.internalMonitor = manager.getMonitor();\n    }\n    SourceMonitor.prototype.receiveHandlerId = function (sourceId) {\n        this.sourceId = sourceId;\n    };\n    SourceMonitor.prototype.canDrag = function () {\n        invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs-drag-source-monitor.html');\n        try {\n            isCallingCanDrag = true;\n            return this.internalMonitor.canDragSource(this.sourceId);\n        }\n        finally {\n            isCallingCanDrag = false;\n        }\n    };\n    SourceMonitor.prototype.isDragging = function () {\n        invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs-drag-source-monitor.html');\n        try {\n            isCallingIsDragging = true;\n            return this.internalMonitor.isDraggingSource(this.sourceId);\n        }\n        finally {\n            isCallingIsDragging = false;\n        }\n    };\n    SourceMonitor.prototype.subscribeToStateChange = function (listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    };\n    SourceMonitor.prototype.isDraggingSource = function (sourceId) {\n        return this.internalMonitor.isDraggingSource(sourceId);\n    };\n    SourceMonitor.prototype.isOverTarget = function (targetId, options) {\n        return this.internalMonitor.isOverTarget(targetId, options);\n    };\n    SourceMonitor.prototype.getTargetIds = function () {\n        return this.internalMonitor.getTargetIds();\n    };\n    SourceMonitor.prototype.isSourcePublic = function () {\n        return this.internalMonitor.isSourcePublic();\n    };\n    SourceMonitor.prototype.getSourceId = function () {\n        return this.internalMonitor.getSourceId();\n    };\n    SourceMonitor.prototype.subscribeToOffsetChange = function (listener) {\n        return this.internalMonitor.subscribeToOffsetChange(listener);\n    };\n    SourceMonitor.prototype.canDragSource = function (sourceId) {\n        return this.internalMonitor.canDragSource(sourceId);\n    };\n    SourceMonitor.prototype.canDropOnTarget = function (targetId) {\n        return this.internalMonitor.canDropOnTarget(targetId);\n    };\n    SourceMonitor.prototype.getItemType = function () {\n        return this.internalMonitor.getItemType();\n    };\n    SourceMonitor.prototype.getItem = function () {\n        return this.internalMonitor.getItem();\n    };\n    SourceMonitor.prototype.getDropResult = function () {\n        return this.internalMonitor.getDropResult();\n    };\n    SourceMonitor.prototype.didDrop = function () {\n        return this.internalMonitor.didDrop();\n    };\n    SourceMonitor.prototype.getInitialClientOffset = function () {\n        return this.internalMonitor.getInitialClientOffset();\n    };\n    SourceMonitor.prototype.getInitialSourceClientOffset = function () {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    };\n    SourceMonitor.prototype.getSourceClientOffset = function () {\n        return this.internalMonitor.getSourceClientOffset();\n    };\n    SourceMonitor.prototype.getClientOffset = function () {\n        return this.internalMonitor.getClientOffset();\n    };\n    SourceMonitor.prototype.getDifferenceFromInitialOffset = function () {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    };\n    return SourceMonitor;\n}());\nfunction createSourceMonitor(manager) {\n    return new SourceMonitor(manager);\n}\nexports.default = createSourceMonitor;\n"]},"metadata":{},"sourceType":"script"}