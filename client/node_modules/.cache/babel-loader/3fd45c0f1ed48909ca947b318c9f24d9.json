{"ast":null,"code":"var jsencoding = require('../deps/encoding/encoding');\n\nvar RE_ENCODED = /%([a-fA-F0-9]{2})/g;\n\nfunction encodedReplacer(match, byte) {\n  return String.fromCharCode(parseInt(byte, 16));\n}\n\nfunction parseParams(str) {\n  var res = [],\n      state = 'key',\n      charset = '',\n      inquote = false,\n      escaping = false,\n      p = 0,\n      tmp = '';\n\n  for (var i = 0, len = str.length; i < len; ++i) {\n    if (str[i] === '\\\\' && inquote) {\n      if (escaping) escaping = false;else {\n        escaping = true;\n        continue;\n      }\n    } else if (str[i] === '\"') {\n      if (!escaping) {\n        if (inquote) {\n          inquote = false;\n          state = 'key';\n        } else inquote = true;\n\n        continue;\n      } else escaping = false;\n    } else {\n      if (escaping && inquote) tmp += '\\\\';\n      escaping = false;\n\n      if ((state === 'charset' || state === 'lang') && str[i] === \"'\") {\n        if (state === 'charset') {\n          state = 'lang';\n          charset = tmp.substring(1);\n        } else state = 'value';\n\n        tmp = '';\n        continue;\n      } else if (state === 'key' && (str[i] === '*' || str[i] === '=') && res.length) {\n        if (str[i] === '*') state = 'charset';else state = 'value';\n        res[p] = [tmp, undefined];\n        tmp = '';\n        continue;\n      } else if (!inquote && str[i] === ';') {\n        state = 'key';\n\n        if (charset) {\n          if (tmp.length) {\n            tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer), 'binary', charset);\n          }\n\n          charset = '';\n        }\n\n        if (res[p] === undefined) res[p] = tmp;else res[p][1] = tmp;\n        tmp = '';\n        ++p;\n        continue;\n      } else if (!inquote && (str[i] === ' ' || str[i] === '\\t')) continue;\n    }\n\n    tmp += str[i];\n  }\n\n  if (charset && tmp.length) {\n    tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer), 'binary', charset);\n  }\n\n  if (res[p] === undefined) {\n    if (tmp) res[p] = tmp;\n  } else res[p][1] = tmp;\n\n  return res;\n}\n\n;\nexports.parseParams = parseParams;\n\nfunction decodeText(text, textEncoding, destEncoding) {\n  var ret;\n\n  if (text && jsencoding.encodingExists(destEncoding)) {\n    try {\n      ret = jsencoding.TextDecoder(destEncoding).decode(new Buffer(text, textEncoding));\n    } catch (e) {}\n  }\n\n  return typeof ret === 'string' ? ret : text;\n}\n\nexports.decodeText = decodeText;\nvar HEX = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    RE_PLUS = /\\+/g;\n\nfunction Decoder() {\n  this.buffer = undefined;\n}\n\nDecoder.prototype.write = function (str) {\n  // Replace '+' with ' ' before decoding\n  str = str.replace(RE_PLUS, ' ');\n  var res = '';\n  var i = 0,\n      p = 0,\n      len = str.length;\n\n  for (; i < len; ++i) {\n    if (this.buffer !== undefined) {\n      if (!HEX[str.charCodeAt(i)]) {\n        res += '%' + this.buffer;\n        this.buffer = undefined;\n        --i; // retry character\n      } else {\n        this.buffer += str[i];\n        ++p;\n\n        if (this.buffer.length === 2) {\n          res += String.fromCharCode(parseInt(this.buffer, 16));\n          this.buffer = undefined;\n        }\n      }\n    } else if (str[i] === '%') {\n      if (i > p) {\n        res += str.substring(p, i);\n        p = i;\n      }\n\n      this.buffer = '';\n      ++p;\n    }\n  }\n\n  if (p < len && this.buffer === undefined) res += str.substring(p);\n  return res;\n};\n\nDecoder.prototype.reset = function () {\n  this.buffer = undefined;\n};\n\nexports.Decoder = Decoder;\nvar RE_SPLIT_POSIX = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/,\n    RE_SPLIT_DEVICE = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/,\n    RE_SPLIT_WINDOWS = /^([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/;\n\nfunction splitPathPosix(filename) {\n  return RE_SPLIT_POSIX.exec(filename).slice(1);\n}\n\nfunction splitPathWindows(filename) {\n  // Separate device+slash from tail\n  var result = RE_SPLIT_DEVICE.exec(filename),\n      device = (result[1] || '') + (result[2] || ''),\n      tail = result[3] || ''; // Split the tail into dir, basename and extension\n\n  var result2 = RE_SPLIT_WINDOWS.exec(tail),\n      dir = result2[1],\n      basename = result2[2],\n      ext = result2[3];\n  return [device, dir, basename, ext];\n}\n\nfunction basename(path) {\n  var f = splitPathPosix(path)[2];\n  if (f === path) f = splitPathWindows(path)[2];\n  return f;\n}\n\nexports.basename = basename;","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/node_modules/busboy/lib/utils.js"],"names":["jsencoding","require","RE_ENCODED","encodedReplacer","match","byte","String","fromCharCode","parseInt","parseParams","str","res","state","charset","inquote","escaping","p","tmp","i","len","length","substring","undefined","decodeText","replace","exports","text","textEncoding","destEncoding","ret","encodingExists","TextDecoder","decode","Buffer","e","HEX","RE_PLUS","Decoder","buffer","prototype","write","charCodeAt","reset","RE_SPLIT_POSIX","RE_SPLIT_DEVICE","RE_SPLIT_WINDOWS","splitPathPosix","filename","exec","slice","splitPathWindows","result","device","tail","result2","dir","basename","ext","path","f"],"mappings":"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","sourcesContent":["var jsencoding = require('../deps/encoding/encoding');\n\nvar RE_ENCODED = /%([a-fA-F0-9]{2})/g;\nfunction encodedReplacer(match, byte) {\n  return String.fromCharCode(parseInt(byte, 16));\n}\nfunction parseParams(str) {\n  var res = [],\n      state = 'key',\n      charset = '',\n      inquote = false,\n      escaping = false,\n      p = 0,\n      tmp = '';\n\n  for (var i = 0, len = str.length; i < len; ++i) {\n    if (str[i] === '\\\\' && inquote) {\n      if (escaping)\n        escaping = false;\n      else {\n        escaping = true;\n        continue;\n      }\n    } else if (str[i] === '\"') {\n      if (!escaping) {\n        if (inquote) {\n          inquote = false;\n          state = 'key';\n        } else\n          inquote = true;\n        continue;\n      } else\n        escaping = false;\n    } else {\n      if (escaping && inquote)\n        tmp += '\\\\';\n      escaping = false;\n      if ((state === 'charset' || state === 'lang') && str[i] === \"'\") {\n        if (state === 'charset') {\n          state = 'lang';\n          charset = tmp.substring(1);\n        } else\n          state = 'value';\n        tmp = '';\n        continue;\n      } else if (state === 'key'\n                 && (str[i] === '*' || str[i] === '=')\n                 && res.length) {\n        if (str[i] === '*')\n          state = 'charset';\n        else\n          state = 'value';\n        res[p] = [tmp, undefined];\n        tmp = '';\n        continue;\n      } else if (!inquote && str[i] === ';') {\n        state = 'key';\n        if (charset) {\n          if (tmp.length) {\n            tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),\n                             'binary',\n                             charset);\n          }\n          charset = '';\n        }\n        if (res[p] === undefined)\n          res[p] = tmp;\n        else\n          res[p][1] = tmp;\n        tmp = '';\n        ++p;\n        continue;\n      } else if (!inquote && (str[i] === ' ' || str[i] === '\\t'))\n        continue;\n    }\n    tmp += str[i];\n  }\n  if (charset && tmp.length) {\n    tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),\n                     'binary',\n                     charset);\n  }\n\n  if (res[p] === undefined) {\n    if (tmp)\n      res[p] = tmp;\n  } else\n    res[p][1] = tmp;\n\n  return res;\n};\nexports.parseParams = parseParams;\n\n\nfunction decodeText(text, textEncoding, destEncoding) {\n  var ret;\n  if (text && jsencoding.encodingExists(destEncoding)) {\n    try {\n      ret = jsencoding.TextDecoder(destEncoding)\n                      .decode(new Buffer(text, textEncoding));\n    } catch(e) {}\n  }\n  return (typeof ret === 'string' ? ret : text);\n}\nexports.decodeText = decodeText;\n\n\nvar HEX = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n], RE_PLUS = /\\+/g;\nfunction Decoder() {\n  this.buffer = undefined;\n}\nDecoder.prototype.write = function(str) {\n  // Replace '+' with ' ' before decoding\n  str = str.replace(RE_PLUS, ' ');\n  var res = '';\n  var i = 0, p = 0, len = str.length;\n  for (; i < len; ++i) {\n    if (this.buffer !== undefined) {\n      if (!HEX[str.charCodeAt(i)]) {\n        res += '%' + this.buffer;\n        this.buffer = undefined;\n        --i; // retry character\n      } else {\n        this.buffer += str[i];\n        ++p;\n        if (this.buffer.length === 2) {\n          res += String.fromCharCode(parseInt(this.buffer, 16));\n          this.buffer = undefined;\n        }\n      }\n    } else if (str[i] === '%') {\n      if (i > p) {\n        res += str.substring(p, i);\n        p = i;\n      }\n      this.buffer = '';\n      ++p;\n    }\n  }\n  if (p < len && this.buffer === undefined)\n    res += str.substring(p);\n  return res;\n};\nDecoder.prototype.reset = function() {\n  this.buffer = undefined;\n};\nexports.Decoder = Decoder;\n\n\nvar RE_SPLIT_POSIX =\n      /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/,\n    RE_SPLIT_DEVICE =\n      /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/,\n    RE_SPLIT_WINDOWS =\n      /^([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/;\nfunction splitPathPosix(filename) {\n  return RE_SPLIT_POSIX.exec(filename).slice(1);\n}\nfunction splitPathWindows(filename) {\n  // Separate device+slash from tail\n  var result = RE_SPLIT_DEVICE.exec(filename),\n      device = (result[1] || '') + (result[2] || ''),\n      tail = result[3] || '';\n  // Split the tail into dir, basename and extension\n  var result2 = RE_SPLIT_WINDOWS.exec(tail),\n      dir = result2[1],\n      basename = result2[2],\n      ext = result2[3];\n  return [device, dir, basename, ext];\n}\nfunction basename(path) {\n  var f = splitPathPosix(path)[2];\n  if (f === path)\n    f = splitPathWindows(path)[2];\n  return f;\n}\nexports.basename = basename;"]},"metadata":{},"sourceType":"script"}