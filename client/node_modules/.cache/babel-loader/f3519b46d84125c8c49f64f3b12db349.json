{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/containers/Admin/edit_item.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'; // import axios from 'axios';\n// import Select from 'react-select';\n// import CreatableSelect from 'react-select/creatable';\n// import {Progress} from 'reactstrap';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions'; // import { getAllColls, getAllCats, getAllSubCats  } from '../../actions';\n\nclass EditItem extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        _id: this.props.match.params.id,\n        title: '',\n        creator: '',\n        subject: '',\n        description: '',\n        source: '',\n        date_created: '',\n        contributor: '',\n        item_format: '',\n        materials: '',\n        physical_dimensions: '',\n        pages: '',\n        editor: '',\n        publisher: '',\n        further_info: '',\n        language: '',\n        reference: '',\n        rights: '',\n        file_format: '',\n        external_link: [{\n          url: '',\n          text: ''\n        }],\n        geo: {\n          address: ''\n        }\n      },\n      saved: false\n    };\n\n    this.handleInput = (event, name, level) => {\n      // make a copy of formdata\n      const newFormdata = { ...this.state.formdata\n      }; // console.log(newFormdata);\n\n      if (level === 'external_link') {\n        if (name === 'url') {\n          // newFormdata[level][0][name] = event.target.value;\n          newFormdata.external_link[0].url = event.target.value;\n        }\n\n        if (name === 'text') {\n          newFormdata.external_link[0].text = event.target.value;\n        }\n      } else if (level === 'geo') {\n        newFormdata[level][name] = event.target.value;\n      } else {\n        newFormdata[name] = event.target.value;\n      } // copy it back to state\n\n\n      this.setState({\n        formdata: newFormdata\n      });\n      console.log(newFormdata);\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.state.formdata._id));\n      this.props.history.push('/user/all-items');\n    };\n\n    this.redirectUser = () => {\n      setTimeout(() => {\n        this.props.history.push('/user/all-items');\n      }, 1000);\n    };\n\n    this.cancel = () => {\n      this.props.history.push(`/items/${this.props.match.params.id}`);\n    };\n\n    this.submitForm = e => {\n      e.preventDefault(); // console.log(this.state.formdata);\n\n      this.props.dispatch(updateItem({ ...this.state.formdata\n      }));\n      this.setState({\n        saved: true\n      });\n      setTimeout(() => {\n        this.props.history.push(`/user/edit-item-sel/${this.props.items.item._id}`);\n      }, 1000);\n    };\n\n    this.createTextInput = (existing, name, placeholder, inputLabel, level) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }, inputLabel), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form_element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: placeholder,\n        defaultValue: existing,\n        onChange: event => this.handleInput(event, name, level),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }\n      }))));\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n\n    this.renderForm = () => {\n      // console.log(this.state);\n      const items = this.props.items;\n      const formdata = this.state.formdata;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.submitForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }, \"Edit item:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item_container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: `/images/items/${formdata._id}/original/0.jpg`,\n        alt: \"Item\",\n        onError: this.addDefaultImg,\n        className: \"edit_main_img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 17\n        }\n      }, this.createTextInput(formdata.title, 'title', \"Enter title\", \"Title\"), this.createTextInput(formdata.creator, 'creator', \"Enter creator\", \"Creator\"), this.createTextInput(formdata.subject, 'subject', \"General subject matter\", \"Subject\"), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        type: \"text\",\n        placeholder: \"Enter item description\",\n        defaultValue: formdata.description,\n        onChange: event => this.handleInput(event, 'description'),\n        rows: 18,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }\n      }))), this.createTextInput(formdata.source, 'source', \"Sources of information about the item\", \"Source\"), formdata.geo ? this.createTextInput(formdata.geo.address, 'address', \"Where is the item currently located\", \"Address\", 'geo') : null, this.createTextInput(formdata.date_created, 'date_created', \"Date item was created\", \"Date\"), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 34\n        }\n      })), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 34\n        }\n      })), this.createTextInput(formdata.rights, 'rights', \"Rights\", \"Rights\"), this.createTextInput(formdata.further_info, 'further_info', \"Enter any further info, resources..\", \"Further Info\"), this.createTextInput(formdata.external_link[0].url, 'url', \"External link URL ie. https://www...\", \"External Link\", 'external_link'), this.createTextInput(formdata.external_link[0].text, 'text', \"Description of the link\", '', \"external_link\"), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 34\n        }\n      })), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 34\n        }\n      })), this.createTextInput(formdata.item_format, 'item_format', \"The item's format\", \"Format\"), this.createTextInput(formdata.materials, 'materials', \"The materials used in the item\", \"Materials\"), this.createTextInput(formdata.physical_dimensions, 'physical_dimensions', \"Physical dimensions\", \"Dimensions\"), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 34\n        }\n      })), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 34\n        }\n      })), this.createTextInput(formdata.editor, 'editor', \"Editor's name(s)\", \"Editor\"), this.createTextInput(formdata.publisher, 'publisher', \"Publisher\", \"Publisher\"), this.createTextInput(formdata.language, 'language', \"ie. Cant, Gammon, Romani\", \"Language\"), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }\n      }, \"Pages\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form_element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter number of pages\",\n        defaultValue: formdata.pages,\n        onChange: event => this.handleInput(event, 'pages'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 33\n        }\n      })))), this.createTextInput(formdata.reference, 'reference', \"Reference code\", \"Ref\"), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 34\n        }\n      })), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 34\n        }\n      })), this.createTextInput(formdata.contributor, 'contributor', \"Add your name here\", \"Contributor\"), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"delete\",\n        onClick: e => {\n          if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 29\n        }\n      }, \"Delete item\"))), /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"half_width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"half_width_l\",\n        onClick: this.cancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 29\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"half_width_r\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 29\n        }\n      }, \"Save and Continue\"))))), this.state.saved ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"message center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 25\n        }\n      }, \"Information saved!\") : null));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById(this.props.match.params.id));\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearItem());\n  } // baseline export before adding new stuff\n\n\n  componentDidUpdate(prevProps) {\n    // console.log(prevProps);\n    let item = this.props.items.item; // console.log(this.state.formdata);\n    // console.log(book);\n    // can create a updatedFormdata variable, but no need\n\n    if (this.props.items !== prevProps.items) {\n      let dataForState = {\n        formdata: { ...this.state.formdata,\n          _id: item._id,\n          title: item.title,\n          //\n          creator: item.creator,\n          //\n          description: item.description,\n          //\n          pages: item.pages,\n          //\n          collection_id: item.collection_id,\n          //\n          source: item.source,\n          //\n          subject: item.subject,\n          date_created: item.date_created,\n          tags: item.tags,\n          contributor: item.contributor,\n          item_format: item.item_format,\n          materials: item.materials,\n          physical_dimensions: item.physical_dimensions,\n          editor: item.editor,\n          publisher: item.publisher,\n          further_info: item.further_info,\n          language: item.language,\n          reference: item.reference,\n          rights: item.rights,\n          file_format: item.file_format,\n          // address: item.geo.address,\n          category_ref: item.category_ref,\n          subcategory_ref: item.subcategory_ref\n        }\n      };\n      this.setState({ ...dataForState\n      }); // console.log(item);\n      // console.log(this.state);\n\n      if (item.external_link) {\n        if (item.external_link[0].url || item.external_link[0].text) {\n          // console.log('yes');\n          dataForState = {\n            formdata: { ...dataForState.formdata,\n              external_link: [{\n                url: item.external_link[0].url,\n                text: item.external_link[0].text\n              }]\n            }\n          }; // console.log(dataForState);\n          // console.log(this.state.formdata.external_link);\n\n          this.setState({\n            dataForState\n          });\n        }\n      } // console.log(this.state);\n\n\n      if (item.geo && item.geo.address) {\n        // console.log(item.external_link[0].url);\n        dataForState = {\n          formdata: { ...dataForState.formdata,\n            geo: {\n              address: item.geo.address\n            }\n          }\n        };\n        this.setState({ ...dataForState\n        });\n      } // console.log(this.state);\n\n    }\n  }\n\n  render() {\n    // console.log(this.state);\n    console.log(this.state.formdata);\n    let items = this.props.items; // console.log(this.props);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article edit_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 17\n      }\n    }, this.renderForm()));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items\n  };\n}\n\nexport default connect(mapStateToProps)(EditItem);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/containers/Admin/edit_item.js"],"names":["React","PureComponent","connect","Link","getItemById","updateItem","clearItem","deleteItem","EditItem","state","formdata","_id","props","match","params","id","title","creator","subject","description","source","date_created","contributor","item_format","materials","physical_dimensions","pages","editor","publisher","further_info","language","reference","rights","file_format","external_link","url","text","geo","address","saved","handleInput","event","name","level","newFormdata","target","value","setState","console","log","deletePost","dispatch","history","push","redirectUser","setTimeout","cancel","submitForm","e","preventDefault","items","item","createTextInput","existing","placeholder","inputLabel","addDefaultImg","ev","newImg","src","renderForm","window","confirm","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","dataForState","collection_id","tags","category_ref","subcategory_ref","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;AACA;AACA;AAEA;AACA;AACA;;AAIA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,eAA/D,C,CACA;;AAIA,MAAMC,QAAN,SAAuBP,aAAvB,CAAqC;AAAA;AAAA;AAAA,SAGjCQ,KAHiC,GAGzB;AACJC,MAAAA,QAAQ,EAAC;AACLC,QAAAA,GAAG,EAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EADvB;AAELC,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,OAAO,EAAE,EAHJ;AAILC,QAAAA,OAAO,EAAE,EAJJ;AAKLC,QAAAA,WAAW,EAAE,EALR;AAMLC,QAAAA,MAAM,EAAE,EANH;AAOLC,QAAAA,YAAY,EAAE,EAPT;AASLC,QAAAA,WAAW,EAAE,EATR;AAULC,QAAAA,WAAW,EAAE,EAVR;AAWLC,QAAAA,SAAS,EAAE,EAXN;AAYLC,QAAAA,mBAAmB,EAAE,EAZhB;AAaLC,QAAAA,KAAK,EAAE,EAbF;AAcLC,QAAAA,MAAM,EAAE,EAdH;AAeLC,QAAAA,SAAS,EAAE,EAfN;AAgBLC,QAAAA,YAAY,EAAE,EAhBT;AAiBLC,QAAAA,QAAQ,EAAE,EAjBL;AAkBLC,QAAAA,SAAS,EAAE,EAlBN;AAmBLC,QAAAA,MAAM,EAAE,EAnBH;AAoBLC,QAAAA,WAAW,EAAE,EApBR;AAqBLC,QAAAA,aAAa,EAAE,CACX;AACIC,UAAAA,GAAG,EAAE,EADT;AAEIC,UAAAA,IAAI,EAAE;AAFV,SADW,CArBV;AA2BLC,QAAAA,GAAG,EAAE;AACDC,UAAAA,OAAO,EAAE;AADR;AA3BA,OADL;AAgCJC,MAAAA,KAAK,EAAE;AAhCH,KAHyB;;AAAA,SAqJjCC,WArJiC,GAqJnB,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,KAAwB;AAGlC;AACA,YAAMC,WAAW,GAAG,EAChB,GAAG,KAAKnC,KAAL,CAAWC;AADE,OAApB,CAJkC,CAQlC;;AAEA,UAAIiC,KAAK,KAAK,eAAd,EAA+B;AAC3B,YAAID,IAAI,KAAK,KAAb,EAAoB;AAChB;AACAE,UAAAA,WAAW,CAACV,aAAZ,CAA0B,CAA1B,EAA6BC,GAA7B,GAAmCM,KAAK,CAACI,MAAN,CAAaC,KAAhD;AACH;;AACD,YAAIJ,IAAI,KAAK,MAAb,EAAqB;AACjBE,UAAAA,WAAW,CAACV,aAAZ,CAA0B,CAA1B,EAA6BE,IAA7B,GAAoCK,KAAK,CAACI,MAAN,CAAaC,KAAjD;AACH;AACJ,OARD,MAQO,IAAIH,KAAK,KAAK,KAAd,EAAqB;AACxBC,QAAAA,WAAW,CAACD,KAAD,CAAX,CAAmBD,IAAnB,IAA2BD,KAAK,CAACI,MAAN,CAAaC,KAAxC;AACH,OAFM,MAEA;AACHF,QAAAA,WAAW,CAACF,IAAD,CAAX,GAAoBD,KAAK,CAACI,MAAN,CAAaC,KAAjC;AACH,OAtBiC,CAyBlC;;;AACA,WAAKC,QAAL,CAAc;AACVrC,QAAAA,QAAQ,EAAEkC;AADA,OAAd;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACH,KApLgC;;AAAA,SA4LjCM,UA5LiC,GA4LpB,MAAM;AACf,WAAKtC,KAAL,CAAWuC,QAAX,CAAoB5C,UAAU,CAAC,KAAKE,KAAL,CAAWC,QAAX,CAAoBC,GAArB,CAA9B;AACA,WAAKC,KAAL,CAAWwC,OAAX,CAAmBC,IAAnB,CAAwB,iBAAxB;AACH,KA/LgC;;AAAA,SAmMjCC,YAnMiC,GAmMlB,MAAM;AACjBC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAK3C,KAAL,CAAWwC,OAAX,CAAmBC,IAAnB,CAAwB,iBAAxB;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAvMgC;;AAAA,SAyMjCG,MAzMiC,GAyMxB,MAAM;AACX,WAAK5C,KAAL,CAAWwC,OAAX,CAAmBC,IAAnB,CAAyB,UAAS,KAAKzC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAA7D;AACH,KA3MgC;;AAAA,SAiNjC0C,UAjNiC,GAiNnBC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF,GADgB,CAEhB;;AAEA,WAAK/C,KAAL,CAAWuC,QAAX,CAAoB9C,UAAU,CAAC,EACvB,GAAG,KAAKI,KAAL,CAAWC;AADS,OAAD,CAA9B;AAKA,WAAKqC,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAE;AADG,OAAd;AAIAgB,MAAAA,UAAU,CAAC,MAAM;AACb,aAAK3C,KAAL,CAAWwC,OAAX,CAAmBC,IAAnB,CAAyB,uBAAsB,KAAKzC,KAAL,CAAWgD,KAAX,CAAiBC,IAAjB,CAAsBlD,GAAI,EAAzE;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAjOgC;;AAAA,SAuOjCmD,eAvOiC,GAuOf,CAACC,QAAD,EAAWrB,IAAX,EAAiBsB,WAAjB,EAA8BC,UAA9B,EAA0CtB,KAA1C,KAAoD;AAElE,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKsB,UADL,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAED,WAFjB;AAGI,QAAA,YAAY,EAAED,QAHlB;AAII,QAAA,QAAQ,EAAGtB,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,KAA9B,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAJJ,CADJ;AAkBH,KA3PgC;;AAAA,SAiQjCuB,aAjQiC,GAiQhBC,EAAD,IAAQ;AACpB,YAAMC,MAAM,GAAG,6BAAf;;AACA,UAAID,EAAE,CAACtB,MAAH,CAAUwB,GAAV,KAAkBD,MAAtB,EAA8B;AAC1BD,QAAAA,EAAE,CAACtB,MAAH,CAAUwB,GAAV,GAAgBD,MAAhB;AACH;AACJ,KAtQgC;;AAAA,SAyQjCE,UAzQiC,GAyQpB,MAAM;AACf;AAEA,YAAMV,KAAK,GAAG,KAAKhD,KAAL,CAAWgD,KAAzB;AACA,YAAMlD,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA5B;AAIA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAuBA;AAAM,QAAA,QAAQ,EAAE,KAAK+C,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,EAAG,iBAAgB/C,QAAQ,CAACC,GAAI,iBAAxC;AACI,QAAA,GAAG,EAAC,MADR;AAEI,QAAA,OAAO,EAAE,KAAKuD,aAFlB;AAGI,QAAA,SAAS,EAAC,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKJ,eAAL,CAAqBpD,QAAQ,CAACM,KAA9B,EAAoC,OAApC,EAA6C,aAA7C,EAA4D,OAA5D,CAFL,EAGK,KAAK8C,eAAL,CAAqBpD,QAAQ,CAACO,OAA9B,EAAsC,SAAtC,EAAiD,eAAjD,EAAkE,SAAlE,CAHL,EAIK,KAAK6C,eAAL,CAAqBpD,QAAQ,CAACQ,OAA9B,EAAsC,SAAtC,EAAiD,wBAAjD,EAA2E,SAA3E,CAJL,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,wBAFhB;AAGI,QAAA,YAAY,EAAER,QAAQ,CAACS,WAH3B;AAII,QAAA,QAAQ,EAAGsB,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,EAAwB,aAAxB,CAJzB;AAKI,QAAA,IAAI,EAAE,EALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CANJ,EAsBK,KAAKqB,eAAL,CAAqBpD,QAAQ,CAACU,MAA9B,EAAqC,QAArC,EAA+C,uCAA/C,EAAwF,QAAxF,CAtBL,EAuBMV,QAAQ,CAAC2B,GAAT,GACE,KAAKyB,eAAL,CAAqBpD,QAAQ,CAAC2B,GAAT,CAAaC,OAAlC,EAA0C,SAA1C,EAAqD,qCAArD,EAA4F,SAA5F,EAAuG,KAAvG,CADF,GAEA,IAzBN,EA0BK,KAAKwB,eAAL,CAAqBpD,QAAQ,CAACW,YAA9B,EAA2C,cAA3C,EAA2D,uBAA3D,EAAoF,MAApF,CA1BL,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CA7BJ,eA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CAAJ,CA9BJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CA/BJ,EAkCK,KAAKyC,eAAL,CAAqBpD,QAAQ,CAACsB,MAA9B,EAAqC,QAArC,EAA+C,QAA/C,EAAyD,QAAzD,CAlCL,EAmCK,KAAK8B,eAAL,CAAqBpD,QAAQ,CAACmB,YAA9B,EAA2C,cAA3C,EAA2D,qCAA3D,EAAkG,cAAlG,CAnCL,EAsCK,KAAKiC,eAAL,CAAqBpD,QAAQ,CAACwB,aAAT,CAAuB,CAAvB,EAA0BC,GAA/C,EAAmD,KAAnD,EAA0D,sCAA1D,EAAkG,eAAlG,EAAmH,eAAnH,CAtCL,EAwCK,KAAK2B,eAAL,CAAqBpD,QAAQ,CAACwB,aAAT,CAAuB,CAAvB,EAA0BE,IAA/C,EAAoD,MAApD,EAA4D,yBAA5D,EAAuF,EAAvF,EAA2F,eAA3F,CAxCL,eA2CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CA3CJ,eA4CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CAAJ,CA5CJ,eA6CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CA7CJ,EAgDK,KAAK0B,eAAL,CAAqBpD,QAAQ,CAACa,WAA9B,EAA0C,aAA1C,EAAyD,mBAAzD,EAA8E,QAA9E,CAhDL,EAiDK,KAAKuC,eAAL,CAAqBpD,QAAQ,CAACc,SAA9B,EAAwC,WAAxC,EAAqD,gCAArD,EAAuF,WAAvF,CAjDL,EAkDK,KAAKsC,eAAL,CAAqBpD,QAAQ,CAACe,mBAA9B,EAAkD,qBAAlD,EAAyE,qBAAzE,EAAgG,YAAhG,CAlDL,eAqDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CArDJ,eAsDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CAAJ,CAtDJ,eAuDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CAvDJ,EA0DK,KAAKqC,eAAL,CAAqBpD,QAAQ,CAACiB,MAA9B,EAAqC,QAArC,EAA+C,kBAA/C,EAAmE,QAAnE,CA1DL,EA2DK,KAAKmC,eAAL,CAAqBpD,QAAQ,CAACkB,SAA9B,EAAwC,WAAxC,EAAqD,WAArD,EAAkE,WAAlE,CA3DL,EA4DK,KAAKkC,eAAL,CAAqBpD,QAAQ,CAACoB,QAA9B,EAAuC,UAAvC,EAAmD,0BAAnD,EAA+E,UAA/E,CA5DL,eA8DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,WAAW,EAAC,uBAFhB;AAGI,QAAA,YAAY,EAAEpB,QAAQ,CAACgB,KAH3B;AAII,QAAA,QAAQ,EAAGe,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,EAAwB,OAAxB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAJJ,CA9DJ,EA8EK,KAAKqB,eAAL,CAAqBpD,QAAQ,CAACqB,SAA9B,EAAwC,WAAxC,EAAqD,gBAArD,EAAuE,KAAvE,CA9EL,eAiFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CAjFJ,eAkFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CAAJ,CAlFJ,eAmFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CAnFJ,EAsFK,KAAK+B,eAAL,CAAqBpD,QAAQ,CAACY,WAA9B,EAA0C,aAA1C,EAAyD,oBAAzD,EAA+E,aAA/E,CAtFL,eA0FI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,QAFd;AAGI,QAAA,OAAO,EAAGoC,CAAD,IAAO;AAAE,cAAIa,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAJ,EAAkE,KAAKtB,UAAL,CAAgBQ,CAAhB;AAAoB,SAH5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CADJ,CA1FJ,eAwGI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,cAAhC;AAA+C,QAAA,OAAO,EAAE,KAAKF,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ,CADJ,CAxGJ,CADA,CAXJ,EAkIK,KAAK/C,KAAL,CAAW8B,KAAX,gBACO;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADP,GAEC,IApIN,CAvBA,CADJ;AAoKH,KArbgC;AAAA;;AAyCjCkC,EAAAA,iBAAiB,GAAG;AAChB,SAAK7D,KAAL,CAAWuC,QAAX,CAAoB/C,WAAW,CAAC,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAA/B;AAEH;;AAGD2D,EAAAA,oBAAoB,GAAG;AACnB,SAAK9D,KAAL,CAAWuC,QAAX,CAAoB7C,SAAS,EAA7B;AACH,GAjDgC,CAmDjC;;;AACAqE,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B;AACA,QAAIf,IAAI,GAAG,KAAKjD,KAAL,CAAWgD,KAAX,CAAiBC,IAA5B,CAF0B,CAG1B;AAGA;AAEA;;AACA,QAAI,KAAKjD,KAAL,CAAWgD,KAAX,KAAqBgB,SAAS,CAAChB,KAAnC,EAA0C;AAEtC,UAAIiB,YAAY,GAAG;AACfnE,QAAAA,QAAQ,EAAC,EACL,GAAG,KAAKD,KAAL,CAAWC,QADT;AAELC,UAAAA,GAAG,EAACkD,IAAI,CAAClD,GAFJ;AAGLK,UAAAA,KAAK,EAAC6C,IAAI,CAAC7C,KAHN;AAGc;AACnBC,UAAAA,OAAO,EAAC4C,IAAI,CAAC5C,OAJR;AAIkB;AACvBE,UAAAA,WAAW,EAAC0C,IAAI,CAAC1C,WALZ;AAK0B;AAC/BO,UAAAA,KAAK,EAACmC,IAAI,CAACnC,KANN;AAMc;AACnBoD,UAAAA,aAAa,EAACjB,IAAI,CAACiB,aAPd;AAO8B;AACnC1D,UAAAA,MAAM,EAACyC,IAAI,CAACzC,MARP;AAQiB;AAEtBF,UAAAA,OAAO,EAAE2C,IAAI,CAAC3C,OAVT;AAWLG,UAAAA,YAAY,EAAEwC,IAAI,CAACxC,YAXd;AAYL0D,UAAAA,IAAI,EAAElB,IAAI,CAACkB,IAZN;AAaLzD,UAAAA,WAAW,EAAEuC,IAAI,CAACvC,WAbb;AAcLC,UAAAA,WAAW,EAAEsC,IAAI,CAACtC,WAdb;AAeLC,UAAAA,SAAS,EAAEqC,IAAI,CAACrC,SAfX;AAgBLC,UAAAA,mBAAmB,EAAEoC,IAAI,CAACpC,mBAhBrB;AAiBLE,UAAAA,MAAM,EAAEkC,IAAI,CAAClC,MAjBR;AAkBLC,UAAAA,SAAS,EAAEiC,IAAI,CAACjC,SAlBX;AAmBLC,UAAAA,YAAY,EAAEgC,IAAI,CAAChC,YAnBd;AAoBLC,UAAAA,QAAQ,EAAE+B,IAAI,CAAC/B,QApBV;AAqBLC,UAAAA,SAAS,EAAE8B,IAAI,CAAC9B,SArBX;AAsBLC,UAAAA,MAAM,EAAE6B,IAAI,CAAC7B,MAtBR;AAuBLC,UAAAA,WAAW,EAAE4B,IAAI,CAAC5B,WAvBb;AAwBL;AACA+C,UAAAA,YAAY,EAAEnB,IAAI,CAACmB,YAzBd;AA0BLC,UAAAA,eAAe,EAAEpB,IAAI,CAACoB;AA1BjB;AADM,OAAnB;AA+BA,WAAKlC,QAAL,CAAc,EACV,GAAG8B;AADO,OAAd,EAjCsC,CAoCtC;AACA;;AAGA,UAAIhB,IAAI,CAAC3B,aAAT,EAAwB;AACpB,YAAI2B,IAAI,CAAC3B,aAAL,CAAmB,CAAnB,EAAsBC,GAAtB,IAA6B0B,IAAI,CAAC3B,aAAL,CAAmB,CAAnB,EAAsBE,IAAvD,EAA6D;AACzD;AACAyC,UAAAA,YAAY,GAAG;AACXnE,YAAAA,QAAQ,EAAE,EACN,GAAGmE,YAAY,CAACnE,QADV;AAENwB,cAAAA,aAAa,EAAE,CACX;AACIC,gBAAAA,GAAG,EAAE0B,IAAI,CAAC3B,aAAL,CAAmB,CAAnB,EAAsBC,GAD/B;AAEIC,gBAAAA,IAAI,EAAEyB,IAAI,CAAC3B,aAAL,CAAmB,CAAnB,EAAsBE;AAFhC,eADW;AAFT;AADC,WAAf,CAFyD,CAazD;AACA;;AACA,eAAKW,QAAL,CAAc;AACV8B,YAAAA;AADU,WAAd;AAGH;AACJ,OA5DqC,CA8DtC;;;AAGA,UAAIhB,IAAI,CAACxB,GAAL,IAAYwB,IAAI,CAACxB,GAAL,CAASC,OAAzB,EAAkC;AAC9B;AACAuC,QAAAA,YAAY,GAAG;AACXnE,UAAAA,QAAQ,EAAE,EACN,GAAGmE,YAAY,CAACnE,QADV;AAEN2B,YAAAA,GAAG,EAAE;AACDC,cAAAA,OAAO,EAAEuB,IAAI,CAACxB,GAAL,CAASC;AADjB;AAFC;AADC,SAAf;AAQA,aAAKS,QAAL,CAAc,EACV,GAAG8B;AADO,SAAd;AAGH,OA9EqC,CA+EtC;;AAIH;AAEJ;;AAsSDK,EAAAA,MAAM,GAAG;AACL;AAEAlC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxC,KAAL,CAAWC,QAAvB;AAEA,QAAIkD,KAAK,GAAG,KAAKhD,KAAL,CAAWgD,KAAvB,CALK,CAML;;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAES,KAAKU,UAAL,EAFT,CADJ,CADJ;AAyBH;;AAzdgC;;AA4drC,SAASa,eAAT,CAAyB1E,KAAzB,EAAgC;AAC5B,SAAO;AACHmD,IAAAA,KAAK,EAACnD,KAAK,CAACmD;AADT,GAAP;AAGH;;AAED,eAAe1D,OAAO,CAACiF,eAAD,CAAP,CAAyB3E,QAAzB,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n// import axios from 'axios';\n// import Select from 'react-select';\n// import CreatableSelect from 'react-select/creatable';\n\n// import {Progress} from 'reactstrap';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\n\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\n// import { getAllColls, getAllCats, getAllSubCats  } from '../../actions';\n\n\n\nclass EditItem extends PureComponent {\n\n\n    state = {\n        formdata:{\n            _id:this.props.match.params.id,\n            title: '',\n            creator: '',\n            subject: '',\n            description: '',\n            source: '',\n            date_created: '',\n            \n            contributor: '',\n            item_format: '',\n            materials: '',\n            physical_dimensions: '',\n            pages: '',        \n            editor: '',\n            publisher: '',\n            further_info: '',\n            language: '',\n            reference: '',\n            rights: '',\n            file_format: '',\n            external_link: [\n                {\n                    url: '',\n                    text: ''\n                }\n            ],\n            geo: {\n                address: ''\n            }\n        },\n        saved: false\n\n\n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(getItemById(this.props.match.params.id))\n\n    }\n\n\n    componentWillUnmount() {\n        this.props.dispatch(clearItem())\n    }\n\n    // baseline export before adding new stuff\n    componentDidUpdate(prevProps) {\n        // console.log(prevProps);\n        let item = this.props.items.item;\n        // console.log(this.state.formdata);\n\n        \n        // console.log(book);\n\n        // can create a updatedFormdata variable, but no need\n        if (this.props.items !== prevProps.items) {\n\n            let dataForState = {\n                formdata:{\n                    ...this.state.formdata,\n                    _id:item._id,\n                    title:item.title,  //\n                    creator:item.creator,  //\n                    description:item.description,  //\n                    pages:item.pages,  //\n                    collection_id:item.collection_id,  //\n                    source:item.source,   //\n\n                    subject: item.subject,\n                    date_created: item.date_created,\n                    tags: item.tags,\n                    contributor: item.contributor,\n                    item_format: item.item_format,\n                    materials: item.materials,\n                    physical_dimensions: item.physical_dimensions,\n                    editor: item.editor,\n                    publisher: item.publisher,\n                    further_info: item.further_info,\n                    language: item.language,\n                    reference: item.reference,\n                    rights: item.rights,\n                    file_format: item.file_format,\n                    // address: item.geo.address,\n                    category_ref: item.category_ref,\n                    subcategory_ref: item.subcategory_ref\n                }\n            }\n\n            this.setState({\n                ...dataForState\n            })\n            // console.log(item);\n            // console.log(this.state);\n\n\n            if (item.external_link) {\n                if (item.external_link[0].url || item.external_link[0].text) {\n                    // console.log('yes');\n                    dataForState = {\n                        formdata: {\n                            ...dataForState.formdata,\n                            external_link: [\n                                {\n                                    url: item.external_link[0].url,\n                                    text: item.external_link[0].text\n                                }\n                            ]\n                        }\n                    }\n                    // console.log(dataForState);\n                    // console.log(this.state.formdata.external_link);\n                    this.setState({\n                        dataForState\n                    })\n                }\n            } \n\n            // console.log(this.state);\n\n\n            if (item.geo && item.geo.address) {\n                // console.log(item.external_link[0].url);\n                dataForState = {\n                    formdata: {\n                        ...dataForState.formdata,\n                        geo: {\n                            address: item.geo.address\n                        }\n                    }\n                }\n                this.setState({\n                    ...dataForState\n                })\n            }\n            // console.log(this.state);\n            \n\n            \n        }\n\n    }\n\n\n    handleInput = (event, name, level) => {\n\n\n        // make a copy of formdata\n        const newFormdata = {\n            ...this.state.formdata\n        }\n\n        // console.log(newFormdata);\n\n        if (level === 'external_link') {\n            if (name === 'url') {\n                // newFormdata[level][0][name] = event.target.value;\n                newFormdata.external_link[0].url = event.target.value;\n            }\n            if (name === 'text') {\n                newFormdata.external_link[0].text = event.target.value;\n            }\n        } else if (level === 'geo') {\n            newFormdata[level][name] = event.target.value;\n        } else {\n            newFormdata[name] = event.target.value;\n        }\n\n\n        // copy it back to state\n        this.setState({\n            formdata: newFormdata\n\n        })\n        console.log(newFormdata);\n    }\n\n\n\n\n    \n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.state.formdata._id));\n        this.props.history.push('/user/all-items');\n    }\n\n\n\n    redirectUser = () => {\n        setTimeout(() => {\n            this.props.history.push('/user/all-items')\n        }, 1000)\n    }\n\n    cancel = () => {\n        this.props.history.push(`/items/${this.props.match.params.id}`)\n    }\n\n\n\n\n\n    submitForm = (e) => {\n        e.preventDefault();\n        // console.log(this.state.formdata);\n\n        this.props.dispatch(updateItem({\n                ...this.state.formdata\n            }\n        ))\n\n        this.setState({\n            saved: true\n        })\n\n        setTimeout(() => {\n            this.props.history.push(`/user/edit-item-sel/${this.props.items.item._id}`)\n        }, 1000)\n    }\n\n    \n\n\n\n    createTextInput = (existing, name, placeholder, inputLabel, level) => {\n\n        return (\n            <tr>\n                <td>\n                    {inputLabel}\n                </td>\n                <td>\n                    <div className=\"form_element\">\n                        <input\n                            type=\"text\"\n                            placeholder={placeholder}\n                            defaultValue={existing} \n                            onChange={(event) => this.handleInput(event, name, level)}\n                        />\n                    </div>\n                </td>\n\n            </tr>\n        )\n    }\n\n \n\n    // ****************************************************\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    } \n\n\n    renderForm = () => {\n        // console.log(this.state);\n\n        const items = this.props.items;\n        const formdata = this.state.formdata;\n\n\n\n        return (\n            <div>\n            {/* {\n                items.updateItem ?\n                    <div className=\"edit_confirm\">\n                        Post updated, <Link to={`/items/${items.item._id}`}>\n                            Click here to see your post\n                        </Link>\n                    </div>\n                : null\n            } */}\n\n\n            {/* {\n                items.itemDeleted ?\n                    <div className=\"red_tag\">\n                        Item Deleted    \n                        {this.redirectUser()}\n                    </div>\n\n                : null\n            } */}\n\n\n            <form onSubmit={this.submitForm}>\n                \n                <h2>Edit item:</h2>\n                <div className=\"item_container\">\n                    <img src={`/images/items/${formdata._id}/original/0.jpg`} \n                        alt=\"Item\" \n                        onError={this.addDefaultImg}\n                        className=\"edit_main_img\"\n                    />\n                </div>\n\n                <table>\n                <tbody>\n                \n                    {this.createTextInput(formdata.title,'title', \"Enter title\", \"Title\")}\n                    {this.createTextInput(formdata.creator,'creator', \"Enter creator\", \"Creator\")}\n                    {this.createTextInput(formdata.subject,'subject', \"General subject matter\", \"Subject\")}\n\n                    <tr>\n                        <td className=\"label\">\n                            Description\n                        </td>\n                        <td>\n                            <textarea\n                                type=\"text\"\n                                placeholder=\"Enter item description\"\n                                defaultValue={formdata.description} \n                                onChange={(event) => this.handleInput(event, 'description')}\n                                rows={18}\n                            />\n                            \n                        </td>\n                    </tr>\n\n                    {this.createTextInput(formdata.source,'source', \"Sources of information about the item\", \"Source\")}\n                    { formdata.geo ?\n                        this.createTextInput(formdata.geo.address,'address', \"Where is the item currently located\", \"Address\", 'geo')\n                    : null }\n                    {this.createTextInput(formdata.date_created,'date_created', \"Date item was created\", \"Date\")}\n                        \n\n                    <tr><td></td><td></td></tr>\n                    <tr><td colSpan=\"2\"><hr /></td></tr>\n                    <tr><td></td><td></td></tr>\n\n\n                    {this.createTextInput(formdata.rights,'rights', \"Rights\", \"Rights\")}\n                    {this.createTextInput(formdata.further_info,'further_info', \"Enter any further info, resources..\", \"Further Info\")}\n\n                    \n                    {this.createTextInput(formdata.external_link[0].url,'url', \"External link URL ie. https://www...\", \"External Link\", 'external_link')}\n\n                    {this.createTextInput(formdata.external_link[0].text,'text', \"Description of the link\", '', \"external_link\")}\n\n\n                    <tr><td></td><td></td></tr>\n                    <tr><td colSpan=\"2\"><hr /></td></tr>\n                    <tr><td></td><td></td></tr>\n                   \n \n                    {this.createTextInput(formdata.item_format,'item_format', \"The item's format\", \"Format\")}\n                    {this.createTextInput(formdata.materials,'materials', \"The materials used in the item\", \"Materials\")}\n                    {this.createTextInput(formdata.physical_dimensions,'physical_dimensions', \"Physical dimensions\", \"Dimensions\")}\n\n                    \n                    <tr><td></td><td></td></tr>\n                    <tr><td colSpan=\"2\"><hr /></td></tr>\n                    <tr><td></td><td></td></tr>\n\n\n                    {this.createTextInput(formdata.editor,'editor', \"Editor's name(s)\", \"Editor\")}\n                    {this.createTextInput(formdata.publisher,'publisher', \"Publisher\", \"Publisher\")}\n                    {this.createTextInput(formdata.language,'language', \"ie. Cant, Gammon, Romani\", \"Language\")}\n\n                    <tr>\n                        <td className=\"label\">\n                            Pages\n                        </td>\n                        <td>\n                            <div className=\"form_element\">\n                                <input\n                                    type=\"number\"\n                                    placeholder=\"Enter number of pages\"\n                                    defaultValue={formdata.pages} \n                                    onChange={(event) => this.handleInput(event, 'pages')}\n                                />\n                            </div>\n                        </td>\n                    </tr>\n\n                    {this.createTextInput(formdata.reference,'reference', \"Reference code\", \"Ref\")}\n\n\n                    <tr><td></td><td></td></tr>\n                    <tr><td colSpan=\"2\"><hr /></td></tr>\n                    <tr><td></td><td></td></tr>\n\n\n                    {this.createTextInput(formdata.contributor,'contributor', \"Add your name here\", \"Contributor\")}\n\n                    \n\n                    <tr>\n                        <td colSpan=\"2\">\n                            \n                            <button \n                                type=\"button\" \n                                className=\"delete\"\n                                onClick={(e) => { if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e) } }\n                            >\n                                Delete item\n                            </button>\n                        </td>\n                    </tr>\n\n\n                    <tr className=\"half_width\">\n                        <td colSpan=\"2\" >\n                       \n                            <button type=\"button\" className=\"half_width_l\" onClick={this.cancel}>Cancel</button>\n                            <button type=\"submit\" className=\"half_width_r\">Save and Continue</button>\n\n                        </td>\n                        \n                    </tr>  \n\n\n                </tbody>\n                </table>\n\n                {this.state.saved ?\n                        <p className=\"message center\">Information saved!</p>\n                : null}\n\n                \n    \n\n            </form>\n            </div>\n        )\n    }\n\n\n    render() {\n        // console.log(this.state);\n\n        console.log(this.state.formdata);\n\n        let items = this.props.items;\n        // console.log(this.props);\n\n        return (\n            <div className=\"main_view\">\n                <div className=\"rl_container article edit_page\">\n                    {/* { items.item ?     */}\n                        {this.renderForm()}\n                    {/* : null } */}\n                </div>\n\n            {/* // <div className=\"form-group\">\n            //     <Progress max=\"100\" color=\"success\" value={this.state.loaded} >\n            //         { this.state.loaded ?\n            //             <div>    \n            //                 {Math.round(this.state.loaded,2)}\n            //                 %\n            //             </div>\n            //         :null}\n            //     </Progress>\n            // </div>\n\n            // <div className=\"form-group\">\n            //     <ToastContainer />\n            // </div> */}\n            </div>\n            \n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items:state.items\n    }\n}\n\nexport default connect(mapStateToProps)(EditItem)\n\n\n"]},"metadata":{},"sourceType":"module"}