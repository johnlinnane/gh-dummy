{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { getAllCats, getItemById, updateItem } from '../../actions';\n\nclass Sandbox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      catOptions: [],\n      selected: [{\n        value: '1',\n        label: 'Geography'\n      }, {\n        value: '2',\n        label: 'Fistory'\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getAllCats());\n    this.props.dispatch(getItemById('5edcbc5027c3271205b2360a'));\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let newCatOptions = [];\n\n    if (nextProps.cats && nextProps.cats.length) {\n      nextProps.cats.map((cat, i) => {\n        newCatOptions.push({\n          value: cat.cat_id,\n          label: cat.title\n        });\n      });\n      return {\n        catOptions: newCatOptions\n      };\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    const catOptions = this.state.catOptions;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Categories:\"), /*#__PURE__*/React.createElement(Select // defaultValue={[catOptions[2], catOptions[3]]}\n    , {\n      defaultValue: this.state.selected,\n      isMulti: true,\n      name: \"colors\",\n      options: catOptions,\n      className: \"basic-multi-select\",\n      classNamePrefix: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, this.props.cats && this.props.cats.length ? this.props.cats.map((cat, i) => /*#__PURE__*/React.createElement(\"p\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, cat.title)) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }, \"no cats yet\")));\n  }\n\n}\n\n;\n\nfunction mapStateToProps(state) {\n  // console.log(state); \n  return {\n    items: state.items,\n    cats: state.cats.cats\n  };\n}\n\nexport default connect(mapStateToProps)(Sandbox);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js"],"names":["React","connect","Select","getAllCats","getItemById","updateItem","Sandbox","Component","state","catOptions","selected","value","label","componentDidMount","props","dispatch","getDerivedStateFromProps","nextProps","prevState","newCatOptions","cats","length","map","cat","i","push","cat_id","title","render","console","log","mapStateToProps","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,QAAoD,eAApD;;AAKA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,QAAQ,EAAE,CACN;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,KAAK,EAAE;AAArB,OADM,EAEN;AAAED,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAFM;AAFN,KAF0B;AAAA;;AAUlCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,QAAX,CAAoBZ,UAAU,EAA9B;AACA,SAAKW,KAAL,CAAWC,QAAX,CAAoBX,WAAW,CAAC,0BAAD,CAA/B;AACH;;AAGD,SAAOY,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AAElD,QAAIC,aAAa,GAAG,EAApB;;AAEA,QAAIF,SAAS,CAACG,IAAV,IAAkBH,SAAS,CAACG,IAAV,CAAeC,MAArC,EAA6C;AAEzCJ,MAAAA,SAAS,CAACG,IAAV,CAAeE,GAAf,CAAoB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC5BL,QAAAA,aAAa,CAACM,IAAd,CAAmB;AACfd,UAAAA,KAAK,EAAEY,GAAG,CAACG,MADI;AAEfd,UAAAA,KAAK,EAAEW,GAAG,CAACI;AAFI,SAAnB;AAIH,OALD;AAQA,aAAO;AACHlB,QAAAA,UAAU,EAAEU;AADT,OAAP;AAGH;AAGJ;;AAIDS,EAAAA,MAAM,GAAG;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB;AAEA,UAAML,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA9B;AAKA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAGI,oBAAC,MAAD,CACI;AADJ;AAEI,MAAA,YAAY,EAAE,KAAKD,KAAL,CAAWE,QAF7B;AAGI,MAAA,OAAO,MAHX;AAII,MAAA,IAAI,EAAC,QAJT;AAKI,MAAA,OAAO,EAAED,UALb;AAMI,MAAA,SAAS,EAAC,oBANd;AAOI,MAAA,eAAe,EAAC,QAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKK,KAAL,CAAWM,IAAX,IAAmB,KAAKN,KAAL,CAAWM,IAAX,CAAgBC,MAAnC,GACG,KAAKP,KAAL,CAAWM,IAAX,CAAgBE,GAAhB,CAAqB,CAACC,GAAD,EAAMC,CAAN,kBACjB;AAAG,MAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYD,GAAG,CAACI,KAAhB,CADJ,CADH,gBAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALN,CAdJ,CADJ;AAyBH;;AA1EiC;;AA6ErC;;AAGD,SAASI,eAAT,CAAyBvB,KAAzB,EAAgC;AAC5B;AACA,SAAO;AACHwB,IAAAA,KAAK,EAACxB,KAAK,CAACwB,KADT;AAEHZ,IAAAA,IAAI,EAACZ,KAAK,CAACY,IAAN,CAAWA;AAFb,GAAP;AAIH;;AAID,eAAenB,OAAO,CAAC8B,eAAD,CAAP,CAAyBzB,OAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\n\nimport { getAllCats, getItemById, updateItem } from '../../actions';\n\n\n\n \nclass Sandbox extends React.Component {\n    \n    state = {\n        catOptions: [],\n        selected: [\n            { value: '1', label: 'Geography' },\n            { value: '2', label: 'Fistory' }\n        ]\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getAllCats());\n        this.props.dispatch(getItemById('5edcbc5027c3271205b2360a'));\n    }\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n    \n        let newCatOptions = [];\n\n        if (nextProps.cats && nextProps.cats.length) {\n\n            nextProps.cats.map( (cat, i) => {\n                newCatOptions.push({\n                    value: cat.cat_id,\n                    label: cat.title\n                })\n            })\n\n\n            return {\n                catOptions: newCatOptions\n            }\n        }\n    \n    \n    }\n\n\n    \n    render() {\n\n        console.log(this.props)\n\n        const catOptions = this.state.catOptions;\n\n\n        \n\n        return (\n            <div>\n                <h2>Categories:</h2>\n\n                <Select\n                    // defaultValue={[catOptions[2], catOptions[3]]}\n                    defaultValue={this.state.selected}\n                    isMulti\n                    name=\"colors\"\n                    options={catOptions}\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                />\n\n\n                <div>\n                    {this.props.cats && this.props.cats.length ?\n                        this.props.cats.map( (cat, i) => (\n                            <p key={i}>{cat.title}</p>\n                        ))\n                    : <p>no cats yet</p>}\n                </div>\n            \n            </div>\n        );\n    }\n\n\n};\n \n\nfunction mapStateToProps(state) {\n    // console.log(state); \n    return {\n        items:state.items,\n        cats:state.cats.cats\n    }\n}\n\n\n\nexport default connect(mapStateToProps)(Sandbox);\n\n"]},"metadata":{},"sourceType":"module"}