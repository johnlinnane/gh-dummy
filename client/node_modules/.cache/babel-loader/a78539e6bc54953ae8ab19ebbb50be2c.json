{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js\";\nimport React, { Component } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst glob = require('glob');\n\nclass Sandbox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      numPages: null,\n      pageNumber: 1\n    };\n\n    this.onDocumentLoadSuccess = ({\n      numPages\n    }) => {\n      this.setState({\n        numPages\n      });\n    };\n  }\n\n  // isFileImage(file) {\n  //     // if (file['type'].split('/')[0] === 'image') {\n  //         console.log(file['type'])\n  //     // };\n  // }\n  render() {\n    const {\n      pageNumber,\n      numPages\n    } = this.state;\n    glob(\"/images/items/5eb4417bf2ff151113f3e178/original\", {}, (err, files) => {\n      console.log(files);\n    }); // const filename = \"/images/items/5eb4417bf2ff151113f3e178/original/0.jpg\";\n    // this.isFileImage(filename);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Document, {\n      file: \"/images/items/5eb4417bf2ff151113f3e178/original/0.pdf\",\n      onLoadSuccess: this.onDocumentLoadSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Page, {\n      pageNumber: pageNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Page \", pageNumber, \" of \", numPages));\n  }\n\n}\n\nexport default Sandbox;","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js"],"names":["React","Component","Document","Page","pdfjs","GlobalWorkerOptions","workerSrc","version","glob","require","Sandbox","state","numPages","pageNumber","onDocumentLoadSuccess","setState","render","err","files","console","log"],"mappings":";AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,KAAzB,QAAsC,WAAtC;AACAA,KAAK,CAACC,mBAAN,CAA0BC,SAA1B,GAAuC,2CAA0CF,KAAK,CAACG,OAAQ,gBAA/F;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAIA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAI5BU,KAJ4B,GAIpB;AACJC,MAAAA,QAAQ,EAAE,IADN;AAEJC,MAAAA,UAAU,EAAE;AAFR,KAJoB;;AAAA,SAS5BC,qBAT4B,GASJ,CAAC;AAAEF,MAAAA;AAAF,KAAD,KAAkB;AACtC,WAAKG,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACH,KAX2B;AAAA;;AAa5B;AACA;AACA;AACA;AACA;AAKAI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEH,MAAAA,UAAF;AAAcD,MAAAA;AAAd,QAA2B,KAAKD,KAAtC;AAGAH,IAAAA,IAAI,CAAC,iDAAD,EAAoD,EAApD,EAAwD,CAACS,GAAD,EAAMC,KAAN,KAAc;AACtEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAFG,CAAJ,CAJK,CAQL;AACA;;AAGA,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAC,uDADT;AAEI,MAAA,aAAa,EAAE,KAAKJ,qBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIA,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAED,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASA,UAAT,UAAyBD,QAAzB,CAPJ,CADA;AAWH;;AA7C2B;;AAiDhC,eAAeF,OAAf","sourcesContent":["\n\n\nimport React, { Component } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n \nconst glob = require('glob');\n\n\n\nclass Sandbox extends Component {\n\n\n\n    state = {\n        numPages: null,\n        pageNumber: 1,\n    }\n \n    onDocumentLoadSuccess = ({ numPages }) => {\n        this.setState({ numPages });\n    }\n \n    // isFileImage(file) {\n    //     // if (file['type'].split('/')[0] === 'image') {\n    //         console.log(file['type'])\n    //     // };\n    // }\n\n\n    \n\n    render() {\n        const { pageNumber, numPages } = this.state;\n\n\n        glob(\"/images/items/5eb4417bf2ff151113f3e178/original\", {}, (err, files)=>{\n            console.log(files)\n        })\n\n        // const filename = \"/images/items/5eb4417bf2ff151113f3e178/original/0.jpg\";\n        // this.isFileImage(filename);\n\n    \n        return (\n        <div className=\"pdf\">\n            <Document\n                file=\"/images/items/5eb4417bf2ff151113f3e178/original/0.pdf\"\n                onLoadSuccess={this.onDocumentLoadSuccess}\n            >\n            <Page pageNumber={pageNumber} />\n            </Document>\n            <p>Page {pageNumber} of {numPages}</p>\n        </div>\n        );\n    }\n}\n\n\nexport default Sandbox;\n"]},"metadata":{},"sourceType":"module"}