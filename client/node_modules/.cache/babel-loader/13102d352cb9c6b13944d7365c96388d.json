{"ast":null,"code":"import _classCallCheck from\"/Users/johnlinnane/DEV/react-bootcamp/13_book_shelf/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/johnlinnane/DEV/react-bootcamp/13_book_shelf/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/johnlinnane/DEV/react-bootcamp/13_book_shelf/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/johnlinnane/DEV/react-bootcamp/13_book_shelf/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// check if token is valid\nimport React,{Component}from'react';import{connect}from'react-redux';import{auth}from'../actions';//  this is a post component\n// function that receives a class as an argument\n// returns the component !!\n// reload determines what type of redirect it should be\nexport default function(ComposedClass,reload){// make a class to dispatch an action to check if user is authenticated\nvar AuthenticationCheck=/*#__PURE__*/function(_Component){_inherits(AuthenticationCheck,_Component);var _super=_createSuper(AuthenticationCheck);function AuthenticationCheck(){var _this;_classCallCheck(this,AuthenticationCheck);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={// display loading logo\nloading:true};return _this;}_createClass(AuthenticationCheck,[{key:\"componentWillMount\",// dispatch an action to check if user is authenticated\nvalue:function componentWillMount(){this.props.dispatch(auth());}// check if props have been received\n},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){// console.log(nextProps);\nthis.setState({loading:false});// check if user is authenticated, show them corresponding screen\nif(!nextProps.user.login.isAuth){// stop infinite loop\nif(reload===true){this.props.history.push('/login');}}else{// kick back to user page if logged in\nif(reload===false){this.props.history.push('/user');}}}},{key:\"render\",value:function render(){// console.log(this. props);\nif(this.state.loading){return/*#__PURE__*/React.createElement(\"div\",{className:\"loader\"},\"Loading...\");}// return the actual route, with the data of the user (from react router)\nreturn/*#__PURE__*/React.createElement(ComposedClass,Object.assign({},this.props,{user:this.props.user}));}}]);return AuthenticationCheck;}(Component);function mapStateToProps(state){return{user:state.user};}return connect(mapStateToProps)(AuthenticationCheck);}","map":{"version":3,"sources":["/Users/johnlinnane/DEV/react-bootcamp/13_book_shelf/client/src/hoc/auth.js"],"names":["React","Component","connect","auth","ComposedClass","reload","AuthenticationCheck","state","loading","props","dispatch","nextProps","setState","user","login","isAuth","history","push","mapStateToProps"],"mappings":"orBACA;AAEA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,IAAT,KAAqB,YAArB,CAEA;AACA;AACA;AACA;AACA,cAAe,UAASC,aAAT,CAAwBC,MAAxB,CAAgC,CAE3C;AAF2C,GAGrCC,CAAAA,mBAHqC,+WAMvCC,KANuC,CAM/B,CACJ;AACAC,OAAO,CAAC,IAFJ,CAN+B,2EAYvC;AAZuC,mCAalB,CACjB,KAAKC,KAAL,CAAWC,QAAX,CAAoBP,IAAI,EAAxB,EACH,CAED;AAjBuC,4EAkBbQ,SAlBa,CAkBF,CAEjC;AAEA,KAAKC,QAAL,CAAc,CAACJ,OAAO,CAAC,KAAT,CAAd,EAEA;AACA,GAAG,CAACG,SAAS,CAACE,IAAV,CAAeC,KAAf,CAAqBC,MAAzB,CAAiC,CAC7B;AACA,GAAGV,MAAM,GAAK,IAAd,CAAoB,CAChB,KAAKI,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EACH,CACJ,CALD,IAKO,CACH;AACA,GAAGZ,MAAM,GAAK,KAAd,CAAqB,CACjB,KAAKI,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB,EACH,CACJ,CAEJ,CArCsC,uCA2C9B,CAEL;AAEA,GAAG,KAAKV,KAAL,CAAWC,OAAd,CAAuB,CACnB,mBAAO,2BAAK,SAAS,CAAC,QAAf,eAAP,CACH,CAED;AACA,mBACI,oBAAC,aAAD,kBAAmB,KAAKC,KAAxB,EAA+B,IAAI,CAAE,KAAKA,KAAL,CAAWI,IAAhD,GADJ,CAIH,CAxDsC,iCAGTZ,SAHS,EA4D3C,QAASiB,CAAAA,eAAT,CAAyBX,KAAzB,CAAgC,CAC5B,MAAO,CACHM,IAAI,CAACN,KAAK,CAACM,IADR,CAAP,CAGH,CACD,MAAOX,CAAAA,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,mBAAzB,CAAP,CACH","sourcesContent":["\n// check if token is valid\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { auth } from '../actions';\n\n//  this is a post component\n// function that receives a class as an argument\n// returns the component !!\n// reload determines what type of redirect it should be\nexport default function(ComposedClass, reload) {\n\n    // make a class to dispatch an action to check if user is authenticated\n    class AuthenticationCheck extends Component {\n\n\n        state = {\n            // display loading logo\n            loading:true\n        }\n\n\n        // dispatch an action to check if user is authenticated\n        componentWillMount() {\n            this.props.dispatch(auth())\n        }\n\n        // check if props have been received\n        componentWillReceiveProps(nextProps) {\n        \n            // console.log(nextProps);\n\n            this.setState({loading:false})\n\n            // check if user is authenticated, show them corresponding screen\n            if(!nextProps.user.login.isAuth) {\n                // stop infinite loop\n                if(reload === true) {\n                    this.props.history.push('/login');\n                }\n            } else {\n                // kick back to user page if logged in\n                if(reload === false) {\n                    this.props.history.push('/user')\n                }\n            }\n\n        }\n\n\n\n\n\n        render() {\n\n            // console.log(this. props);\n\n            if(this.state.loading) {\n                return <div className=\"loader\">Loading...</div>\n            }\n\n            // return the actual route, with the data of the user (from react router)\n            return(\n                <ComposedClass {...this.props} user={this.props.user}/>\n\n            )\n        }\n\n    }\n\n    function mapStateToProps(state) {\n        return {\n            user:state.user\n        }\n    }\n    return connect(mapStateToProps)(AuthenticationCheck)\n}\n"]},"metadata":{},"sourceType":"module"}