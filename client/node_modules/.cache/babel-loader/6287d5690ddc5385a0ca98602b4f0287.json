{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/react-bootcamp/13_book_shelf/client/src/hoc/auth.js\";\n// check if token is valid\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { auth } from '../actions'; //  this is a post component\n// function that receives a class as an argument\n// returns the component !!\n\nexport default function (ComposedClass) {\n  // make a class to dispatch an action to check if user is authenticated\n  class AuthenticationCheck extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        // display loading logo\n        loading: true\n      };\n    }\n\n    // dispatch an action to check if user is authenticated\n    componentWillMount() {\n      this.props.dispatch(auth());\n    } // check if props have been received\n\n\n    componentWillReceiveProps(nextProps) {\n      // console.log(nextProps);\n      this.setState({\n        loading: false\n      }); // check if user is authenticated, show them corresponding screen\n\n      if (!nextProps.user.login.isAuth) {} else {}\n    }\n\n    render() {\n      if (this.state.loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"loader\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 24\n          }\n        }, \"Loading...\");\n      } // return the actual route, with the data of the user (from react router)\n\n\n      return /*#__PURE__*/React.createElement(ComposedClass, Object.assign({}, this.props, {\n        user: this.props.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }));\n    }\n\n  }\n\n  function mapStateToProps(state) {\n    return {\n      user: state.user\n    };\n  }\n\n  return connect(mapStateToProps)(AuthenticationCheck);\n}","map":{"version":3,"sources":["/Users/johnlinnane/DEV/react-bootcamp/13_book_shelf/client/src/hoc/auth.js"],"names":["React","Component","connect","auth","ComposedClass","AuthenticationCheck","state","loading","componentWillMount","props","dispatch","componentWillReceiveProps","nextProps","setState","user","login","isAuth","render","mapStateToProps"],"mappings":";AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAyB,aAAzB;AAEA,SAASC,IAAT,QAAqB,YAArB,C,CAEA;AACA;AACA;;AACA,eAAe,UAASC,aAAT,EAAwB;AAEnC;AACA,QAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;AAAA;AAAA;AAAA,WAGxCK,KAHwC,GAGhC;AACJ;AACAC,QAAAA,OAAO,EAAC;AAFJ,OAHgC;AAAA;;AASxC;AACAC,IAAAA,kBAAkB,GAAG;AACjB,WAAKC,KAAL,CAAWC,QAAX,CAAoBP,IAAI,EAAxB;AACH,KAZuC,CAcxC;;;AACAQ,IAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC;AACA,WAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAC;AAAT,OAAd,EAFiC,CAIjC;;AACA,UAAG,CAACK,SAAS,CAACE,IAAV,CAAeC,KAAf,CAAqBC,MAAzB,EAAiC,CAEhC,CAFD,MAEO,CAEN;AAEJ;;AAMDC,IAAAA,MAAM,GAAG;AACL,UAAG,KAAKX,KAAL,CAAWC,OAAd,EAAuB;AACnB,4BAAO;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH,OAHI,CAKL;;;AACA,0BACI,oBAAC,aAAD,oBAAmB,KAAKE,KAAxB;AAA+B,QAAA,IAAI,EAAE,KAAKA,KAAL,CAAWK,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAIH;;AA1CuC;;AA8C5C,WAASI,eAAT,CAAyBZ,KAAzB,EAAgC;AAC5B,WAAO;AACHQ,MAAAA,IAAI,EAACR,KAAK,CAACQ;AADR,KAAP;AAGH;;AACD,SAAOZ,OAAO,CAACgB,eAAD,CAAP,CAAyBb,mBAAzB,CAAP;AACH","sourcesContent":["\n// check if token is valid\n\nimport React, { Component } from 'react';\nimport { connect } from  'react-redux';\n\nimport { auth } from '../actions';\n\n//  this is a post component\n// function that receives a class as an argument\n// returns the component !!\nexport default function(ComposedClass) {\n\n    // make a class to dispatch an action to check if user is authenticated\n    class AuthenticationCheck extends Component {\n\n\n        state = {\n            // display loading logo\n            loading:true\n        }\n\n\n        // dispatch an action to check if user is authenticated\n        componentWillMount() {\n            this.props.dispatch(auth())\n        }\n\n        // check if props have been received\n        componentWillReceiveProps(nextProps) {\n            // console.log(nextProps);\n            this.setState({loading:false})\n\n            // check if user is authenticated, show them corresponding screen\n            if(!nextProps.user.login.isAuth) {\n\n            } else {\n\n            }\n\n        }\n\n\n\n\n\n        render() {\n            if(this.state.loading) {\n                return <div className=\"loader\">Loading...</div>\n            }\n\n            // return the actual route, with the data of the user (from react router)\n            return(\n                <ComposedClass {...this.props} user={this.props.user}/>\n\n            )\n        }\n\n    }\n\n    function mapStateToProps(state) {\n        return {\n            user:state.user\n        }\n    }\n    return connect(mapStateToProps)(AuthenticationCheck)\n}\n"]},"metadata":{},"sourceType":"module"}