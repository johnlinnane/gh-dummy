{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions'; // import Tags from '../../widgetsUI/tags';\n\nclass EditItem extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        _id: this.props.match.params.id,\n        title: '',\n        creator: '',\n        subject: '',\n        description: '',\n        source: '',\n        date_created: '',\n        contributor: '',\n        // collection_id: '',     \n        item_format: '',\n        materials: '',\n        physical_dimensions: '',\n        pages: '',\n        editor: '',\n        publisher: '',\n        further_info: '',\n        language: '',\n        reference: '',\n        rights: '',\n        file_format: '',\n        address: '',\n        // category_ref: '',\n        subcategory_ref: '',\n        // tags: [\n        //     {\n        //         id: '',\n        //         text: ''\n        //     }\n        // ],\n        external_link: {\n          url: '',\n          text: ''\n        },\n        geo: {\n          address: ''\n        }\n      },\n      selectedFile: null,\n      loaded: 0,\n      // categories\n      catOptions: [],\n      existingCats: [],\n      updatedCats: [],\n      catsAreUpdated: false,\n      // tags\n      existingTags: [],\n      updatedTags: [],\n      tagsAreUpdated: false,\n      // collection\n      collOptions: [{\n        value: null,\n        label: 'None'\n      }],\n      existingColl: null,\n      updatedColl: null,\n      collIsUpdated: false,\n      isClearable: true,\n      isDisabled: false,\n      isLoading: false,\n      isRtl: false,\n      isSearchable: true,\n      count: 1\n    };\n\n    this.handleInput = (event, name, level) => {\n      // make a copy of formdata\n      const newFormdata = { ...this.state.formdata\n      };\n\n      if (level === 'external_link') {\n        newFormdata.external_link[name] = event.target.value;\n      } else if (level === 'geo') {\n        newFormdata.geo[name] = event.target.value;\n      } else if (level === 'tags') {\n        newFormdata.tags[name] = event.target.value;\n      } else {\n        newFormdata[name] = event.target.value;\n      } // copy it back to state\n\n\n      this.setState({\n        formdata: newFormdata\n      });\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.state.formdata._id));\n      this.props.history.push('/user/all-items');\n    };\n\n    this.redirectUser = () => {\n      setTimeout(() => {\n        this.props.history.push('/user/all-items');\n      }, 1000);\n    };\n\n    this.handleChangeCats = newValue => {\n      if (newValue && newValue.length) {\n        this.setState({\n          updatedCats: [...newValue]\n        });\n      } else {\n        this.setState({\n          updatedCats: []\n        });\n      }\n    };\n\n    this.handleChangeTags = newValue => {\n      if (newValue && newValue.length) {\n        console.log(newValue);\n        this.setState({\n          updatedTags: [...newValue]\n        });\n      } else {\n        this.setState({\n          updatedTags: []\n        });\n      }\n    };\n\n    this.handleChangeColl = newValue => {\n      console.log(newValue);\n\n      if (newValue) {\n        this.setState({\n          updatedColl: newValue\n        });\n      }\n    };\n\n    this.submitForm = e => {\n      e.preventDefault(); // console.log(this.state.formdata);\n\n      let updateData = { ...this.state.formdata\n      };\n\n      if (this.state.updatedCats && this.state.updatedCats.length) {\n        this.state.updatedCats.map(cat => {\n          updateData.category_ref.push(cat.value);\n        });\n      }\n\n      if (this.state.updatedTags && this.state.updatedTags.length) {\n        this.state.updatedTags.map(tag => {\n          updateData.tags.push(tag);\n        });\n      }\n\n      if (this.state.updatedColl) {\n        updateData.collection_id = this.state.updatedColl.value;\n      } // this.onClickHandlerCats();\n      // this.onClickHandlerTags();\n      // this.onClickHandlerColl();\n\n\n      console.log(this.state);\n      this.props.dispatch(updateItem({ ...updateData // ...this.state.formdata\n\n      }));\n    };\n\n    this.createTextInput = (stateVar, name, placeholder, label, level) => {\n      // let string = `this.state.formdata.${variable}`;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 17\n        }\n      }, label), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form_element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: placeholder,\n        value: stateVar,\n        onChange: event => this.handleInput(event, name, level),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 25\n        }\n      }))));\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {\n        this.setState({\n          selectedFile: files\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n\n      for (var x = 0; x < this.state.selectedFile.length; x++) {\n        data.append('file', this.state.selectedFile[x]);\n      }\n\n      axios.post(`http://localhost:8000/upload`, data, {\n        // receive two parameter endpoint url ,form data \n        onUploadProgress: ProgressEvent => {\n          this.setState({\n            loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n          });\n        }\n      }).then(res => {\n        // then print response status\n        console.log(res.statusText);\n        toast.success('upload success');\n      }).catch(err => {\n        toast.error('upload fail');\n      });\n    };\n\n    this.maxSelectFile = event => {\n      let files = event.target.files; // create file object\n\n      if (files.length > 6) {\n        const msg = 'Only 6 images can be uploaded at a time';\n        event.target.value = null; // discard selected file\n\n        console.log(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = ''; // list allow mime type\n\n      const types = ['image/png', 'image/jpeg', 'image/gif']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // loop create toast massage\n        event.target.value = null;\n        toast.error(err[z]);\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 15000;\n      let err = \"\";\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err += files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById(this.props.match.params.id));\n    this.props.dispatch(getAllColls());\n    this.props.dispatch(getAllCats());\n    this.props.dispatch(getAllSubCats());\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearItem());\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // console.log(nextProps);\n    let formReturn;\n    let catReturn;\n    let tagReturn;\n    let collReturn; // *********** GENERAL FORM STUFF *****************************\n\n    if (nextProps.items.item) {\n      let item = nextProps.items.item;\n      let formdata = prevState.formdata; // console.log(formdata);\n\n      formdata = { ...formdata,\n        _id: item._id,\n        title: item.title,\n        //\n        creator: item.creator,\n        //\n        description: item.description,\n        //\n        pages: item.pages,\n        //\n        // collection_id:item.collection_id,  //\n        source: item.source,\n        //\n        subject: item.subject,\n        date_created: item.date_created,\n        // tags: item.tags,\n        contributor: item.contributor,\n        item_format: item.item_format,\n        materials: item.materials,\n        physical_dimensions: item.physical_dimensions,\n        editor: item.editor,\n        publisher: item.publisher,\n        further_info: item.further_info,\n        language: item.language,\n        reference: item.reference,\n        rights: item.rights,\n        file_format: item.file_format,\n        // category_ref: item.category_ref,\n        subcategory_ref: item.subcategory_ref\n      }; // console.log(formdata);\n\n      if (item.external_link && item.external_link.length && item.external_link.url) {\n        formdata = { ...formdata,\n          external_link: {\n            url: item.external_link[0].url,\n            text: item.external_link[0].text\n          }\n        };\n      } // console.log(formdata);\n\n\n      if (item.geo && item.geo.length && item.geo.address) {\n        formdata = { ...formdata,\n          geo: {\n            address: item.geo.address\n          }\n        };\n      } // console.log(formdata);\n\n\n      formReturn = formdata; // console.log(formReturn);\n    } // *********** CATEGORY SELECT *****************************\n\n\n    let catOptionsFromProps = prevState.catOptions;\n    let catsFromProps = prevState.existingCats; // let catOptionsFromProps = [];\n    // let catsFromProps = [];\n    // console.log(prevState.existingCats);\n\n    if (nextProps.cats && nextProps.cats.length) {\n      nextProps.cats.map((cat, i) => {\n        catOptionsFromProps.push({\n          value: cat.cat_id,\n          label: cat.title\n        });\n      });\n\n      if (nextProps.items && nextProps.items.item && nextProps.items.item.category_ref && nextProps.items.item.category_ref.length) {\n        // console.log(nextProps.items.item.category_ref);\n        nextProps.items.item.category_ref.map((catref, i) => {\n          let catTitle;\n          nextProps.cats.map((cat, i) => {\n            if (cat.cat_id == catref) {\n              catTitle = cat.title;\n              let element = {\n                value: catref,\n                label: catTitle\n              };\n\n              if (!catsFromProps.includes(element)) {\n                // console.log('push!');\n                catsFromProps.push(element);\n              }\n            }\n          });\n        });\n      }\n    } // console.log(catsFromProps);\n\n\n    catReturn = {\n      catOptions: catOptionsFromProps,\n      existingCats: catsFromProps,\n      catsAreUpdated: true\n    }; // console.log(catReturn);\n    // *********** TAGS SELECT *****************************\n\n    let tagsFromProps = [];\n\n    if (nextProps.items.item && nextProps.items.item.tags) {\n      nextProps.items.item.tags.map(tag => {\n        tagsFromProps.push({\n          value: tag.value,\n          label: tag.label\n        });\n      });\n    }\n\n    tagReturn = {\n      existingTags: tagsFromProps,\n      tagsAreUpdated: true\n    }; // *********** COLLECTION SELECT *****************************\n\n    let collOptionsFromProps = [];\n    let collFromProps = null;\n\n    if (nextProps.colls && nextProps.colls.length) {\n      nextProps.colls.map(coll => {\n        collOptionsFromProps.push({\n          value: coll.id,\n          label: coll.title\n        });\n      });\n\n      if (nextProps.items && nextProps.items.item && nextProps.items.item.collection_id) {\n        nextProps.colls.map(coll => {\n          let collTitle = null;\n\n          if (coll.id == nextProps.items.item.collection_id) {\n            collTitle = coll.title;\n            collFromProps = {\n              value: nextProps.items.item.collection_id,\n              label: collTitle\n            };\n          }\n        });\n      } // console.log(collOptionsFromProps);\n\n\n      collReturn = {\n        collOptions: collOptionsFromProps,\n        existingColl: collFromProps,\n        collIsUpdated: true\n      }; // console.log(collReturn);\n    } // *********** RETURN *****************************\n\n\n    let allColls,\n        prevColls,\n        updateColls = [];\n\n    if (collReturn) {\n      allColls = [prevState.collOptions, ...collReturn.collOptions];\n      prevColls = collReturn.existingColl;\n      updateColls = collReturn.collIsUpdated;\n    }\n\n    let count = prevState.count++;\n    return {\n      formdata: { ...formReturn\n      },\n      catOptions: catReturn.catOptions,\n      existingCats: catReturn.existingCats,\n      catsAreUpdated: catReturn.catsAreUpdated,\n      existingTags: tagReturn.existingTags,\n      tagsAreUpdated: tagReturn.tagsAreUpdated,\n      collOptions: allColls,\n      existingColl: prevColls,\n      collIsUpdated: updateColls,\n      updated: true,\n      count: count\n    };\n  } // CAT HANDLERS\n\n\n  render() {\n    console.log(this.state.count);\n    let items = this.props.items;\n    const {\n      isClearable,\n      isSearchable,\n      isDisabled,\n      isLoading,\n      isRtl\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article edit_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 13\n      }\n    }, items.updateItem ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 29\n      }\n    }, \"Post updated, \", /*#__PURE__*/React.createElement(Link, {\n      to: `/items/${items.item._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 47\n      }\n    }, \"Click here to see your post\")) : null, items.itemDeleted ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red_tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 29\n      }\n    }, \"Item Deleted\", this.redirectUser()) : null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 25\n      }\n    }, \"Edit item:\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: `/images/items/${this.state.formdata._id}/sq_thumbnail/0.jpg`,\n      alt: \"Item\",\n      onError: this.addDefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 25\n      }\n    }, this.createTextInput(this.state.formdata.title, 'title', \"Enter title\", \"Title\"), this.createTextInput(this.state.formdata.creator, 'creator', \"Enter creator\", \"Creator\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 33\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.formdata.description,\n      onChange: event => this.handleInput(event, 'description'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 33\n      }\n    }, \"Pages\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter pages\",\n      value: this.state.formdata.pages,\n      onChange: event => this.handleInput(event, 'pages'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 41\n      }\n    })))), this.createTextInput(this.state.formdata.source, 'source', \"Enter item source\", \"Source\"), this.createTextInput(this.state.formdata.subject, 'subject', \"Subject\", \"Subject\"), this.createTextInput(this.state.formdata.date_created, 'date_created', \"Date item was created\", \"Date\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 33\n      }\n    }, \"Tags\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 33\n      }\n    }, this.state.tagsAreUpdated && this.props.items && this.props.items.item ? /*#__PURE__*/React.createElement(CreatableSelect, {\n      defaultValue: this.state.existingTags,\n      isMulti: true,\n      onChange: this.handleChangeTags,\n      options: this.state.updatedTags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 41\n      }\n    }) : null)), this.createTextInput(this.state.formdata.contributor, 'contributor', \"contributor\", \"Contributor\"), this.createTextInput(this.state.formdata.item_format, 'item_format', \"The item's format\", \"Format\"), this.createTextInput(this.state.formdata.materials, 'materials', \"materials\", \"Materials\"), this.createTextInput(this.state.formdata.physical_dimensions, 'physical_dimensions', \"Physical dimensions\", \"Dimensions\"), this.createTextInput(this.state.formdata.editor, 'editor', \"editor\", \"Editor\"), this.createTextInput(this.state.formdata.publisher, 'publisher', \"publisher\", \"Publisher\"), this.createTextInput(this.state.formdata.further_info, 'further_info', \"Enter any further info, resources..\", \"Further Info\"), this.createTextInput(this.state.formdata.language, 'language', \"language\", \"Language\"), this.createTextInput(this.state.formdata.reference, 'reference', \"reference\", \"Ref\"), this.createTextInput(this.state.formdata.rights, 'rights', \"rights\", \"Rights\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 33\n      }\n    }, \"Collection\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 37\n      }\n    }, this.state.collIsUpdated && this.props.items && this.props.items.item ? /*#__PURE__*/React.createElement(Select, {\n      className: \"basic-single\",\n      classNamePrefix: \"select\",\n      defaultValue: this.state.existingColl,\n      isDisabled: isDisabled,\n      isLoading: isLoading,\n      isClearable: isClearable,\n      isRtl: isRtl,\n      isSearchable: isSearchable,\n      name: \"color\",\n      options: this.state.collOptions,\n      onChange: this.handleChangeColl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 45\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 33\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 37\n      }\n    }, this.state.catsAreUpdated && this.props.items && this.props.items.item ? /*#__PURE__*/React.createElement(Select, {\n      defaultValue: this.state.existingCats,\n      isMulti: true,\n      name: \"colors\",\n      options: this.state.catOptions,\n      className: \"basic-multi-select\",\n      classNamePrefix: \"select\",\n      onChange: this.handleChangeCats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 45\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 33\n      }\n    }, \"Sub-categories\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 33\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      multiple: true,\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 41\n      }\n    }, \"Upload\")))))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 25\n      }\n    }, \"Submit Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"delete_post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: e => {\n        if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 29\n      }\n    }, \"Delete item\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items,\n    colls: state.collections.colls,\n    cats: state.cats.cats,\n    subcats: state.cats.subcats\n  };\n}\n\nexport default connect(mapStateToProps)(EditItem);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js"],"names":["React","PureComponent","connect","Link","axios","ToastContainer","toast","Select","CreatableSelect","getItemById","updateItem","clearItem","deleteItem","getAllColls","getAllCats","getAllSubCats","EditItem","state","formdata","_id","props","match","params","id","title","creator","subject","description","source","date_created","contributor","item_format","materials","physical_dimensions","pages","editor","publisher","further_info","language","reference","rights","file_format","address","subcategory_ref","external_link","url","text","geo","selectedFile","loaded","catOptions","existingCats","updatedCats","catsAreUpdated","existingTags","updatedTags","tagsAreUpdated","collOptions","value","label","existingColl","updatedColl","collIsUpdated","isClearable","isDisabled","isLoading","isRtl","isSearchable","count","handleInput","event","name","level","newFormdata","target","tags","setState","deletePost","dispatch","history","push","redirectUser","setTimeout","handleChangeCats","newValue","length","handleChangeTags","console","log","handleChangeColl","submitForm","e","preventDefault","updateData","map","cat","category_ref","tag","collection_id","createTextInput","stateVar","placeholder","onChangeHandler","files","maxSelectFile","checkMimeType","onClickHandler","data","FormData","x","append","post","onUploadProgress","ProgressEvent","total","then","res","statusText","success","catch","err","error","msg","types","every","type","z","checkFileSize","size","addDefaultImg","ev","newImg","src","componentDidMount","componentWillUnmount","getDerivedStateFromProps","nextProps","prevState","formReturn","catReturn","tagReturn","collReturn","items","item","catOptionsFromProps","catsFromProps","cats","i","cat_id","catref","catTitle","element","includes","tagsFromProps","collOptionsFromProps","collFromProps","colls","coll","collTitle","allColls","prevColls","updateColls","updated","render","itemDeleted","window","confirm","mapStateToProps","collections","subcats"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\n\n\n\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats  } from '../../actions';\n// import Tags from '../../widgetsUI/tags';\n\n\n\nclass EditItem extends PureComponent {\n\n\n    state = {\n        formdata:{\n            _id:this.props.match.params.id,\n            title: '',\n            creator: '',\n            subject: '',\n            description: '',\n            source: '',\n            date_created: '',\n            \n            contributor: '',\n            // collection_id: '',     \n            item_format: '',\n            materials: '',\n            physical_dimensions: '',\n            pages: '',        \n            editor: '',\n            publisher: '',\n            further_info: '',\n            language: '',\n            reference: '',\n            rights: '',\n            file_format: '',\n            address: '',\n            // category_ref: '',\n            subcategory_ref: '',\n            // tags: [\n            //     {\n            //         id: '',\n            //         text: ''\n            //     }\n            // ],\n            external_link: {\n                url: '',\n                text: ''\n            },\n            geo: {\n                address: ''\n            }\n        },\n        selectedFile: null,\n        loaded: 0,\n        // categories\n        catOptions: [],\n        existingCats: [],\n        updatedCats: [],\n        catsAreUpdated: false,\n        // tags\n        existingTags: [],\n        updatedTags: [],\n        tagsAreUpdated: false,\n        // collection\n        collOptions: [{ value: null, label: 'None' } ],\n        existingColl: null,\n        updatedColl: null,\n        collIsUpdated: false,\n  \n        isClearable: true,\n        isDisabled: false,\n        isLoading: false,\n        isRtl: false,\n        isSearchable: true,\n        count: 1\n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(getItemById(this.props.match.params.id))\n        this.props.dispatch(getAllColls())\n        this.props.dispatch(getAllCats());\n        this.props.dispatch(getAllSubCats());\n    }\n\n\n    componentWillUnmount() {\n        this.props.dispatch(clearItem())\n    }\n\n    handleInput = (event, name, level) => {\n        // make a copy of formdata\n        const newFormdata = {\n            ...this.state.formdata\n        }\n\n\n        if (level === 'external_link') {\n            newFormdata.external_link[name] = event.target.value;\n        } else if (level === 'geo') {\n            newFormdata.geo[name] = event.target.value;\n        } else if (level === 'tags') {\n            newFormdata.tags[name] = event.target.value;\n        } else {\n            newFormdata[name] = event.target.value;\n        }\n\n\n        // copy it back to state\n        this.setState({\n            formdata:newFormdata\n\n        })\n    }\n\n\n\n\n    \n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.state.formdata._id));\n        this.props.history.push('/user/all-items');\n    }\n\n\n\n    redirectUser = () => {\n        setTimeout(() => {\n            this.props.history.push('/user/all-items')\n        }, 1000)\n    }\n\n\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        \n        // console.log(nextProps);\n\n        let formReturn;\n        let catReturn;\n        let tagReturn;\n        let collReturn;\n\n        // *********** GENERAL FORM STUFF *****************************\n        if (nextProps.items.item ) {\n\n            let item = nextProps.items.item;\n                        \n            let formdata = prevState.formdata;\n            // console.log(formdata);\n\n            formdata = {\n                ...formdata,\n                _id:item._id,\n                title:item.title,  //\n                creator:item.creator,  //\n                description:item.description,  //\n                pages:item.pages,  //\n                // collection_id:item.collection_id,  //\n                source:item.source,   //\n\n                subject: item.subject,\n                date_created: item.date_created,\n                // tags: item.tags,\n                contributor: item.contributor,\n                item_format: item.item_format,\n                materials: item.materials,\n                physical_dimensions: item.physical_dimensions,\n                editor: item.editor,\n                publisher: item.publisher,\n                further_info: item.further_info,\n                language: item.language,\n                reference: item.reference,\n                rights: item.rights,\n                file_format: item.file_format,\n                // category_ref: item.category_ref,\n                subcategory_ref: item.subcategory_ref\n            }\n\n            // console.log(formdata);\n            \n            if (item.external_link && item.external_link.length && item.external_link.url) {\n                formdata = {\n                    ...formdata,\n                    external_link : {\n                        url: item.external_link[0].url,\n                        text: item.external_link[0].text\n                    }\n                }\n\n            }\n                \n            // console.log(formdata);\n\n\n            if (item.geo && item.geo.length && item.geo.address) {\n                formdata = {\n                    ...formdata,\n                    geo: {\n                        address: item.geo.address\n                    }\n                }\n            }\n\n            // console.log(formdata);\n            formReturn = formdata;\n            \n            // console.log(formReturn);\n\n        }\n\n\n        // *********** CATEGORY SELECT *****************************\n\n        let catOptionsFromProps = prevState.catOptions;\n        let catsFromProps = prevState.existingCats;\n        // let catOptionsFromProps = [];\n        // let catsFromProps = [];\n        // console.log(prevState.existingCats);\n\n\n        if (nextProps.cats && nextProps.cats.length) {\n            nextProps.cats.map( (cat, i) => {\n                catOptionsFromProps.push({\n                    value: cat.cat_id,\n                    label: cat.title\n                })\n            })\n\n            if (nextProps.items && nextProps.items.item && nextProps.items.item.category_ref && nextProps.items.item.category_ref.length ) {\n                // console.log(nextProps.items.item.category_ref);\n                nextProps.items.item.category_ref.map( (catref, i) => {\n                    let catTitle;\n                    nextProps.cats.map( (cat, i) => {\n                        if (cat.cat_id == catref) {\n                            catTitle = cat.title;\n                            let element = {\n                                value: catref,\n                                label: catTitle\n                            };\n                            if (!catsFromProps.includes(element)) {\n                                // console.log('push!');\n                                catsFromProps.push(element)\n                            }\n                        }\n                    })\n                    \n                })\n            }\n        }\n\n        // console.log(catsFromProps);\n\n        catReturn = {\n            catOptions: catOptionsFromProps,\n            existingCats: catsFromProps,\n            catsAreUpdated: true\n        }\n\n        // console.log(catReturn);\n\n        // *********** TAGS SELECT *****************************\n\n        let tagsFromProps = [];\n\n        if (nextProps.items.item && nextProps.items.item.tags) {\n            nextProps.items.item.tags.map( tag => {\n                tagsFromProps.push({\n                    value: tag.value,\n                    label: tag.label\n                })\n            })\n            \n        }\n        tagReturn = {\n            existingTags: tagsFromProps,\n            tagsAreUpdated: true\n        }\n\n        // *********** COLLECTION SELECT *****************************\n        let collOptionsFromProps = [];\n        let collFromProps = null;\n\n\n        if (nextProps.colls && nextProps.colls.length) {\n            nextProps.colls.map( coll => {\n                collOptionsFromProps.push({\n                    value: coll.id,\n                    label: coll.title\n                })\n            })\n\n            if (nextProps.items && nextProps.items.item && nextProps.items.item.collection_id) {\n                nextProps.colls.map ( coll => {\n                    let collTitle = null;\n                    if (coll.id == nextProps.items.item.collection_id) {\n                        collTitle = coll.title;\n\n                        collFromProps = {\n                            value: nextProps.items.item.collection_id,\n                            label: collTitle\n                        }\n                    }\n                })\n            }\n\n            // console.log(collOptionsFromProps);\n\n            collReturn =  {\n                collOptions: collOptionsFromProps,\n                existingColl: collFromProps,\n                collIsUpdated: true\n            }\n            // console.log(collReturn);\n        }\n        // *********** RETURN *****************************\n\n  \n        let allColls, prevColls, updateColls = [];\n        if (collReturn) {\n            allColls = [prevState.collOptions, ...collReturn.collOptions];\n            prevColls = collReturn.existingColl;\n            updateColls = collReturn.collIsUpdated;\n        }\n\n\n\n        let count = prevState.count++;\n\n        return {\n            formdata: {...formReturn},\n\n            catOptions: catReturn.catOptions,\n            existingCats: catReturn.existingCats,\n            catsAreUpdated: catReturn.catsAreUpdated,\n            \n            existingTags: tagReturn.existingTags,\n            tagsAreUpdated: tagReturn.tagsAreUpdated,\n            \n            collOptions: allColls,\n            existingColl: prevColls,\n            collIsUpdated: updateColls,\n\n            updated: true,\n            count: count\n        }\n\n    }\n\n    // CAT HANDLERS\n\n    handleChangeCats = (newValue) => {\n        if (newValue && newValue.length) {\n            this.setState({ \n                updatedCats: [...newValue]\n            });\n        } else {\n            this.setState({ \n                updatedCats: []\n            });\n        }\n\n\n    };\n\n    // onClickHandlerCats = () => {\n    //     let updateData = {\n    //         _id: this.props.match.params.id,\n    //         category_ref: []\n    //     };\n    //     if (this.state.updatedCats && this.state.updatedCats.length) {\n    //         this.state.updatedCats.map( cat => {\n    //             updateData.category_ref.push(cat.value);\n    //         })\n    //     } \n    //     this.props.dispatch(updateItem({\n    //         ...updateData\n    //     }))\n    // }\n\n\n    // TAG HANDLERS\n\n    handleChangeTags = (newValue) => {\n        if (newValue && newValue.length) {\n            console.log(newValue)\n            this.setState({ \n                updatedTags: [...newValue]\n            });\n\n        } else {\n            this.setState({ \n                updatedTags: []\n            });\n        }\n    };\n\n    // onClickHandlerTags = () => {\n    //     let updateData = {\n    //         _id: this.props.match.params.id,\n    //         tags: []\n    //     };\n\n    //     if (this.state.updatedTags && this.state.updatedTags.length) {\n    //         this.state.updatedTags.map( tag => {\n    //             updateData.tags.push(tag);\n    //         })\n    //     } \n    //     this.props.dispatch(updateItem({\n    //         ...updateData\n    //     }))\n    // }\n\n    // COLL HANDLERS\n\n    handleChangeColl = (newValue) => {\n        console.log(newValue);\n        if (newValue) {\n            this.setState({ \n                updatedColl: newValue\n            });\n        } \n    };\n\n    // onClickHandlerColl = () => {\n\n    //     let updateData = {\n    //         _id: this.props.match.params.id,\n    //         collection_id: null\n    //     };\n    //     if (this.state.updatedColl ) {\n    //         updateData.collection_id = this.state.updatedColl.value;\n    //     } \n    //     this.props.dispatch(updateItem({\n    //         ...updateData\n    //     }))\n    // }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        // console.log(this.state.formdata);\n\n\n        let updateData = { ...this.state.formdata }\n\n        \n\n        \n        if (this.state.updatedCats && this.state.updatedCats.length) {\n\n            this.state.updatedCats.map( cat => {\n                updateData.category_ref.push(cat.value);\n            })\n        } \n\n        if (this.state.updatedTags && this.state.updatedTags.length) {\n            this.state.updatedTags.map( tag => {\n                updateData.tags.push(tag);\n            })\n        } \n        if (this.state.updatedColl ) {\n            updateData.collection_id = this.state.updatedColl.value;\n        } \n\n\n        // this.onClickHandlerCats();\n        // this.onClickHandlerTags();\n        // this.onClickHandlerColl();\n\n        console.log(this.state);\n\n        this.props.dispatch(updateItem({\n                ...updateData\n                // ...this.state.formdata\n            }\n        ))\n    }\n\n    \n\n\n\n    createTextInput = (stateVar, name, placeholder, label, level) => {\n        // let string = `this.state.formdata.${variable}`;\n\n        return (\n            <tr>\n                <td>\n                    {label}\n                </td>\n                <td>\n                    <div className=\"form_element\">\n                        <input\n                            type=\"text\"\n                            placeholder={placeholder}\n                            value={stateVar} \n                            onChange={(event) => this.handleInput(event, name, level)}\n                        />\n                    </div>\n                </td>\n                \n            </tr>\n        )\n    }\n\n\n\n    // ************** FILE UPLOAD STUFF *******************\n\n    onChangeHandler = (event) => {\n\n\n        var files = event.target.files;\n\n        if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {  \n            this.setState({\n                selectedFile: files\n            })\n        }\n    }\n\n\n\n    onClickHandler = () => {\n        const data = new FormData() \n        \n        for(var x = 0; x<this.state.selectedFile.length; x++) {\n            data.append('file', this.state.selectedFile[x])\n        }\n        \n        axios.post(`http://localhost:8000/upload`, data, { \n                // receive two parameter endpoint url ,form data \n                onUploadProgress: ProgressEvent => {\n                    this.setState({\n                        loaded: (ProgressEvent.loaded / ProgressEvent.total*100)\n                    })\n                }\n            })\n            .then(res => { // then print response status\n                console.log(res.statusText)\n                toast.success('upload success')\n            })\n            .catch(err => { \n                toast.error('upload fail')\n            })\n\n\n    }\n\n    maxSelectFile=(event)=>{\n        let files = event.target.files // create file object\n            if (files.length > 6) { \n               const msg = 'Only 6 images can be uploaded at a time'\n               event.target.value = null // discard selected file\n               console.log(msg)\n              return false;\n     \n          }\n        return true;\n     \n    }\n\n    checkMimeType=(event)=>{\n        //getting file object\n        let files = event.target.files \n        //define message container\n        let err = ''\n        // list allow mime type\n        const types = ['image/png', 'image/jpeg', 'image/gif']\n        // loop access array\n        for(var x = 0; x<files.length; x++) {\n         // compare file type find doesn't matach\n            if (types.every(type => files[x].type !== type)) {\n                // create error message and assign to container   \n                err += files[x].type+' is not a supported format\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) { // loop create toast massage\n            event.target.value = null \n            toast.error(err[z])\n        }\n        return true;\n    }\n\n    checkFileSize=(event)=>{\n        let files = event.target.files\n        let size = 15000 \n        let err = \"\"; \n\n        for(var x = 0; x<files.length; x++) {\n            if (files[x].size > size) {\n                err += files[x].type+'is too large, please pick a smaller file\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) {\n            toast.error(err[z])\n            event.target.value = null\n        }\n        return true;\n   \n    }    \n\n    // ****************************************************\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    } \n\n    render() {\n        console.log(this.state.count);\n\n        let items = this.props.items;\n\n        const {\n            isClearable,\n            isSearchable,\n            isDisabled,\n            isLoading,\n            isRtl,\n        } = this.state;\n\n        return (\n            \n            \n            <div className=\"rl_container article edit_page\">\n                {/* { this.state.loaded ? */}\n                    \n                    {\n                        items.updateItem ?\n                            <div className=\"edit_confirm\">\n                                Post updated, <Link to={`/items/${items.item._id}`}>\n                                    Click here to see your post\n                                </Link>\n                            </div>\n                        : null\n                    }\n\n\n                    {\n                        items.itemDeleted ?\n                            <div className=\"red_tag\">\n                                Item Deleted    \n                                {this.redirectUser()}\n                            </div>\n\n                        : null\n                    }\n\n\n                    <form onSubmit={this.submitForm}>\n                        \n                        <h2>Edit item:</h2>\n\n                        <img src={`/images/items/${this.state.formdata._id}/sq_thumbnail/0.jpg`} alt=\"Item\" onError={this.addDefaultImg}/>\n\n                        <table>\n                        <tbody>\n                        \n                            {this.createTextInput(this.state.formdata.title,'title', \"Enter title\", \"Title\")}\n                            {this.createTextInput(this.state.formdata.creator,'creator', \"Enter creator\", \"Creator\")}\n\n\n\n\n                            <tr>\n                                <td className=\"label\">\n                                    Description\n                                </td>\n                                <td>\n                                    <textarea\n                                        value={this.state.formdata.description}\n                                        onChange={(event) => this.handleInput(event, 'description')}\n                                    />\n                                </td>\n                            </tr>\n\n                            \n                            <tr>\n                                <td className=\"label\">\n                                    Pages\n                                </td>\n                                <td>\n                                    <div className=\"form_element\">\n                                        <input\n                                            type=\"number\"\n                                            placeholder=\"Enter pages\"\n                                            value={this.state.formdata.pages} \n                                            onChange={(event) => this.handleInput(event, 'pages')}                        />\n                                    </div>\n                                </td>\n                            </tr>\n\n                            {this.createTextInput(this.state.formdata.source,'source', \"Enter item source\", \"Source\")}\n                            {this.createTextInput(this.state.formdata.subject,'subject', \"Subject\", \"Subject\")}\n                            {this.createTextInput(this.state.formdata.date_created,'date_created', \"Date item was created\", \"Date\")}\n                            <tr>\n                                <td>\n                                    Tags\n                                </td>\n                                <td>\n                                    {this.state.tagsAreUpdated && this.props.items && this.props.items.item?\n                                        <CreatableSelect\n                                            defaultValue={this.state.existingTags}\n                                            isMulti\n                                            onChange={this.handleChangeTags}\n                                            options={this.state.updatedTags}\n                                        />\n                                    : null}\n                                    {/* <Tags tags={this.state.formdata.tags} id={this.props.match.params.id}/> */}\n                                </td>\n                            </tr>\n                            {this.createTextInput(this.state.formdata.contributor,'contributor', \"contributor\", \"Contributor\")}\n                            {this.createTextInput(this.state.formdata.item_format,'item_format', \"The item's format\", \"Format\")}\n                            {this.createTextInput(this.state.formdata.materials,'materials', \"materials\", \"Materials\")}\n                            {this.createTextInput(this.state.formdata.physical_dimensions,'physical_dimensions', \"Physical dimensions\", \"Dimensions\")}\n                            {this.createTextInput(this.state.formdata.editor,'editor', \"editor\", \"Editor\")}\n                            {this.createTextInput(this.state.formdata.publisher,'publisher', \"publisher\", \"Publisher\")}\n                            {this.createTextInput(this.state.formdata.further_info,'further_info', \"Enter any further info, resources..\", \"Further Info\")}\n                            \n                            {/* {this.createTextInput(this.state.formdata.external_link.url,'url', \"External link url\", \"URL\")} */}\n                            {/* {this.createTextInput(this.state.formdata.external_link.text,'text', \"External link text\", 'Description of the link', \"Link Description\")} */}\n\n                            {this.createTextInput(this.state.formdata.language,'language', \"language\", \"Language\")}\n                            {this.createTextInput(this.state.formdata.reference,'reference', \"reference\", \"Ref\")}\n                            {this.createTextInput(this.state.formdata.rights,'rights', \"rights\", \"Rights\")}\n                            {/* {this.createTextInput(this.state.formdata.geo.address,'address', \"Item address\", \"Address\")} */}\n                            \n                            <tr>\n                                <td>\n                                    Collection\n                                </td>\n                                <td>\n                                    <div className=\"form_element\">\n                                        {this.state.collIsUpdated && this.props.items && this.props.items.item  ?\n                                            <Select\n                                                className=\"basic-single\"\n                                                classNamePrefix=\"select\"\n                                                defaultValue={this.state.existingColl}\n                                                isDisabled={isDisabled}\n                                                isLoading={isLoading}\n                                                isClearable={isClearable}\n                                                isRtl={isRtl}\n                                                isSearchable={isSearchable}\n                                                name=\"color\"\n                                                options={this.state.collOptions}\n                                                onChange={this.handleChangeColl}\n                                            />\n                                        : null}\n                                        {/* <select\n                                            value={this.state.formdata.collection_id}\n                                            onChange={(event) => this.handleInput(event, 'collection_id')}\n                                        >\n                                            <option value=\"\" disabled selected>Collection</option>\n                                            <option value={null} >* None</option>\n\n                                            { this.props.colls && this.props.colls.length ?\n                                                this.props.colls.map ( (coll, i) => (\n                                                    <option key={i} value={`\"${coll.id}\"`}>{coll.title}</option>\n                                                ))\n                                            : null }\n                                        </select> */}\n                                    </div>\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td>\n                                    Category\n                                </td>\n                                <td>\n                                    <div className=\"form_element\">\n\n\n                                        {this.state.catsAreUpdated && this.props.items && this.props.items.item ?\n                                            <Select\n                                                defaultValue={this.state.existingCats}\n                                                isMulti\n                                                name=\"colors\"\n                                                options={this.state.catOptions}\n                                                className=\"basic-multi-select\"\n                                                classNamePrefix=\"select\"\n                                                onChange={this.handleChangeCats}\n                                            />\n                                        : null}\n\n\n                                        {/* <select\n                                            value={this.state.formdata.category_ref}\n                                            onChange={(event) => this.handleInput(event, 'category_ref')}\n                                        >   \n                                            <option value=\"\" disabled selected>Category</option>\n\n                                            <option value=\"\">* None</option>\n\n                                            { this.props.cats && this.props.cats.length ?\n                                                this.props.cats.map ( (cat, i) => (\n                                                    <option key={i} value={`\"${cat.cat_id}\"`}>{cat.title}</option>\n                                                ))\n                                            : null }\n                                        </select> */}\n                                    </div>\n                                </td>\n                            </tr>  \n\n                            {/* <tr>\n                                <td>\n                                    \n                                </td>\n                                <td>\n                                    <span>Selected: \n                                        { this.state.formdata.category_ref && this.state.formdata.category_ref.length > 0 ?\n                                            this.state.formdata.category_ref.map( (ref, i) => (\n                                                <span>{ref} </span>\n                                            )) \n                                        : <span>No categories selected</span>}\n                                    </span>\n                                </td>\n                            </tr> */}\n\n                            <tr>\n                                <td>\n                                    Sub-categories \n                                </td>\n                                <td>\n                                    <div className=\"form_element\">\n                                        {/* <select\n                                            value={this.state.formdata.subcategory_ref}\n                                            onChange={(event) => this.handleInput(event, 'subcategory_ref')}\n                                        >\n                                            <option value=\"\" disabled selected>Sub Category</option>\n                                            <option value=\"\" >* None</option>\n\n                                            { this.props.subcats && this.props.subcats.length ?\n                                                this.props.subcats.map ( (subcat, i) => (\n                                                    <option key={i} value={`\"${subcat.subcat_id}\"`}>{subcat.title}</option>\n                                                ))\n                                            : null }\n                                        </select> */}\n                                    </div>\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td>\n                                    Upload \n                                </td>\n                                <td>\n                                    <div className=\"form_element\">\n                                        <input type=\"file\" className=\"form-control\" multiple name=\"file\" onChange={this.onChangeHandler}/>\n                                        <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button> \n\n                                    </div>\n                                </td>\n                            </tr>\n                            \n                        </tbody>\n                        </table>\n\n                        <button type=\"submit\">Submit Edit</button>\n                        \n                        <div className=\"delete_post\">\n                            <div className=\"button\" onClick={(e) => { if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e) } }>\n                                Delete item\n                            </div>\n                        </div>\n\n                    </form>\n                {/* : <p>Hi</p>} */}\n            </div>\n            \n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items:state.items,\n        colls:state.collections.colls,\n        cats:state.cats.cats,\n        subcats:state.cats.subcats\n    }\n}\n\nexport default connect(mapStateToProps)(EditItem)\n\n\n"]},"metadata":{},"sourceType":"module"}