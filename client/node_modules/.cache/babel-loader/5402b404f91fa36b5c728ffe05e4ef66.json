{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'; // import axios from 'axios';\n// import { ToastContainer, toast } from 'react-toastify';\n\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions';\n\nclass EditItem extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        _id: this.props.match.params.id,\n        title: '',\n        creator: '',\n        subject: '',\n        description: '',\n        source: '',\n        date_created: '',\n        contributor: '',\n        item_format: '',\n        materials: '',\n        physical_dimensions: '',\n        pages: '',\n        editor: '',\n        publisher: '',\n        further_info: '',\n        language: '',\n        reference: '',\n        rights: '',\n        file_format: '',\n        external_link: {\n          url: '',\n          text: ''\n        },\n        geo: {\n          address: ''\n        }\n      },\n      thing: 'john'\n    };\n\n    this.handleInput = (event, name, level) => {\n      // // make a copy of formdata\n      // const newFormdata = {\n      //     ...this.state.formdata\n      // }\n      // newFormdata[name] = event.target.value;\n      // if (level === 'external_link') {\n      //     newFormdata.external_link[name] = event.target.value;\n      // } else if (level === 'geo') {\n      //     newFormdata.geo[name] = event.target.value;\n      // } else {\n      //     newFormdata[name] = event.target.value;\n      // }\n      // // copy it back to state\n      // this.setState({\n      //     formdata:newFormdata\n      // })\n      let thing = this.state.thing;\n      thing = event.target.value;\n      console.log(thing);\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.state.formdata._id));\n      this.props.history.push('/user/all-items');\n    };\n\n    this.redirectUser = () => {\n      setTimeout(() => {\n        this.props.history.push('/user/all-items');\n      }, 1000);\n    };\n\n    this.submitForm = e => {\n      e.preventDefault(); // console.log(this.state.formdata);\n\n      this.props.dispatch(updateItem({ ...this.state.formdata\n      }));\n    };\n\n    this.createTextInput = (stateVar, name, placeholder, label, level) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }, label), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form_element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: placeholder,\n        value: stateVar,\n        onChange: event => this.handleInput(event, name, level),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }\n      }))));\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById(this.props.match.params.id));\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearItem());\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // console.log(nextProps);\n    let formdata = prevState.formdata;\n\n    if (nextProps.items.item) {\n      let item = nextProps.items.item; // console.log(formdata);\n\n      formdata = { ...formdata,\n        _id: item._id,\n        title: item.title,\n        creator: item.creator,\n        subject: item.subject,\n        description: item.description,\n        source: item.source,\n        date_created: item.date_created,\n        contributor: item.contributor,\n        item_format: item.item_format,\n        materials: item.materials,\n        physical_dimensions: item.physical_dimensions,\n        pages: item.pages,\n        editor: item.editor,\n        publisher: item.publisher,\n        further_info: item.further_info,\n        language: item.language,\n        reference: item.reference,\n        rights: item.rights,\n        file_format: item.file_format\n      }; // console.log(formdata);\n\n      if (item.external_link && item.external_link.length && item.external_link.url) {\n        formdata = { ...formdata,\n          external_link: {\n            url: item.external_link[0].url,\n            text: item.external_link[0].text\n          }\n        };\n      } // console.log(formdata);\n\n\n      if (item.geo && item.geo.length && item.geo.address) {\n        formdata = { ...formdata,\n          geo: {\n            address: item.geo.address\n          }\n        };\n      } // console.log(formdata);\n\n    }\n\n    return {\n      formdata: { ...formdata\n      }\n    };\n  }\n\n  render() {\n    let items = this.props.items;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article edit_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, items.updateItem ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, \"Post updated, \", /*#__PURE__*/React.createElement(Link, {\n      to: `/items/${items.item._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 47\n      }\n    }, \"Click here to see your post\")) : null, items.itemDeleted ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red_tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 29\n      }\n    }, \"Item Deleted\", this.redirectUser()) : null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }\n    }, \"Edit item:\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: `/images/items/${this.state.formdata._id}/sq_thumbnail/0.jpg`,\n      alt: \"Item\",\n      onError: this.addDefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }, this.createTextInput(this.state.formdata.title, 'title', \"Enter title\", \"Title\"), this.createTextInput(this.state.formdata.creator, 'creator', \"Enter creator\", \"Creator\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 33\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.formdata.description,\n      onChange: event => this.handleInput(event, 'description'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 33\n      }\n    }, \"Pages\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter pages\",\n      value: this.state.formdata.pages,\n      onChange: event => this.handleInput(event, 'pages'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 41\n      }\n    })))), this.createTextInput(this.state.formdata.source, 'source', \"Enter item source\", \"Source\"), this.createTextInput(this.state.formdata.subject, 'subject', \"Subject\", \"Subject\"), this.createTextInput(this.state.formdata.date_created, 'date_created', \"Date item was created\", \"Date\"), this.createTextInput(this.state.formdata.contributor, 'contributor', \"contributor\", \"Contributor\"), this.createTextInput(this.state.formdata.item_format, 'item_format', \"The item's format\", \"Format\"), this.createTextInput(this.state.formdata.materials, 'materials', \"materials\", \"Materials\"), this.createTextInput(this.state.formdata.physical_dimensions, 'physical_dimensions', \"Physical dimensions\", \"Dimensions\"), this.createTextInput(this.state.formdata.editor, 'editor', \"editor\", \"Editor\"), this.createTextInput(this.state.formdata.publisher, 'publisher', \"publisher\", \"Publisher\"), this.createTextInput(this.state.formdata.further_info, 'further_info', \"Enter any further info, resources..\", \"Further Info\"), this.createTextInput(this.state.formdata.language, 'language', \"language\", \"Language\"), this.createTextInput(this.state.formdata.reference, 'reference', \"reference\", \"Ref\"), this.createTextInput(this.state.formdata.rights, 'rights', \"rights\", \"Rights\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    }, \"Submit Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"delete_post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: e => {\n        if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 29\n      }\n    }, \"Delete item\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items\n  };\n}\n\nexport default connect(mapStateToProps)(EditItem);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js"],"names":["React","PureComponent","connect","Link","Select","CreatableSelect","getItemById","updateItem","clearItem","deleteItem","getAllColls","getAllCats","getAllSubCats","EditItem","state","formdata","_id","props","match","params","id","title","creator","subject","description","source","date_created","contributor","item_format","materials","physical_dimensions","pages","editor","publisher","further_info","language","reference","rights","file_format","external_link","url","text","geo","address","thing","handleInput","event","name","level","target","value","console","log","deletePost","dispatch","history","push","redirectUser","setTimeout","submitForm","e","preventDefault","createTextInput","stateVar","placeholder","label","addDefaultImg","ev","newImg","src","componentDidMount","componentWillUnmount","getDerivedStateFromProps","nextProps","prevState","items","item","length","render","itemDeleted","window","confirm","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n// import axios from 'axios';\n// import { ToastContainer, toast } from 'react-toastify';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\n\n\n\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats  } from '../../actions';\n\n\n\nclass EditItem extends PureComponent {\n\n\n    state = {\n        formdata:{\n            _id:this.props.match.params.id,\n            title: '',\n            creator: '',\n            subject: '',\n            description: '',\n            source: '',\n            date_created: '',\n            \n            contributor: '',\n            item_format: '',\n            materials: '',\n            physical_dimensions: '',\n            pages: '',        \n            editor: '',\n            publisher: '',\n            further_info: '',\n            language: '',\n            reference: '',\n            rights: '',\n            file_format: '',\n            external_link: {\n                url: '',\n                text: ''\n            },\n            geo: {\n                address: ''\n            }\n        },\n        thing: 'john'\n\n\n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(getItemById(this.props.match.params.id))\n\n    }\n\n\n    componentWillUnmount() {\n        this.props.dispatch(clearItem())\n    }\n\n    handleInput = (event, name, level) => {\n\n        \n        // // make a copy of formdata\n        // const newFormdata = {\n        //     ...this.state.formdata\n        // }\n\n        // newFormdata[name] = event.target.value;\n\n\n        // if (level === 'external_link') {\n        //     newFormdata.external_link[name] = event.target.value;\n        // } else if (level === 'geo') {\n        //     newFormdata.geo[name] = event.target.value;\n        // } else {\n        //     newFormdata[name] = event.target.value;\n        // }\n\n\n        // // copy it back to state\n        // this.setState({\n        //     formdata:newFormdata\n\n        // })\n        let thing = this.state.thing;\n        thing = event.target.value;\n\n        console.log(thing);\n\n    }\n\n\n\n\n    \n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.state.formdata._id));\n        this.props.history.push('/user/all-items');\n    }\n\n\n\n    redirectUser = () => {\n        setTimeout(() => {\n            this.props.history.push('/user/all-items')\n        }, 1000)\n    }\n\n\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        // console.log(nextProps);\n        let formdata = prevState.formdata;\n\n        if (nextProps.items.item ) {\n\n            let item = nextProps.items.item;\n                        \n            // console.log(formdata);\n\n            formdata = {\n                ...formdata,\n                _id:item._id,\n                title:item.title,\n                creator:item.creator,\n                subject: item.subject,\n                description:item.description,\n                source:item.source,\n                date_created: item.date_created,\n\n                contributor: item.contributor,\n                item_format: item.item_format,\n                materials: item.materials,\n                physical_dimensions: item.physical_dimensions,\n                pages:item.pages,\n                editor: item.editor,\n                publisher: item.publisher,\n                further_info: item.further_info,\n                language: item.language,\n                reference: item.reference,\n                rights: item.rights,\n                file_format: item.file_format,\n            }\n            // console.log(formdata);\n            \n            if (item.external_link && item.external_link.length && item.external_link.url) {\n                formdata = {\n                    ...formdata,\n                    external_link : {\n                        url: item.external_link[0].url,\n                        text: item.external_link[0].text\n                    }\n                }\n            }\n            // console.log(formdata);\n\n\n            if (item.geo && item.geo.length && item.geo.address) {\n                formdata = {\n                    ...formdata,\n                    geo: {\n                        address: item.geo.address\n                    }\n                }\n            }\n            // console.log(formdata);\n\n        }\n\n        return {\n            formdata: {...formdata},\n        }\n    }\n\n\n\n\n\n    submitForm = (e) => {\n        e.preventDefault();\n        // console.log(this.state.formdata);\n\n        this.props.dispatch(updateItem({\n                ...this.state.formdata\n            }\n        ))\n    }\n\n    \n\n\n\n    createTextInput = (stateVar, name, placeholder, label, level) => {\n\n        return (\n            <tr>\n                <td>\n                    {label}\n                </td>\n                <td>\n                    <div className=\"form_element\">\n                        <input\n                            type=\"text\"\n                            placeholder={placeholder}\n                            value={stateVar} \n                            onChange={(event) => this.handleInput(event, name, level)}\n                        />\n                    </div>\n                </td>\n\n            </tr>\n        )\n    }\n\n\n\n    // ****************************************************\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    } \n\n    render() {\n\n        let items = this.props.items;\n\n        return (\n            \n            <div className=\"rl_container article edit_page\">\n                    \n                    {\n                        items.updateItem ?\n                            <div className=\"edit_confirm\">\n                                Post updated, <Link to={`/items/${items.item._id}`}>\n                                    Click here to see your post\n                                </Link>\n                            </div>\n                        : null\n                    }\n\n\n                    {\n                        items.itemDeleted ?\n                            <div className=\"red_tag\">\n                                Item Deleted    \n                                {this.redirectUser()}\n                            </div>\n\n                        : null\n                    }\n\n\n                    <form onSubmit={this.submitForm}>\n                        \n                        <h2>Edit item:</h2>\n\n                        <img src={`/images/items/${this.state.formdata._id}/sq_thumbnail/0.jpg`} alt=\"Item\" onError={this.addDefaultImg}/>\n\n                        <table>\n                        <tbody>\n                        \n                            {this.createTextInput(this.state.formdata.title,'title', \"Enter title\", \"Title\")}\n                            {this.createTextInput(this.state.formdata.creator,'creator', \"Enter creator\", \"Creator\")}\n\n\n\n\n                            <tr>\n                                <td className=\"label\">\n                                    Description\n                                </td>\n                                <td>\n                                    <textarea\n                                        value={this.state.formdata.description}\n                                        onChange={(event) => this.handleInput(event, 'description')}\n                                    />\n                                </td>\n                            </tr>\n\n                            \n                            <tr>\n                                <td className=\"label\">\n                                    Pages\n                                </td>\n                                <td>\n                                    <div className=\"form_element\">\n                                        <input\n                                            type=\"number\"\n                                            placeholder=\"Enter pages\"\n                                            value={this.state.formdata.pages} \n                                            onChange={(event) => this.handleInput(event, 'pages')}                        />\n                                    </div>\n                                </td>\n                            </tr>\n\n                            {this.createTextInput(this.state.formdata.source,'source', \"Enter item source\", \"Source\")}\n                            {this.createTextInput(this.state.formdata.subject,'subject', \"Subject\", \"Subject\")}\n                            {this.createTextInput(this.state.formdata.date_created,'date_created', \"Date item was created\", \"Date\")}\n                           \n                            {this.createTextInput(this.state.formdata.contributor,'contributor', \"contributor\", \"Contributor\")}\n                            {this.createTextInput(this.state.formdata.item_format,'item_format', \"The item's format\", \"Format\")}\n                            {this.createTextInput(this.state.formdata.materials,'materials', \"materials\", \"Materials\")}\n                            {this.createTextInput(this.state.formdata.physical_dimensions,'physical_dimensions', \"Physical dimensions\", \"Dimensions\")}\n                            {this.createTextInput(this.state.formdata.editor,'editor', \"editor\", \"Editor\")}\n                            {this.createTextInput(this.state.formdata.publisher,'publisher', \"publisher\", \"Publisher\")}\n                            {this.createTextInput(this.state.formdata.further_info,'further_info', \"Enter any further info, resources..\", \"Further Info\")}\n                            \n                            {/* {this.createTextInput(this.state.formdata.external_link.url,'url', \"External link url\", \"URL\")} */}\n                            {/* {this.createTextInput(this.state.formdata.external_link.text,'text', \"External link text\", 'Description of the link', \"Link Description\")} */}\n\n                            {this.createTextInput(this.state.formdata.language,'language', \"language\", \"Language\")}\n                            {this.createTextInput(this.state.formdata.reference,'reference', \"reference\", \"Ref\")}\n                            {this.createTextInput(this.state.formdata.rights,'rights', \"rights\", \"Rights\")}\n                            {/* {this.createTextInput(this.state.formdata.geo.address,'address', \"Item address\", \"Address\")} */}\n                            \n                        </tbody>\n                        </table>\n\n                        <button type=\"submit\">Submit Edit</button>\n                        \n                        <div className=\"delete_post\">\n                            <div className=\"button\" \n                                 onClick={(e) => { if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e) } }>\n                                Delete item\n                            </div>\n                        </div>\n\n                    </form>\n            </div>\n            \n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items:state.items\n    }\n}\n\nexport default connect(mapStateToProps)(EditItem)\n\n\n"]},"metadata":{},"sourceType":"module"}