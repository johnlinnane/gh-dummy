{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'; // create alot of actions to bring in the book info\n\nimport { getBook, updateBook, clearBook, deleteBook } from '../../actions';\nimport { getItem, updateItem, clearItem, deleteItem } from '../../actions';\n\nclass EditItem extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        // submit id to find post\n        _id: this.props.match.params.id,\n        title: '',\n        creator: '',\n        description: '',\n        pages: '',\n        collection_id: '',\n        source: ''\n      }\n    };\n\n    this.handleInput = (event, name) => {\n      // make a copy of formdata\n      const newFormdata = { ...this.state.formdata\n      }; // populate the copy with the input value\n\n      newFormdata[name] = event.target.value; // copy it back to state\n\n      this.setState({\n        formdata: newFormdata\n      });\n    };\n\n    this.submitForm = e => {\n      e.preventDefault(); // console.log(this.state.formdata);\n\n      this.props.dispatch(updateItem(this.state.formdata));\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.props.match.params.id));\n    };\n\n    this.redirectUser = () => {\n      setTimeout(() => {\n        this.props.history.push('/user/user-items');\n      }, 1000);\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItem(this.props.match.params.id));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // console.log(nextProps);\n    let item = nextProps.items.item; // console.log(book);\n    // can create a updatedFormdata variable, but no need\n\n    this.setState({\n      formdata: {\n        _id: item._id,\n        title: item.title,\n        creator: item.creator,\n        description: item.description,\n        pages: item.pages,\n        collection_id: item.collection_id,\n        source: item.source\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearItem());\n  }\n\n  render() {\n    // console.log(this.props);\n    let books = this.props.books;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, books.updateBook ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"Post updated, \", /*#__PURE__*/React.createElement(Link, {\n      to: `/books/${books.book._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 43\n      }\n    }, \"Click here to see your post\")) : null, books.postDeleted ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red_tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"Post Deleted\", this.redirectUser()) : null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, \"Submit Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter name\",\n      value: this.state.formdata.name,\n      onChange: event => this.handleInput(event, 'name'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter author\",\n      value: this.state.formdata.author,\n      onChange: event => this.handleInput(event, 'author'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.formdata.review,\n      onChange: event => this.handleInput(event, 'review'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter pages\",\n      value: this.state.formdata.pages,\n      onChange: event => this.handleInput(event, 'pages'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.formdata.rating,\n      onChange: event => this.handleInput(event, 'rating'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      val: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      val: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      val: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      val: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      val: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }, \"5\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter price\",\n      value: this.state.formdata.price,\n      onChange: event => this.handleInput(event, 'price'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, \"Edit review\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"delete_post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: this.deletePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, \"Delete review\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // console.log(state); \n  return {\n    books: state.books\n  };\n}\n\nexport default connect(mapStateToProps)(EditItem);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js"],"names":["React","PureComponent","connect","Link","getBook","updateBook","clearBook","deleteBook","getItem","updateItem","clearItem","deleteItem","EditItem","state","formdata","_id","props","match","params","id","title","creator","description","pages","collection_id","source","handleInput","event","name","newFormdata","target","value","setState","submitForm","e","preventDefault","dispatch","deletePost","redirectUser","setTimeout","history","push","componentDidMount","componentWillReceiveProps","nextProps","item","items","componentWillUnmount","render","books","book","postDeleted","author","review","rating","price","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\n// create alot of actions to bring in the book info\nimport { getBook, updateBook, clearBook, deleteBook } from '../../actions';\n\nimport { getItem, updateItem, clearItem, deleteItem } from '../../actions';\n\n\n\nclass EditItem extends PureComponent {\n\n\n    state = {\n        formdata:{\n            // submit id to find post\n            _id:this.props.match.params.id,\n            title:'',\n            creator:'', \n            description:'',\n            pages:'',\n            collection_id:'',\n            source:''\n        }\n    }\n\n\n    handleInput = (event, name) => {\n        // make a copy of formdata\n        const newFormdata = {\n            ...this.state.formdata\n        }\n\n        // populate the copy with the input value\n        newFormdata[name] = event.target.value;\n\n        // copy it back to state\n        this.setState({\n            formdata:newFormdata\n        })\n    }\n\n\n    submitForm = (e) => {\n        e.preventDefault();\n        // console.log(this.state.formdata);\n\n        this.props.dispatch(updateItem(this.state.formdata))\n    }\n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.props.match.params.id))\n    }\n\n\n\n    redirectUser = () => {\n        setTimeout(() => {\n            this.props.history.push('/user/user-items')\n        }, 1000)\n    }\n\n\n    componentDidMount() {\n\n        this.props.dispatch(getItem(this.props.match.params.id))\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        // console.log(nextProps);\n        let item = nextProps.items.item;\n        \n        // console.log(book);\n\n        // can create a updatedFormdata variable, but no need\n        \n        this.setState({\n            formdata:{\n                _id:item._id,\n                title:item.title,\n                creator:item.creator,\n                description:item.description,\n                pages:item.pages,\n                collection_id:item.collection_id,\n                source:item.source \n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.props.dispatch(clearItem())\n    }\n\n    render() {\n        // console.log(this.props);\n\n        let books = this.props.books;\n\n        return (\n            <div className=\"rl_container article\">\n\n                {\n                    books.updateBook ?\n                        <div className=\"edit_confirm\">\n                            Post updated, <Link to={`/books/${books.book._id}`}>\n                                Click here to see your post\n                            </Link>\n                        </div>\n                    : null\n                }\n\n\n                {\n                    books.postDeleted ?\n                        <div className=\"red_tag\">\n                            Post Deleted\n                            {this.redirectUser()}\n                        </div>\n\n                    : null\n                }\n\n\n                <form onSubmit={this.submitForm}>\n                    \n                    <h2>Submit Edit</h2>\n\n                    <div className=\"form_element\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter name\"\n                            value={this.state.formdata.name} \n                            onChange={(event) => this.handleInput(event, 'name')}\n                        />\n                    </div>\n\n                    <div className=\"form_element\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter author\"\n                            value={this.state.formdata.author} \n                            onChange={(event) => this.handleInput(event, 'author')}    \n                        />\n                    </div>\n\n\n                    <textarea\n                        value={this.state.formdata.review}\n                        onChange={(event) => this.handleInput(event, 'review')}\n                    />\n\n\n                    <div className=\"form_element\">\n                        <input\n                            type=\"number\"\n                            placeholder=\"Enter pages\"\n                            value={this.state.formdata.pages} \n                            onChange={(event) => this.handleInput(event, 'pages')}                        />\n                    </div>\n\n                    <div className=\"form_element\">\n                        <select\n                            value={this.state.formdata.rating}\n                            onChange={(event) => this.handleInput(event, 'rating')}\n                        >\n                            <option val=\"1\">1</option>\n                            <option val=\"2\">2</option>\n                            <option val=\"3\">3</option>\n                            <option val=\"4\">4</option>\n                            <option val=\"5\">5</option>\n\n                        </select>\n                    </div>\n\n\n                    <div className=\"form_element\">\n                        <input\n                            type=\"number\"\n                            placeholder=\"Enter price\"\n                            value={this.state.formdata.price} \n                            onChange={(event) => this.handleInput(event, 'price')}                        />\n                    </div>\n\n\n                    <button type=\"submit\">Edit review</button>\n                    \n                    <div className=\"delete_post\">\n                        <div className=\"button\" onClick={this.deletePost}>\n                            Delete review\n                        </div>\n\n                    </div>\n\n\n\n\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    // console.log(state); \n    return {\n        books:state.books\n    }\n}\n\nexport default connect(mapStateToProps)(EditItem)\n\n\n"]},"metadata":{},"sourceType":"module"}