{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify'; // create alot of actions to bring in the book info\n// import { getBook, updateBook, clearBook, deleteBook } from '../../actions';\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions';\nimport Tags from '../../widgetsUI/tags';\n\nclass EditItem extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        // submit id to find post\n        _id: this.props.match.params.id,\n        title: '',\n        creator: '',\n        subject: '',\n        description: '',\n        source: '',\n        date_created: '',\n        contributor: '',\n        collection_id: '',\n        item_format: '',\n        materials: '',\n        physical_dimensions: '',\n        pages: '',\n        editor: '',\n        publisher: '',\n        further_info: '',\n        language: '',\n        reference: '',\n        rights: '',\n        file_format: '',\n        address: '',\n        category_ref: '',\n        subcategory_ref: '',\n        tags: [{\n          id: '',\n          text: ''\n        }],\n        external_link: {\n          url: '',\n          text: ''\n        },\n        geo: {\n          address: ''\n        }\n      },\n      selectedFile: null,\n      loaded: 0\n    };\n\n    this.handleInput = (event, name, level) => {\n      // make a copy of formdata\n      const newFormdata = { ...this.state.formdata\n      };\n\n      if (level === 'external_link') {\n        newFormdata.external_link[name] = event.target.value;\n      } else if (level === 'geo') {\n        newFormdata.geo[name] = event.target.value;\n      } else if (level === 'tags') {\n        newFormdata.tags[name] = event.target.value;\n      } else {\n        newFormdata[name] = event.target.value;\n      } // copy it back to state\n\n\n      this.setState({\n        formdata: newFormdata\n      });\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.props.match.params.id));\n      this.props.history.push('/user/all-items');\n    };\n\n    this.redirectUser = () => {\n      setTimeout(() => {\n        this.props.history.push('/user/all-items');\n      }, 1000);\n    };\n\n    this.submitForm = e => {\n      e.preventDefault(); // console.log(this.state.formdata);\n\n      this.props.dispatch(updateItem({ ...this.state.formdata\n      }));\n    };\n\n    this.createTextInput = (stateVar, name, placeholder, label, level) => {\n      // let string = `this.state.formdata.${variable}`;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      }, label), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form_element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: placeholder,\n        value: stateVar,\n        onChange: event => this.handleInput(event, name, level),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }\n      }))));\n    };\n\n    this.onChangeHandler = event => {\n      // this.setState({\n      //     selectedFile: event.target.files\n      //     // loaded: 0\n      //   })\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {\n        this.setState({\n          selectedFile: files\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData(); // data.append('file', this.state.selectedFile);\n\n      for (var x = 0; x < this.state.selectedFile.length; x++) {\n        data.append('file', this.state.selectedFile[x]);\n      }\n\n      axios.post(`http://localhost:8000/upload`, data, {\n        // receive two parameter endpoint url ,form data \n        onUploadProgress: ProgressEvent => {\n          this.setState({\n            loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n          });\n        }\n      }).then(res => {\n        // then print response status\n        console.log(res.statusText);\n        toast.success('upload success');\n      }).catch(err => {\n        toast.error('upload fail');\n      });\n    };\n\n    this.maxSelectFile = event => {\n      let files = event.target.files; // create file object\n\n      if (files.length > 6) {\n        const msg = 'Only 6 images can be uploaded at a time';\n        event.target.value = null; // discard selected file\n\n        console.log(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = ''; // list allow mime type\n\n      const types = ['image/png', 'image/jpeg', 'image/gif']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // loop create toast massage\n        event.target.value = null;\n        toast.error(err[z]);\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 15000;\n      let err = \"\";\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err += files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById(this.props.match.params.id));\n    this.props.dispatch(getAllColls());\n    this.props.dispatch(getAllCats());\n    this.props.dispatch(getAllSubCats());\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearItem());\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // console.log(nextProps);\n    let item = nextProps.items.item; // console.log(item.title);\n    // can create a updatedFormdata variable, but no need\n\n    let formdata = { ...this.state.formdata\n    }; // this.setState({\n\n    formdata = { ...this.state.formdata,\n      _id: item._id,\n      title: item.title,\n      //\n      creator: item.creator,\n      //\n      description: item.description,\n      //\n      pages: item.pages,\n      //\n      collection_id: item.collection_id,\n      //\n      source: item.source,\n      //\n      subject: item.subject,\n      date_created: item.date_created,\n      tags: item.tags,\n      contributor: item.contributor,\n      item_format: item.item_format,\n      materials: item.materials,\n      physical_dimensions: item.physical_dimensions,\n      editor: item.editor,\n      publisher: item.publisher,\n      further_info: item.further_info,\n      language: item.language,\n      reference: item.reference,\n      rights: item.rights,\n      file_format: item.file_format,\n      category_ref: item.category_ref,\n      subcategory_ref: item.subcategory_ref\n    };\n\n    if (item.external_link && item.external_link.length && item.external_link.url) {\n      // console.log(item.external_link[0].url);\n      formdata = { ...this.state.formdata,\n        external_link: {\n          url: item.external_link[0].url,\n          text: item.external_link[0].text\n        }\n      };\n    }\n\n    if (item.geo && item.geo.length && item.geo.address) {\n      formdata = { ...this.state.formdata,\n        geo: {\n          address: item.geo.address\n        }\n      }; // console.log(this.state);\n    }\n\n    return formdata; // console.log(this.state.formdata);\n  } // componentWillReceiveProps(nextProps) {\n  //     // console.log(nextProps);\n  //     let item = nextProps.items.item;\n  //     // console.log(item.title);\n  //     // can create a updatedFormdata variable, but no need\n  //     this.setState({\n  //         formdata:{\n  //             ...this.state.formdata,\n  //             _id:item._id,\n  //             title:item.title,  //\n  //             creator:item.creator,  //\n  //             description:item.description,  //\n  //             pages:item.pages,  //\n  //             collection_id:item.collection_id,  //\n  //             source:item.source,   //\n  //             subject: item.subject,\n  //             date_created: item.date_created,\n  //             tags: item.tags,\n  //             contributor: item.contributor,\n  //             item_format: item.item_format,\n  //             materials: item.materials,\n  //             physical_dimensions: item.physical_dimensions,\n  //             editor: item.editor,\n  //             publisher: item.publisher,\n  //             further_info: item.further_info,\n  //             language: item.language,\n  //             reference: item.reference,\n  //             rights: item.rights,\n  //             file_format: item.file_format,\n  //             category_ref: item.category_ref,\n  //             subcategory_ref: item.subcategory_ref\n  //         }\n  //     })\n  //     if (item.external_link && item.external_link.length && item.external_link.url) {\n  //         // console.log(item.external_link[0].url);\n  //         this.setState({\n  //             formdata: {\n  //                 ...this.state.formdata,\n  //                 external_link : {\n  //                     url: item.external_link[0].url,\n  //                     text: item.external_link[0].text\n  //                 }\n  //             }\n  //         })\n  //     }\n  //     if (item.geo && item.geo.length && item.geo.address) {\n  //         this.setState({\n  //             formdata: {\n  //                 ...this.state.formdata,\n  //                 geo: {\n  //                     address: item.geo.address\n  //                 }\n  //             }\n  //         })\n  //         // console.log(this.state);\n  //     }\n  //     // console.log(this.state.formdata);\n  // }\n\n\n  render() {\n    console.log(this.state.formdata.tags);\n    let items = this.props.items;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article edit_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }\n    }, items.updateItem ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 25\n      }\n    }, \"Post updated, \", /*#__PURE__*/React.createElement(Link, {\n      to: `/items/${items.item._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 43\n      }\n    }, \"Click here to see your post\")) : null, items.itemDeleted ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red_tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 25\n      }\n    }, \"Item Deleted\", this.redirectUser()) : null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 21\n      }\n    }, \"Edit item:\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: `/images/items/${this.state.formdata._id}/sq_thumbnail/0.jpg`,\n      alt: \"Item\",\n      onError: this.addDefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 21\n      }\n    }, this.createTextInput(this.state.formdata.title, 'title', \"Enter title\", \"Title\"), this.createTextInput(this.state.formdata.creator, 'creator', \"Enter creator\", \"Creator\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 29\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.formdata.description,\n      onChange: event => this.handleInput(event, 'description'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 29\n      }\n    }, \"Pages\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter pages\",\n      value: this.state.formdata.pages,\n      onChange: event => this.handleInput(event, 'pages'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 37\n      }\n    })))), this.createTextInput(this.state.formdata.source, 'source', \"Enter item source\", \"Source\"), this.createTextInput(this.state.formdata.subject, 'subject', \"Subject\", \"Subject\"), this.createTextInput(this.state.formdata.date_created, 'date_created', \"Date item was created\", \"Date\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 29\n      }\n    }, \"Tags\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Tags, {\n      tags: this.state.formdata.tags,\n      id: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 33\n      }\n    }))), this.createTextInput(this.state.formdata.contributor, 'contributor', \"contributor\", \"Contributor\"), this.createTextInput(this.state.formdata.item_format, 'item_format', \"The item's format\", \"Format\"), this.createTextInput(this.state.formdata.materials, 'materials', \"materials\", \"Materials\"), this.createTextInput(this.state.formdata.physical_dimensions, 'physical_dimensions', \"Physical dimensions\", \"Dimensions\"), this.createTextInput(this.state.formdata.editor, 'editor', \"editor\", \"Editor\"), this.createTextInput(this.state.formdata.publisher, 'publisher', \"publisher\", \"Publisher\"), this.createTextInput(this.state.formdata.further_info, 'further_info', \"Enter any further info, resources..\", \"Further Info\"), this.createTextInput(this.state.formdata.external_link.url, 'url', \"External link url\", \"URL\"), this.createTextInput(this.state.formdata.external_link.text, 'text', \"External link text\", 'Description of the link', \"Link Description\"), this.createTextInput(this.state.formdata.language, 'language', \"language\", \"Language\"), this.createTextInput(this.state.formdata.reference, 'reference', \"reference\", \"Ref\"), this.createTextInput(this.state.formdata.rights, 'rights', \"rights\", \"Rights\"), this.createTextInput(this.state.formdata.geo.address, 'address', \"Item address\", \"Address\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 29\n      }\n    }, \"Collection\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.formdata.collection_id,\n      onChange: event => this.handleInput(event, 'collection_id'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 41\n      }\n    }, \"Collection\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 41\n      }\n    }, \"* None\"), this.props.colls && this.props.colls.length ? this.props.colls.map((coll, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: `\"${coll.id}\"`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 49\n      }\n    }, coll.title)) : null)))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 29\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.formdata.category_ref,\n      onChange: event => this.handleInput(event, 'category_ref'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 41\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 41\n      }\n    }, \"* None\"), this.props.cats && this.props.cats.length ? this.props.cats.map((cat, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: `\"${cat.cat_id}\"`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 49\n      }\n    }, cat.title)) : null)))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 33\n      }\n    }, \"Selected:\", this.state.formdata.category_ref && this.state.formdata.category_ref.length > 0 ? this.state.formdata.category_ref.map((ref, i) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 45\n      }\n    }, ref, \" \")) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 39\n      }\n    }, \"No categories selected\")))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 29\n      }\n    }, \"Sub-categories\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.formdata.subcategory_ref,\n      onChange: event => this.handleInput(event, 'subcategory_ref'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 41\n      }\n    }, \"Sub Category\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 41\n      }\n    }, \"* None\"), this.props.subcats && this.props.subcats.length ? this.props.subcats.map((subcat, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: `\"${subcat.subcat_id}\"`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 49\n      }\n    }, subcat.title)) : null)))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 29\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      multiple: true,\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 37\n      }\n    }, \"Upload\")))))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 21\n      }\n    }, \"Submit Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"delete_post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: e => {\n        if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 25\n      }\n    }, \"Delete item\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // console.log(state); \n  return {\n    items: state.items,\n    colls: state.collections.colls,\n    cats: state.cats.cats,\n    subcats: state.cats.subcats\n  };\n}\n\nexport default connect(mapStateToProps)(EditItem);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js"],"names":["React","PureComponent","connect","Link","axios","ToastContainer","toast","getItemById","updateItem","clearItem","deleteItem","getAllColls","getAllCats","getAllSubCats","Tags","EditItem","state","formdata","_id","props","match","params","id","title","creator","subject","description","source","date_created","contributor","collection_id","item_format","materials","physical_dimensions","pages","editor","publisher","further_info","language","reference","rights","file_format","address","category_ref","subcategory_ref","tags","text","external_link","url","geo","selectedFile","loaded","handleInput","event","name","level","newFormdata","target","value","setState","deletePost","dispatch","history","push","redirectUser","setTimeout","submitForm","e","preventDefault","createTextInput","stateVar","placeholder","label","onChangeHandler","files","maxSelectFile","checkMimeType","onClickHandler","data","FormData","x","length","append","post","onUploadProgress","ProgressEvent","total","then","res","console","log","statusText","success","catch","err","error","msg","types","every","type","z","checkFileSize","size","addDefaultImg","ev","newImg","src","componentDidMount","componentWillUnmount","getDerivedStateFromProps","nextProps","prevState","item","items","render","itemDeleted","colls","map","coll","i","cats","cat","cat_id","ref","subcats","subcat","subcat_id","window","confirm","mapStateToProps","collections"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\n\n// create alot of actions to bring in the book info\n// import { getBook, updateBook, clearBook, deleteBook } from '../../actions';\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport {getAllColls, getAllCats, getAllSubCats  } from '../../actions';\n\nimport Tags from '../../widgetsUI/tags';\n\n\n\nclass EditItem extends PureComponent {\n\n\n    state = {\n        formdata:{\n            // submit id to find post\n            _id:this.props.match.params.id,\n            title: '',\n            creator: '',\n            subject: '',\n            description: '',\n            source: '',\n            date_created: '',\n            \n            contributor: '',\n            collection_id: '',     \n            item_format: '',\n            materials: '',\n            physical_dimensions: '',\n            pages: '',        \n            editor: '',\n            publisher: '',\n            further_info: '',\n            language: '',\n            reference: '',\n            rights: '',\n            file_format: '',\n            address: '',\n            category_ref: '',\n            subcategory_ref: '',\n            tags: [\n                {\n                    id: '',\n                    text: ''\n                }\n            ],\n            external_link: {\n                url: '',\n                text: ''\n            },\n            geo: {\n                address: ''\n            }\n        },\n        selectedFile: null,\n        loaded: 0\n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(getItemById(this.props.match.params.id))\n        this.props.dispatch(getAllColls())\n        this.props.dispatch(getAllCats());\n        this.props.dispatch(getAllSubCats());\n    }\n\n\n    componentWillUnmount() {\n        this.props.dispatch(clearItem())\n    }\n\n    handleInput = (event, name, level) => {\n        // make a copy of formdata\n        const newFormdata = {\n            ...this.state.formdata\n        }\n\n\n        if (level === 'external_link') {\n            newFormdata.external_link[name] = event.target.value;\n        } else if (level === 'geo') {\n            newFormdata.geo[name] = event.target.value;\n        } else if (level === 'tags') {\n            newFormdata.tags[name] = event.target.value;\n        } else {\n            newFormdata[name] = event.target.value;\n        }\n\n\n        // copy it back to state\n        this.setState({\n            formdata:newFormdata\n\n        })\n    }\n\n\n\n\n    \n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.props.match.params.id));\n        this.props.history.push('/user/all-items');\n    }\n\n\n\n    redirectUser = () => {\n        setTimeout(() => {\n            this.props.history.push('/user/all-items')\n        }, 1000)\n    }\n\n\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        // console.log(nextProps);\n        let item = nextProps.items.item;\n        \n        // console.log(item.title);\n\n        // can create a updatedFormdata variable, but no need\n        \n        let formdata = {...this.state.formdata};\n        \n        \n        // this.setState({\n            formdata = {\n                ...this.state.formdata,\n                _id:item._id,\n                title:item.title,  //\n                creator:item.creator,  //\n                description:item.description,  //\n                pages:item.pages,  //\n                collection_id:item.collection_id,  //\n                source:item.source,   //\n\n                subject: item.subject,\n                date_created: item.date_created,\n                tags: item.tags,\n                contributor: item.contributor,\n                item_format: item.item_format,\n                materials: item.materials,\n                physical_dimensions: item.physical_dimensions,\n                editor: item.editor,\n                publisher: item.publisher,\n                further_info: item.further_info,\n                language: item.language,\n                reference: item.reference,\n                rights: item.rights,\n                file_format: item.file_format,\n                category_ref: item.category_ref,\n                subcategory_ref: item.subcategory_ref\n            }\n        \n\n        if (item.external_link && item.external_link.length && item.external_link.url) {\n            // console.log(item.external_link[0].url);\n            \n\n                \n                formdata = {\n                    ...this.state.formdata,\n                    external_link : {\n                        url: item.external_link[0].url,\n                        text: item.external_link[0].text\n                    }\n                }\n            \n        }\n            \n            \n\n        if (item.geo && item.geo.length && item.geo.address) {\n                \n                formdata = {\n                    ...this.state.formdata,\n                    geo: {\n                        address: item.geo.address\n                    }\n                }\n            \n            // console.log(this.state);\n        }\n        return formdata;\n        // console.log(this.state.formdata);\n    }\n\n\n\n\n    // componentWillReceiveProps(nextProps) {\n    //     // console.log(nextProps);\n    //     let item = nextProps.items.item;\n        \n    //     // console.log(item.title);\n\n    //     // can create a updatedFormdata variable, but no need\n        \n\n        \n    //     this.setState({\n    //         formdata:{\n    //             ...this.state.formdata,\n    //             _id:item._id,\n    //             title:item.title,  //\n    //             creator:item.creator,  //\n    //             description:item.description,  //\n    //             pages:item.pages,  //\n    //             collection_id:item.collection_id,  //\n    //             source:item.source,   //\n\n    //             subject: item.subject,\n    //             date_created: item.date_created,\n    //             tags: item.tags,\n    //             contributor: item.contributor,\n    //             item_format: item.item_format,\n    //             materials: item.materials,\n    //             physical_dimensions: item.physical_dimensions,\n    //             editor: item.editor,\n    //             publisher: item.publisher,\n    //             further_info: item.further_info,\n    //             language: item.language,\n    //             reference: item.reference,\n    //             rights: item.rights,\n    //             file_format: item.file_format,\n    //             category_ref: item.category_ref,\n    //             subcategory_ref: item.subcategory_ref\n    //         }\n    //     })\n\n    //     if (item.external_link && item.external_link.length && item.external_link.url) {\n    //         // console.log(item.external_link[0].url);\n    //         this.setState({\n                \n    //             formdata: {\n    //                 ...this.state.formdata,\n    //                 external_link : {\n    //                     url: item.external_link[0].url,\n    //                     text: item.external_link[0].text\n    //                 }\n    //             }\n    //         })\n    //     }\n            \n            \n\n    //     if (item.geo && item.geo.length && item.geo.address) {\n    //         this.setState({\n               \n    //             formdata: {\n    //                 ...this.state.formdata,\n    //                 geo: {\n    //                     address: item.geo.address\n    //                 }\n    //             }\n    //         })\n    //         // console.log(this.state);\n    //     }\n\n    //     // console.log(this.state.formdata);\n    // }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        // console.log(this.state.formdata);\n\n        this.props.dispatch(updateItem({\n                ...this.state.formdata\n            }\n        ))\n    }\n\n    \n\n\n\n    createTextInput = (stateVar, name, placeholder, label, level) => {\n        // let string = `this.state.formdata.${variable}`;\n\n        return (\n            <tr>\n                <td>\n                    {label}\n                </td>\n                <td>\n                    <div className=\"form_element\">\n                        <input\n                            type=\"text\"\n                            placeholder={placeholder}\n                            value={stateVar} \n                            onChange={(event) => this.handleInput(event, name, level)}\n                        />\n                    </div>\n                </td>\n                \n            </tr>\n        )\n    }\n\n    // createOtherTextInput = (stateVar, name, placeholder, type) => {\n    //     // let string = `this.state.formdata.${variable}`;\n\n    //     return (\n    //         <div className=\"form_element\">\n    //             <input\n    //                 type=\"text\"\n    //                 placeholder={placeholder}\n    //                 value={stateVar} \n    //                 onChange={(event) => this.handleOtherInput(event, name)}\n    //             />\n    //         </div>\n    //     )\n    // }\n\n    // ************** FILE UPLOAD STUFF *******************\n\n    onChangeHandler = (event) => {\n\n        // this.setState({\n        //     selectedFile: event.target.files\n        //     // loaded: 0\n        //   })\n\n        var files = event.target.files;\n\n        if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {  \n            this.setState({\n                selectedFile: files\n            })\n        }\n    }\n\n\n\n    onClickHandler = () => {\n        const data = new FormData() \n        \n        // data.append('file', this.state.selectedFile);\n        for(var x = 0; x<this.state.selectedFile.length; x++) {\n            data.append('file', this.state.selectedFile[x])\n        }\n        \n        axios.post(`http://localhost:8000/upload`, data, { \n                // receive two parameter endpoint url ,form data \n                onUploadProgress: ProgressEvent => {\n                    this.setState({\n                        loaded: (ProgressEvent.loaded / ProgressEvent.total*100)\n                    })\n                }\n            })\n            .then(res => { // then print response status\n                console.log(res.statusText)\n                toast.success('upload success')\n            })\n            .catch(err => { \n                toast.error('upload fail')\n            })\n\n\n    }\n\n    maxSelectFile=(event)=>{\n        let files = event.target.files // create file object\n            if (files.length > 6) { \n               const msg = 'Only 6 images can be uploaded at a time'\n               event.target.value = null // discard selected file\n               console.log(msg)\n              return false;\n     \n          }\n        return true;\n     \n    }\n\n    checkMimeType=(event)=>{\n        //getting file object\n        let files = event.target.files \n        //define message container\n        let err = ''\n        // list allow mime type\n        const types = ['image/png', 'image/jpeg', 'image/gif']\n        // loop access array\n        for(var x = 0; x<files.length; x++) {\n         // compare file type find doesn't matach\n            if (types.every(type => files[x].type !== type)) {\n                // create error message and assign to container   \n                err += files[x].type+' is not a supported format\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) { // loop create toast massage\n            event.target.value = null \n            toast.error(err[z])\n        }\n        return true;\n    }\n\n    checkFileSize=(event)=>{\n        let files = event.target.files\n        let size = 15000 \n        let err = \"\"; \n\n        for(var x = 0; x<files.length; x++) {\n            if (files[x].size > size) {\n                err += files[x].type+'is too large, please pick a smaller file\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) {\n            toast.error(err[z])\n            event.target.value = null\n        }\n        return true;\n   \n    }    \n\n    // ****************************************************\n\n    // <div className=\"form_element\">\n    //     <input\n    //         type=\"text\"\n    //         placeholder=\"Enter title\"\n    //         value={this.state.formdata.title} \n    //         onChange={(event) => this.handleInput(event, 'title')}\n    //     />\n    // </div>\n\n\n    // createSelectInput = (db, value, name, placeholder) => {\n    //     return (\n    //         <tr>\n    //             <div className=\"form_element\">\n    //                 <select\n    //                     value={value}\n    //                     onChange={(event) => this.handleInput(event, name)}\n    //                 >\n    //                     <option value=\"\" disabled selected>{placeholder}</option>\n    //                     <option value={null} >N/A</option>\n\n    //                     {db.map( (option, i) => (\n    //                         <option key={i} value={option.id}>{option.title}</option>\n    //                     ) )}\n    //                 </select>\n    //             </div>\n    //         </tr>\n    //     )\n    // }\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    } \n\n    render() {\n        console.log(this.state.formdata.tags);\n\n        let items = this.props.items;\n\n        return (\n            \n            <div className=\"rl_container article edit_page\">\n                {\n                    items.updateItem ?\n                        <div className=\"edit_confirm\">\n                            Post updated, <Link to={`/items/${items.item._id}`}>\n                                Click here to see your post\n                            </Link>\n                        </div>\n                    : null\n                }\n\n\n                {\n                    items.itemDeleted ?\n                        <div className=\"red_tag\">\n                            Item Deleted    \n                            {this.redirectUser()}\n                        </div>\n\n                    : null\n                }\n\n\n                <form onSubmit={this.submitForm}>\n                    \n                    <h2>Edit item:</h2>\n\n                    <img src={`/images/items/${this.state.formdata._id}/sq_thumbnail/0.jpg`} alt=\"Item\" onError={this.addDefaultImg}/>\n\n                    <table>\n                    <tbody>\n                    \n                        {this.createTextInput(this.state.formdata.title,'title', \"Enter title\", \"Title\")}\n                        {this.createTextInput(this.state.formdata.creator,'creator', \"Enter creator\", \"Creator\")}\n\n\n\n\n                        <tr>\n                            <td className=\"label\">\n                                Description\n                            </td>\n                            <td>\n                                <textarea\n                                    value={this.state.formdata.description}\n                                    onChange={(event) => this.handleInput(event, 'description')}\n                                />\n                            </td>\n                        </tr>\n\n                        \n                        <tr>\n                            <td className=\"label\">\n                                Pages\n                            </td>\n                            <td>\n                                <div className=\"form_element\">\n                                    <input\n                                        type=\"number\"\n                                        placeholder=\"Enter pages\"\n                                        value={this.state.formdata.pages} \n                                        onChange={(event) => this.handleInput(event, 'pages')}                        />\n                                </div>\n                            </td>\n                        </tr>\n\n                        {this.createTextInput(this.state.formdata.source,'source', \"Enter item source\", \"Source\")}\n                        {this.createTextInput(this.state.formdata.subject,'subject', \"Subject\", \"Subject\")}\n                        {this.createTextInput(this.state.formdata.date_created,'date_created', \"Date item was created\", \"Date\")}\n                        <tr>\n                            <td>\n                                Tags\n                            </td>\n                            <td>\n                                <Tags tags={this.state.formdata.tags} id={this.props.match.params.id}/>\n                            </td>\n                        </tr>\n                        {this.createTextInput(this.state.formdata.contributor,'contributor', \"contributor\", \"Contributor\")}\n                        {this.createTextInput(this.state.formdata.item_format,'item_format', \"The item's format\", \"Format\")}\n                        {this.createTextInput(this.state.formdata.materials,'materials', \"materials\", \"Materials\")}\n                        {this.createTextInput(this.state.formdata.physical_dimensions,'physical_dimensions', \"Physical dimensions\", \"Dimensions\")}\n                        {this.createTextInput(this.state.formdata.editor,'editor', \"editor\", \"Editor\")}\n                        {this.createTextInput(this.state.formdata.publisher,'publisher', \"publisher\", \"Publisher\")}\n                        {this.createTextInput(this.state.formdata.further_info,'further_info', \"Enter any further info, resources..\", \"Further Info\")}\n                        \n                        {this.createTextInput(this.state.formdata.external_link.url,'url', \"External link url\", \"URL\")}\n                        {this.createTextInput(this.state.formdata.external_link.text,'text', \"External link text\", 'Description of the link', \"Link Description\")}\n\n                        {this.createTextInput(this.state.formdata.language,'language', \"language\", \"Language\")}\n                        {this.createTextInput(this.state.formdata.reference,'reference', \"reference\", \"Ref\")}\n                        {this.createTextInput(this.state.formdata.rights,'rights', \"rights\", \"Rights\")}\n                        {this.createTextInput(this.state.formdata.geo.address,'address', \"Item address\", \"Address\")}\n                        \n                        <tr>\n                            <td>\n                                Collection\n                            </td>\n                            <td>\n                                <div className=\"form_element\">\n                                    <select\n                                        value={this.state.formdata.collection_id}\n                                        onChange={(event) => this.handleInput(event, 'collection_id')}\n                                    >\n                                        <option value=\"\" disabled selected>Collection</option>\n                                        <option value={null} >* None</option>\n\n                                        { this.props.colls && this.props.colls.length ?\n                                            this.props.colls.map ( (coll, i) => (\n                                                <option key={i} value={`\"${coll.id}\"`}>{coll.title}</option>\n                                            ))\n                                        : null }\n                                    </select>\n                                </div>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                                Category\n                            </td>\n                            <td>\n                                <div className=\"form_element\">\n                                    <select\n                                        value={this.state.formdata.category_ref}\n                                        onChange={(event) => this.handleInput(event, 'category_ref')}\n                                    >   \n                                        <option value=\"\" disabled selected>Category</option>\n\n                                        <option value=\"\">* None</option>\n\n                                        { this.props.cats && this.props.cats.length ?\n                                            this.props.cats.map ( (cat, i) => (\n                                                <option key={i} value={`\"${cat.cat_id}\"`}>{cat.title}</option>\n                                            ))\n                                        : null }\n                                    </select>\n                                </div>\n                            </td>\n                        </tr>  \n\n                        <tr>\n                            <td>\n                                \n                            </td>\n                            <td>\n                                <span>Selected: \n                                    { this.state.formdata.category_ref && this.state.formdata.category_ref.length > 0 ?\n                                        this.state.formdata.category_ref.map( (ref, i) => (\n                                            <span>{ref} </span>\n                                        )) \n                                    : <span>No categories selected</span>}\n                                </span>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                                Sub-categories \n                            </td>\n                            <td>\n                                <div className=\"form_element\">\n                                    <select\n                                        value={this.state.formdata.subcategory_ref}\n                                        onChange={(event) => this.handleInput(event, 'subcategory_ref')}\n                                    >\n                                        <option value=\"\" disabled selected>Sub Category</option>\n                                        <option value=\"\" >* None</option>\n\n                                        { this.props.subcats && this.props.subcats.length ?\n                                            this.props.subcats.map ( (subcat, i) => (\n                                                <option key={i} value={`\"${subcat.subcat_id}\"`}>{subcat.title}</option>\n                                            ))\n                                        : null }\n                                    </select>\n                                </div>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                                Upload \n                            </td>\n                            <td>\n                                <div className=\"form_element\">\n                                    <input type=\"file\" className=\"form-control\" multiple name=\"file\" onChange={this.onChangeHandler}/>\n                                    <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button> \n\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                    </table>\n\n\n\n\n\n                    <button type=\"submit\">Submit Edit</button>\n                    \n                    <div className=\"delete_post\">\n                        <div className=\"button\" onClick={(e) => { if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e) } }>\n                            Delete item\n                        </div>\n\n\n           \n\n\n\n                    </div>\n\n\n\n\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    // console.log(state); \n    return {\n        items:state.items,\n        colls:state.collections.colls,\n        cats:state.cats.cats,\n        subcats:state.cats.subcats\n    }\n}\n\nexport default connect(mapStateToProps)(EditItem)\n\n\n"]},"metadata":{},"sourceType":"module"}