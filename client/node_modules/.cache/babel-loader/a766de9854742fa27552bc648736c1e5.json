{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Select from 'react-select';\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions';\nimport Tags from '../../widgetsUI/tags';\n\nclass EditItem extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        _id: this.props.match.params.id,\n        title: '',\n        creator: '',\n        subject: '',\n        description: '',\n        source: '',\n        date_created: '',\n        contributor: '',\n        collection_id: '',\n        item_format: '',\n        materials: '',\n        physical_dimensions: '',\n        pages: '',\n        editor: '',\n        publisher: '',\n        further_info: '',\n        language: '',\n        reference: '',\n        rights: '',\n        file_format: '',\n        address: '',\n        category_ref: '',\n        subcategory_ref: '',\n        tags: [{\n          id: '',\n          text: ''\n        }],\n        external_link: {\n          url: '',\n          text: ''\n        },\n        geo: {\n          address: ''\n        }\n      },\n      selectedFile: null,\n      loaded: 0,\n      catOptions: [],\n      existingCats: [],\n      updatedCats: [],\n      catsAreUpdated: false\n    };\n\n    this.handleInput = (event, name, level) => {\n      // make a copy of formdata\n      const newFormdata = { ...this.state.formdata\n      };\n\n      if (level === 'external_link') {\n        newFormdata.external_link[name] = event.target.value;\n      } else if (level === 'geo') {\n        newFormdata.geo[name] = event.target.value;\n      } else if (level === 'tags') {\n        newFormdata.tags[name] = event.target.value;\n      } else {\n        newFormdata[name] = event.target.value;\n      } // copy it back to state\n\n\n      this.setState({\n        formdata: newFormdata\n      });\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.props.match.params.id));\n      this.props.history.push('/user/all-items');\n    };\n\n    this.redirectUser = () => {\n      setTimeout(() => {\n        this.props.history.push('/user/all-items');\n      }, 1000);\n    };\n\n    this.handleChangeCats = newValue => {\n      if (newValue && newValue.length) {\n        this.setState({\n          updatedCats: [...newValue]\n        });\n      } else {\n        this.setState({\n          updatedCats: []\n        });\n      }\n    };\n\n    this.onClickHandlerCats = () => {\n      let updateData = {\n        _id: '5edcbc5027c3271205b2360a',\n        category_ref: []\n      };\n\n      if (this.state.updatedCats && this.state.updatedCats.length) {\n        this.state.updatedCats.map(cat => {\n          updateData.category_ref.push(cat.value);\n        });\n      }\n\n      this.props.dispatch(updateItem({ ...updateData\n      }));\n    };\n\n    this.submitForm = e => {\n      e.preventDefault(); // console.log(this.state.formdata);\n\n      this.props.dispatch(updateItem({ ...this.state.formdata\n      }));\n    };\n\n    this.createTextInput = (stateVar, name, placeholder, label, level) => {\n      // let string = `this.state.formdata.${variable}`;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }\n      }, label), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form_element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: placeholder,\n        value: stateVar,\n        onChange: event => this.handleInput(event, name, level),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }\n      }))));\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {\n        this.setState({\n          selectedFile: files\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n\n      for (var x = 0; x < this.state.selectedFile.length; x++) {\n        data.append('file', this.state.selectedFile[x]);\n      }\n\n      axios.post(`http://localhost:8000/upload`, data, {\n        // receive two parameter endpoint url ,form data \n        onUploadProgress: ProgressEvent => {\n          this.setState({\n            loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n          });\n        }\n      }).then(res => {\n        // then print response status\n        console.log(res.statusText);\n        toast.success('upload success');\n      }).catch(err => {\n        toast.error('upload fail');\n      });\n    };\n\n    this.maxSelectFile = event => {\n      let files = event.target.files; // create file object\n\n      if (files.length > 6) {\n        const msg = 'Only 6 images can be uploaded at a time';\n        event.target.value = null; // discard selected file\n\n        console.log(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = ''; // list allow mime type\n\n      const types = ['image/png', 'image/jpeg', 'image/gif']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // loop create toast massage\n        event.target.value = null;\n        toast.error(err[z]);\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 15000;\n      let err = \"\";\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err += files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById(this.props.match.params.id));\n    this.props.dispatch(getAllColls());\n    this.props.dispatch(getAllCats());\n    this.props.dispatch(getAllSubCats());\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearItem());\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // *********** GENERAL FORM STUFF *****************************\n    if (nextProps.items.item) {\n      console.log(nextProps.items.item);\n      let item = nextProps.items.item; // console.log(item.title);\n      // can create a updatedFormdata variable, but no need\n\n      let formdata = prevState.formdata; // this.setState({\n\n      formdata = { ...formdata,\n        _id: item._id,\n        title: item.title,\n        //\n        creator: item.creator,\n        //\n        description: item.description,\n        //\n        pages: item.pages,\n        //\n        collection_id: item.collection_id,\n        //\n        source: item.source,\n        //\n        subject: item.subject,\n        date_created: item.date_created,\n        tags: item.tags,\n        contributor: item.contributor,\n        item_format: item.item_format,\n        materials: item.materials,\n        physical_dimensions: item.physical_dimensions,\n        editor: item.editor,\n        publisher: item.publisher,\n        further_info: item.further_info,\n        language: item.language,\n        reference: item.reference,\n        rights: item.rights,\n        file_format: item.file_format,\n        category_ref: item.category_ref,\n        subcategory_ref: item.subcategory_ref\n      };\n\n      if (item.external_link && item.external_link.length && item.external_link.url) {\n        // console.log(item.external_link[0].url);\n        formdata = {\n          formdata,\n          external_link: {\n            url: item.external_link[0].url,\n            text: item.external_link[0].text\n          }\n        };\n      }\n\n      if (item.geo && item.geo.length && item.geo.address) {\n        formdata = { ...formdata,\n          geo: {\n            address: item.geo.address\n          }\n        }; // console.log(this.state);\n      }\n\n      return formdata;\n    } // *********** CATEGORY SELECT *****************************\n\n\n    let catOptionsFromProps = prevState.catOptions;\n    let catsFromProps = prevState.existingCats;\n\n    if (nextProps.cats && nextProps.cats.length) {\n      nextProps.cats.map((cat, i) => {\n        catOptionsFromProps.push({\n          value: cat.cat_id,\n          label: cat.title\n        });\n      });\n\n      if (nextProps.items && nextProps.items.item && nextProps.items.item.category_ref && nextProps.items.item.category_ref.length) {\n        nextProps.items.item.category_ref.map((catref, i) => {\n          let catTitle;\n          nextProps.cats.map((cat, i) => {\n            if (cat.cat_id == catref) {\n              catTitle = cat.title;\n              catsFromProps.push({\n                value: catref,\n                label: catTitle\n              });\n            }\n          });\n        });\n      }\n    }\n\n    return {\n      catOptions: catOptionsFromProps,\n      existingCats: catsFromProps,\n      catsAreUpdated: true\n    }; // *********** TAGS SELECT *****************************\n    // *********** COLLECTION SELECT *****************************\n  }\n\n  render() {\n    console.log(this.state.formdata);\n    let items = this.props.items;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article edit_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 13\n      }\n    }, items.updateItem ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 25\n      }\n    }, \"Post updated, \", /*#__PURE__*/React.createElement(Link, {\n      to: `/items/${items.item._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 43\n      }\n    }, \"Click here to see your post\")) : null, items.itemDeleted ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red_tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 25\n      }\n    }, \"Item Deleted\", this.redirectUser()) : null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 21\n      }\n    }, \"Edit item:\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: `/images/items/${this.state.formdata._id}/sq_thumbnail/0.jpg`,\n      alt: \"Item\",\n      onError: this.addDefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 21\n      }\n    }, this.createTextInput(this.state.formdata.title, 'title', \"Enter title\", \"Title\"), this.createTextInput(this.state.formdata.creator, 'creator', \"Enter creator\", \"Creator\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 29\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.formdata.description,\n      onChange: event => this.handleInput(event, 'description'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 29\n      }\n    }, \"Pages\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter pages\",\n      value: this.state.formdata.pages,\n      onChange: event => this.handleInput(event, 'pages'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 37\n      }\n    })))), this.createTextInput(this.state.formdata.source, 'source', \"Enter item source\", \"Source\"), this.createTextInput(this.state.formdata.subject, 'subject', \"Subject\", \"Subject\"), this.createTextInput(this.state.formdata.date_created, 'date_created', \"Date item was created\", \"Date\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 29\n      }\n    }, \"Tags\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Tags, {\n      tags: this.state.formdata.tags,\n      id: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 33\n      }\n    }))), this.createTextInput(this.state.formdata.contributor, 'contributor', \"contributor\", \"Contributor\"), this.createTextInput(this.state.formdata.item_format, 'item_format', \"The item's format\", \"Format\"), this.createTextInput(this.state.formdata.materials, 'materials', \"materials\", \"Materials\"), this.createTextInput(this.state.formdata.physical_dimensions, 'physical_dimensions', \"Physical dimensions\", \"Dimensions\"), this.createTextInput(this.state.formdata.editor, 'editor', \"editor\", \"Editor\"), this.createTextInput(this.state.formdata.publisher, 'publisher', \"publisher\", \"Publisher\"), this.createTextInput(this.state.formdata.further_info, 'further_info', \"Enter any further info, resources..\", \"Further Info\"), this.createTextInput(this.state.formdata.external_link.url, 'url', \"External link url\", \"URL\"), this.createTextInput(this.state.formdata.external_link.text, 'text', \"External link text\", 'Description of the link', \"Link Description\"), this.createTextInput(this.state.formdata.language, 'language', \"language\", \"Language\"), this.createTextInput(this.state.formdata.reference, 'reference', \"reference\", \"Ref\"), this.createTextInput(this.state.formdata.rights, 'rights', \"rights\", \"Rights\"), this.createTextInput(this.state.formdata.geo.address, 'address', \"Item address\", \"Address\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 29\n      }\n    }, \"Collection\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 29\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 33\n      }\n    }, this.state.catsAreUpdated && this.props.items && this.props.items.item ? /*#__PURE__*/React.createElement(Select, {\n      defaultValue: this.state.existingCats,\n      isMulti: true,\n      name: \"colors\",\n      options: this.state.catOptions,\n      className: \"basic-multi-select\",\n      classNamePrefix: \"select\",\n      onChange: this.handleChangeCats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 41\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 29\n      }\n    }, \"Sub-categories\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 29\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      multiple: true,\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 37\n      }\n    }, \"Upload\")))))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 21\n      }\n    }, \"Submit Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"delete_post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: e => {\n        if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 25\n      }\n    }, \"Delete item\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items,\n    colls: state.collections.colls,\n    cats: state.cats.cats,\n    subcats: state.cats.subcats\n  };\n}\n\nexport default connect(mapStateToProps)(EditItem);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js"],"names":["React","PureComponent","connect","Link","axios","ToastContainer","toast","Select","getItemById","updateItem","clearItem","deleteItem","getAllColls","getAllCats","getAllSubCats","Tags","EditItem","state","formdata","_id","props","match","params","id","title","creator","subject","description","source","date_created","contributor","collection_id","item_format","materials","physical_dimensions","pages","editor","publisher","further_info","language","reference","rights","file_format","address","category_ref","subcategory_ref","tags","text","external_link","url","geo","selectedFile","loaded","catOptions","existingCats","updatedCats","catsAreUpdated","handleInput","event","name","level","newFormdata","target","value","setState","deletePost","dispatch","history","push","redirectUser","setTimeout","handleChangeCats","newValue","length","onClickHandlerCats","updateData","map","cat","submitForm","e","preventDefault","createTextInput","stateVar","placeholder","label","onChangeHandler","files","maxSelectFile","checkMimeType","onClickHandler","data","FormData","x","append","post","onUploadProgress","ProgressEvent","total","then","res","console","log","statusText","success","catch","err","error","msg","types","every","type","z","checkFileSize","size","addDefaultImg","ev","newImg","src","componentDidMount","componentWillUnmount","getDerivedStateFromProps","nextProps","prevState","items","item","catOptionsFromProps","catsFromProps","cats","i","cat_id","catref","catTitle","render","itemDeleted","window","confirm","mapStateToProps","colls","collections","subcats"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Select from 'react-select';\n\n\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats  } from '../../actions';\nimport Tags from '../../widgetsUI/tags';\n\n\n\nclass EditItem extends PureComponent {\n\n\n    state = {\n        formdata:{\n            _id:this.props.match.params.id,\n            title: '',\n            creator: '',\n            subject: '',\n            description: '',\n            source: '',\n            date_created: '',\n            \n            contributor: '',\n            collection_id: '',     \n            item_format: '',\n            materials: '',\n            physical_dimensions: '',\n            pages: '',        \n            editor: '',\n            publisher: '',\n            further_info: '',\n            language: '',\n            reference: '',\n            rights: '',\n            file_format: '',\n            address: '',\n            category_ref: '',\n            subcategory_ref: '',\n            tags: [\n                {\n                    id: '',\n                    text: ''\n                }\n            ],\n            external_link: {\n                url: '',\n                text: ''\n            },\n            geo: {\n                address: ''\n            }\n        },\n        selectedFile: null,\n        loaded: 0,\n        catOptions: [],\n        existingCats: [],\n        updatedCats: [],\n        catsAreUpdated: false\n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(getItemById(this.props.match.params.id))\n        this.props.dispatch(getAllColls())\n        this.props.dispatch(getAllCats());\n        this.props.dispatch(getAllSubCats());\n    }\n\n\n    componentWillUnmount() {\n        this.props.dispatch(clearItem())\n    }\n\n    handleInput = (event, name, level) => {\n        // make a copy of formdata\n        const newFormdata = {\n            ...this.state.formdata\n        }\n\n\n        if (level === 'external_link') {\n            newFormdata.external_link[name] = event.target.value;\n        } else if (level === 'geo') {\n            newFormdata.geo[name] = event.target.value;\n        } else if (level === 'tags') {\n            newFormdata.tags[name] = event.target.value;\n        } else {\n            newFormdata[name] = event.target.value;\n        }\n\n\n        // copy it back to state\n        this.setState({\n            formdata:newFormdata\n\n        })\n    }\n\n\n\n\n    \n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.props.match.params.id));\n        this.props.history.push('/user/all-items');\n    }\n\n\n\n    redirectUser = () => {\n        setTimeout(() => {\n            this.props.history.push('/user/all-items')\n        }, 1000)\n    }\n\n\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        \n\n        // *********** GENERAL FORM STUFF *****************************\n\n\n        if (nextProps.items.item ) {\n\n            console.log(nextProps.items.item);\n            let item = nextProps.items.item;\n            \n            // console.log(item.title);\n\n            // can create a updatedFormdata variable, but no need\n            \n            let formdata = prevState.formdata;\n            \n            \n            // this.setState({\n                formdata = {\n                    ...formdata,\n                    _id:item._id,\n                    title:item.title,  //\n                    creator:item.creator,  //\n                    description:item.description,  //\n                    pages:item.pages,  //\n                    collection_id:item.collection_id,  //\n                    source:item.source,   //\n\n                    subject: item.subject,\n                    date_created: item.date_created,\n                    tags: item.tags,\n                    contributor: item.contributor,\n                    item_format: item.item_format,\n                    materials: item.materials,\n                    physical_dimensions: item.physical_dimensions,\n                    editor: item.editor,\n                    publisher: item.publisher,\n                    further_info: item.further_info,\n                    language: item.language,\n                    reference: item.reference,\n                    rights: item.rights,\n                    file_format: item.file_format,\n                    category_ref: item.category_ref,\n                    subcategory_ref: item.subcategory_ref\n                }\n            \n            if (item.external_link && item.external_link.length && item.external_link.url) {\n                // console.log(item.external_link[0].url);\n                \n\n                    \n                    formdata = {\n                        formdata,\n                        external_link : {\n                            url: item.external_link[0].url,\n                            text: item.external_link[0].text\n                        }\n                    }\n                \n            }\n                \n                \n\n            if (item.geo && item.geo.length && item.geo.address) {\n                    \n                    formdata = {\n                        ...formdata,\n                        geo: {\n                            address: item.geo.address\n                        }\n                    }\n                \n                // console.log(this.state);\n            }\n            return formdata;\n        }\n\n\n        // *********** CATEGORY SELECT *****************************\n\n        let catOptionsFromProps = prevState.catOptions;\n        let catsFromProps = prevState.existingCats;\n\n        if (nextProps.cats && nextProps.cats.length) {\n            nextProps.cats.map( (cat, i) => {\n                catOptionsFromProps.push({\n                    value: cat.cat_id,\n                    label: cat.title\n                })\n            })\n\n            if (nextProps.items && nextProps.items.item && nextProps.items.item.category_ref && nextProps.items.item.category_ref.length ) {\n                nextProps.items.item.category_ref.map( (catref, i) => {\n                    let catTitle;\n                    nextProps.cats.map( (cat, i) => {\n                        if (cat.cat_id == catref) {\n                            catTitle = cat.title;\n                            catsFromProps.push({\n                                value: catref,\n                                label: catTitle\n                            })\n                        }\n                    })\n                })\n            }\n        }\n        return {\n            catOptions: catOptionsFromProps,\n            existingCats: catsFromProps,\n            catsAreUpdated: true\n        }\n\n\n        // *********** TAGS SELECT *****************************\n\n\n\n        // *********** COLLECTION SELECT *****************************\n\n\n    }\n\n\n    handleChangeCats = (newValue) => {\n        if (newValue && newValue.length) {\n            this.setState({ \n                updatedCats: [...newValue]\n            });\n        } else {\n            this.setState({ \n                updatedCats: []\n            });\n        }\n\n\n    };\n\n    onClickHandlerCats = () => {\n        let updateData = {\n            _id: '5edcbc5027c3271205b2360a',\n            category_ref: []\n        };\n        if (this.state.updatedCats && this.state.updatedCats.length) {\n            this.state.updatedCats.map( cat => {\n                updateData.category_ref.push(cat.value);\n            })\n        } \n        this.props.dispatch(updateItem({\n            ...updateData\n        }))\n    }\n\n\n\n\n\n\n    submitForm = (e) => {\n        e.preventDefault();\n        // console.log(this.state.formdata);\n\n        this.props.dispatch(updateItem({\n                ...this.state.formdata\n            }\n        ))\n    }\n\n    \n\n\n\n    createTextInput = (stateVar, name, placeholder, label, level) => {\n        // let string = `this.state.formdata.${variable}`;\n\n        return (\n            <tr>\n                <td>\n                    {label}\n                </td>\n                <td>\n                    <div className=\"form_element\">\n                        <input\n                            type=\"text\"\n                            placeholder={placeholder}\n                            value={stateVar} \n                            onChange={(event) => this.handleInput(event, name, level)}\n                        />\n                    </div>\n                </td>\n                \n            </tr>\n        )\n    }\n\n\n\n    // ************** FILE UPLOAD STUFF *******************\n\n    onChangeHandler = (event) => {\n\n\n        var files = event.target.files;\n\n        if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {  \n            this.setState({\n                selectedFile: files\n            })\n        }\n    }\n\n\n\n    onClickHandler = () => {\n        const data = new FormData() \n        \n        for(var x = 0; x<this.state.selectedFile.length; x++) {\n            data.append('file', this.state.selectedFile[x])\n        }\n        \n        axios.post(`http://localhost:8000/upload`, data, { \n                // receive two parameter endpoint url ,form data \n                onUploadProgress: ProgressEvent => {\n                    this.setState({\n                        loaded: (ProgressEvent.loaded / ProgressEvent.total*100)\n                    })\n                }\n            })\n            .then(res => { // then print response status\n                console.log(res.statusText)\n                toast.success('upload success')\n            })\n            .catch(err => { \n                toast.error('upload fail')\n            })\n\n\n    }\n\n    maxSelectFile=(event)=>{\n        let files = event.target.files // create file object\n            if (files.length > 6) { \n               const msg = 'Only 6 images can be uploaded at a time'\n               event.target.value = null // discard selected file\n               console.log(msg)\n              return false;\n     \n          }\n        return true;\n     \n    }\n\n    checkMimeType=(event)=>{\n        //getting file object\n        let files = event.target.files \n        //define message container\n        let err = ''\n        // list allow mime type\n        const types = ['image/png', 'image/jpeg', 'image/gif']\n        // loop access array\n        for(var x = 0; x<files.length; x++) {\n         // compare file type find doesn't matach\n            if (types.every(type => files[x].type !== type)) {\n                // create error message and assign to container   \n                err += files[x].type+' is not a supported format\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) { // loop create toast massage\n            event.target.value = null \n            toast.error(err[z])\n        }\n        return true;\n    }\n\n    checkFileSize=(event)=>{\n        let files = event.target.files\n        let size = 15000 \n        let err = \"\"; \n\n        for(var x = 0; x<files.length; x++) {\n            if (files[x].size > size) {\n                err += files[x].type+'is too large, please pick a smaller file\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) {\n            toast.error(err[z])\n            event.target.value = null\n        }\n        return true;\n   \n    }    \n\n    // ****************************************************\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    } \n\n    render() {\n        console.log(this.state.formdata);\n\n        let items = this.props.items;\n\n        return (\n            \n            <div className=\"rl_container article edit_page\">\n                {\n                    items.updateItem ?\n                        <div className=\"edit_confirm\">\n                            Post updated, <Link to={`/items/${items.item._id}`}>\n                                Click here to see your post\n                            </Link>\n                        </div>\n                    : null\n                }\n\n\n                {\n                    items.itemDeleted ?\n                        <div className=\"red_tag\">\n                            Item Deleted    \n                            {this.redirectUser()}\n                        </div>\n\n                    : null\n                }\n\n\n                <form onSubmit={this.submitForm}>\n                    \n                    <h2>Edit item:</h2>\n\n                    <img src={`/images/items/${this.state.formdata._id}/sq_thumbnail/0.jpg`} alt=\"Item\" onError={this.addDefaultImg}/>\n\n                    <table>\n                    <tbody>\n                    \n                        {this.createTextInput(this.state.formdata.title,'title', \"Enter title\", \"Title\")}\n                        {this.createTextInput(this.state.formdata.creator,'creator', \"Enter creator\", \"Creator\")}\n\n\n\n\n                        <tr>\n                            <td className=\"label\">\n                                Description\n                            </td>\n                            <td>\n                                <textarea\n                                    value={this.state.formdata.description}\n                                    onChange={(event) => this.handleInput(event, 'description')}\n                                />\n                            </td>\n                        </tr>\n\n                        \n                        <tr>\n                            <td className=\"label\">\n                                Pages\n                            </td>\n                            <td>\n                                <div className=\"form_element\">\n                                    <input\n                                        type=\"number\"\n                                        placeholder=\"Enter pages\"\n                                        value={this.state.formdata.pages} \n                                        onChange={(event) => this.handleInput(event, 'pages')}                        />\n                                </div>\n                            </td>\n                        </tr>\n\n                        {this.createTextInput(this.state.formdata.source,'source', \"Enter item source\", \"Source\")}\n                        {this.createTextInput(this.state.formdata.subject,'subject', \"Subject\", \"Subject\")}\n                        {this.createTextInput(this.state.formdata.date_created,'date_created', \"Date item was created\", \"Date\")}\n                        <tr>\n                            <td>\n                                Tags\n                            </td>\n                            <td>\n                                <Tags tags={this.state.formdata.tags} id={this.props.match.params.id}/>\n                            </td>\n                        </tr>\n                        {this.createTextInput(this.state.formdata.contributor,'contributor', \"contributor\", \"Contributor\")}\n                        {this.createTextInput(this.state.formdata.item_format,'item_format', \"The item's format\", \"Format\")}\n                        {this.createTextInput(this.state.formdata.materials,'materials', \"materials\", \"Materials\")}\n                        {this.createTextInput(this.state.formdata.physical_dimensions,'physical_dimensions', \"Physical dimensions\", \"Dimensions\")}\n                        {this.createTextInput(this.state.formdata.editor,'editor', \"editor\", \"Editor\")}\n                        {this.createTextInput(this.state.formdata.publisher,'publisher', \"publisher\", \"Publisher\")}\n                        {this.createTextInput(this.state.formdata.further_info,'further_info', \"Enter any further info, resources..\", \"Further Info\")}\n                        \n                        {this.createTextInput(this.state.formdata.external_link.url,'url', \"External link url\", \"URL\")}\n                        {this.createTextInput(this.state.formdata.external_link.text,'text', \"External link text\", 'Description of the link', \"Link Description\")}\n\n                        {this.createTextInput(this.state.formdata.language,'language', \"language\", \"Language\")}\n                        {this.createTextInput(this.state.formdata.reference,'reference', \"reference\", \"Ref\")}\n                        {this.createTextInput(this.state.formdata.rights,'rights', \"rights\", \"Rights\")}\n                        {this.createTextInput(this.state.formdata.geo.address,'address', \"Item address\", \"Address\")}\n                        \n                        <tr>\n                            <td>\n                                Collection\n                            </td>\n                            <td>\n                                <div className=\"form_element\">\n                                    {/* <select\n                                        value={this.state.formdata.collection_id}\n                                        onChange={(event) => this.handleInput(event, 'collection_id')}\n                                    >\n                                        <option value=\"\" disabled selected>Collection</option>\n                                        <option value={null} >* None</option>\n\n                                        { this.props.colls && this.props.colls.length ?\n                                            this.props.colls.map ( (coll, i) => (\n                                                <option key={i} value={`\"${coll.id}\"`}>{coll.title}</option>\n                                            ))\n                                        : null }\n                                    </select> */}\n                                </div>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                                Category\n                            </td>\n                            <td>\n                                <div className=\"form_element\">\n\n\n                                    {this.state.catsAreUpdated && this.props.items && this.props.items.item ?\n                                        <Select\n                                            defaultValue={this.state.existingCats}\n                                            isMulti\n                                            name=\"colors\"\n                                            options={this.state.catOptions}\n                                            className=\"basic-multi-select\"\n                                            classNamePrefix=\"select\"\n                                            onChange={this.handleChangeCats}\n                                        />\n                                    : null}\n\n\n                                    {/* <select\n                                        value={this.state.formdata.category_ref}\n                                        onChange={(event) => this.handleInput(event, 'category_ref')}\n                                    >   \n                                        <option value=\"\" disabled selected>Category</option>\n\n                                        <option value=\"\">* None</option>\n\n                                        { this.props.cats && this.props.cats.length ?\n                                            this.props.cats.map ( (cat, i) => (\n                                                <option key={i} value={`\"${cat.cat_id}\"`}>{cat.title}</option>\n                                            ))\n                                        : null }\n                                    </select> */}\n                                </div>\n                            </td>\n                        </tr>  \n\n                        {/* <tr>\n                            <td>\n                                \n                            </td>\n                            <td>\n                                <span>Selected: \n                                    { this.state.formdata.category_ref && this.state.formdata.category_ref.length > 0 ?\n                                        this.state.formdata.category_ref.map( (ref, i) => (\n                                            <span>{ref} </span>\n                                        )) \n                                    : <span>No categories selected</span>}\n                                </span>\n                            </td>\n                        </tr> */}\n\n                        <tr>\n                            <td>\n                                Sub-categories \n                            </td>\n                            <td>\n                                <div className=\"form_element\">\n                                    {/* <select\n                                        value={this.state.formdata.subcategory_ref}\n                                        onChange={(event) => this.handleInput(event, 'subcategory_ref')}\n                                    >\n                                        <option value=\"\" disabled selected>Sub Category</option>\n                                        <option value=\"\" >* None</option>\n\n                                        { this.props.subcats && this.props.subcats.length ?\n                                            this.props.subcats.map ( (subcat, i) => (\n                                                <option key={i} value={`\"${subcat.subcat_id}\"`}>{subcat.title}</option>\n                                            ))\n                                        : null }\n                                    </select> */}\n                                </div>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                                Upload \n                            </td>\n                            <td>\n                                <div className=\"form_element\">\n                                    <input type=\"file\" className=\"form-control\" multiple name=\"file\" onChange={this.onChangeHandler}/>\n                                    <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button> \n\n                                </div>\n                            </td>\n                        </tr>\n                        \n                    </tbody>\n                    </table>\n\n                    <button type=\"submit\">Submit Edit</button>\n                    \n                    <div className=\"delete_post\">\n                        <div className=\"button\" onClick={(e) => { if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e) } }>\n                            Delete item\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items:state.items,\n        colls:state.collections.colls,\n        cats:state.cats.cats,\n        subcats:state.cats.subcats\n    }\n}\n\nexport default connect(mapStateToProps)(EditItem)\n\n\n"]},"metadata":{},"sourceType":"module"}