{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/Categories/cat_view.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getItemsByCat, getCatById, getAllSubCats } from '../../actions';\nimport NavigationBar from '../../widgetsUI/navigation';\n\nclass CatView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      info: [],\n      theseSubcats: [],\n      subcatsUsed: []\n    };\n    this.navInfo = {\n      catTitle: null,\n      catId: null,\n      subCatTitle: null,\n      subCatId: null,\n      type: 'Categories'\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n\n    this.renderSubCatItems = subcat => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cat_grid_column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, this.state.subcatsUsed.includes(subcat.subcat_id) ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rule\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 46\n        }\n      }, subcat.title))) : null, this.props.catitems.map((item, i) => item.subcategory_ref.includes(subcat.subcat_id) ? /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/items/${item._id}`,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"figure\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n        alt: item.title,\n        onError: this.addDefaultImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"figcaption\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 41\n        }\n      }, item.title))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }\n      })) : null));\n    };\n\n    this.renderOtherItems = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cat_grid_column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rule\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 46\n        }\n      }, \"General\"))), this.props.catitems.map((item, i) => !item.subcategory_ref.length ? /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/items/${item._id}`,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"figure\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n        alt: item.title,\n        onError: this.addDefaultImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"figcaption\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 41\n        }\n      }, item.title))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      })) : null));\n    };\n\n    this.renderItemsBySub = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, this.state.theseSubcats.map(subcat => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cat_grid_row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, this.renderSubCatItems(subcat))));\n    };\n\n    this.renderGrid = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }, this.props.catitems && this.props.catitems.length ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, this.renderItemsBySub(), this.renderOtherItems()) : /*#__PURE__*/React.createElement(\"p\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 19\n        }\n      }, \"There are no items in this category.\"));\n    };\n\n    this.getCatName = () => {\n      if (this.props.catinfo && this.props.catinfo.length) {\n        this.navInfo.catTitle = this.props.catinfo[0].title;\n        this.navInfo.catId = this.props.catinfo[0].cat_id;\n      }\n    };\n  }\n\n  componentDidMount() {\n    let catId = this.props.match.params.id;\n    this.props.dispatch(getItemsByCat(catId));\n    this.props.dispatch(getCatById(catId));\n    this.props.dispatch(getAllSubCats(catId));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.catitems && nextProps.catitems.length) {\n      let tempArray = [];\n      nextProps.catitems.map((item, i) => tempArray.push({\n        src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n        caption: item.title,\n        link: `/items/${item._id}`\n      }));\n\n      if (tempArray.length) {\n        this.setState({\n          info: [...tempArray]\n        });\n      }\n    }\n\n    if (this.props.catinfo && this.props.catinfo.length) {\n      this.setState({\n        navInfo: {\n          catTitle: this.props.catinfo[0].title,\n          catId: this.props.catinfo[0].cat_id\n        }\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let theseSubcats = this.state.theseSubcats;\n    let subcatsUsed = this.state.subcatsUsed;\n\n    if (this.props !== prevProps) {\n      if (this.props.subcats !== prevProps.subcats) {\n        this.props.subcats.map(subcat => {\n          if (subcat.parent_cat == this.props.match.params.id) {\n            theseSubcats.push(subcat);\n          }\n        });\n      }\n\n      if (this.props.catitems !== prevProps.catitems) {\n        this.props.catitems.map((item, i) => {\n          if (!subcatsUsed.includes(item.subcategory_ref[0])) {\n            subcatsUsed.push(item.subcategory_ref[0]);\n          }\n        });\n      }\n\n      this.setState({\n        theseSubcats,\n        subcatsUsed\n      });\n    }\n  }\n\n  render() {\n    this.getCatName();\n    let catinfo = this.props.catinfo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cat_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      navinfo: this.navInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }), catinfo && catinfo.length > 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, catinfo[0].title) : null, this.props.catitems ? this.renderGrid() : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/cat-edit/${this.props.match.params.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, \"Edit\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    catitems: state.cats.catitems,\n    catinfo: state.cats.catinfo,\n    subcats: state.cats.subcats\n  };\n}\n\nexport default connect(mapStateToProps)(CatView);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/Categories/cat_view.js"],"names":["React","Component","connect","Link","getItemsByCat","getCatById","getAllSubCats","NavigationBar","CatView","state","info","theseSubcats","subcatsUsed","navInfo","catTitle","catId","subCatTitle","subCatId","type","addDefaultImg","ev","newImg","target","src","renderSubCatItems","subcat","includes","subcat_id","title","props","catitems","map","item","i","subcategory_ref","_id","renderOtherItems","length","renderItemsBySub","renderGrid","getCatName","catinfo","cat_id","componentDidMount","match","params","id","dispatch","componentWillReceiveProps","nextProps","tempArray","push","caption","link","setState","componentDidUpdate","prevProps","prevState","subcats","parent_cat","render","mapStateToProps","cats"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getItemsByCat, getCatById, getAllSubCats } from '../../actions';\nimport NavigationBar from '../../widgetsUI/navigation';\n\n\nclass CatView  extends Component {\n    \n    componentDidMount() {\n        let catId = this.props.match.params.id\n        this.props.dispatch(getItemsByCat(catId));\n        this.props.dispatch(getCatById(catId));\n        this.props.dispatch(getAllSubCats(catId));\n    }\n\n    state = {\n        info: [],\n        theseSubcats: [],\n        subcatsUsed: []\n    }\n    \n    navInfo = {\n        catTitle: null,\n        catId: null,\n        subCatTitle: null,\n        subCatId: null,\n        type: 'Categories'\n    }\n\n    componentWillReceiveProps(nextProps) {\n        \n        if (nextProps.catitems && nextProps.catitems.length) {\n            let tempArray = []\n            nextProps.catitems.map( (item, i) => (\n                    tempArray.push(\n                        {\n                            src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n                            caption: item.title,\n                            link: `/items/${item._id}` \n                        }\n                    )\n            ))\n            if (tempArray.length) {\n                this.setState({ info: [...tempArray]});\n            }\n        }\n        if (this.props.catinfo && this.props.catinfo.length) {\n            this.setState({\n                navInfo: {\n                    catTitle: this.props.catinfo[0].title,\n                    catId: this.props.catinfo[0].cat_id\n                }\n            })\n        }\n    }\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        let theseSubcats = this.state.theseSubcats;\n        let subcatsUsed = this.state.subcatsUsed;\n\n        if (this.props !== prevProps) {\n            \n            if (this.props.subcats !== prevProps.subcats) {\n                this.props.subcats.map( subcat => {\n                    if (subcat.parent_cat == this.props.match.params.id) {\n                        theseSubcats.push(subcat)\n                    }\n                })\n            }\n\n            if (this.props.catitems !== prevProps.catitems) {\n                this.props.catitems.map( (item, i) => {\n                    if (!subcatsUsed.includes(item.subcategory_ref[0])) {\n                        subcatsUsed.push(item.subcategory_ref[0])\n                    }\n                })\n            }\n\n            this.setState({\n                theseSubcats,\n                subcatsUsed\n            })\n        }\n    }\n\n\n    renderSubCatItems = (subcat) => {\n\n        return ( \n            <div className=\"cat_grid_column\">\n\n                {this.state.subcatsUsed.includes(subcat.subcat_id)  ? \n                    <div className=\"rule\"><p><span>{subcat.title}</span></p></div>\n                : null }\n\n                { this.props.catitems.map( (item, i) => (\n                    item.subcategory_ref.includes(subcat.subcat_id) ?\n\n                            <div key={i}>\n                                <Link to={`/items/${item._id}`}key={i}>\n                                    <figure key={i}>\n                                        <img src={`/images/items/${item._id}/sq_thumbnail/0.jpg`} \n                                            alt={item.title} \n                                            onError={this.addDefaultImg} />\n                                        <figcaption>{item.title}</figcaption>\n                                    </figure>\n                                </Link>\n                                <br/>\n                            </div>\n                    : null\n                ))}\n            </div>\n        )\n    }\n\n\n\n    renderOtherItems = () => {\n        return (\n            <div className=\"cat_grid_column\">\n\n                {/* {this.state.subcatsUsed.includes(subcat.subcat_id)  ?  */}\n                    <div className=\"rule\"><p><span>General</span></p></div>\n                {/* : null } */}\n\n                { this.props.catitems.map( (item, i) => (\n                    !item.subcategory_ref.length ?\n\n                            <div key={i}>\n                                <Link to={`/items/${item._id}`}key={i}>\n                                    <figure key={i}>\n                                        <img src={`/images/items/${item._id}/sq_thumbnail/0.jpg`} \n                                            alt={item.title} \n                                            onError={this.addDefaultImg} />\n                                        <figcaption>{item.title}</figcaption>\n                                    </figure>\n                                </Link>\n                                <br/>\n                            </div>\n                    : null\n                ))}\n            </div>\n        )\n    }\n\n\n    renderItemsBySub = () => {\n        return (\n            <div>\n                {this.state.theseSubcats.map( subcat => (\n                    <div className=\"cat_grid_row\">\n                        {this.renderSubCatItems(subcat)}\n                    </div>\n                ))}\n            </div>\n        )\n    }\n\n  \n\n\n\n    renderGrid = () => {\n        return(\n            <div>\n                { this.props.catitems && this.props.catitems.length ?\n                    <div>\n                        {this.renderItemsBySub()}\n                        {this.renderOtherItems()}\n                        \n                    </div>\n                : <p className=\"center\">There are no items in this category.</p> }\n            </div>\n    )}\n\n\n\n\n\n    getCatName = () => {\n        if (this.props.catinfo && this.props.catinfo.length) {\n            this.navInfo.catTitle = this.props.catinfo[0].title;\n            this.navInfo.catId = this.props.catinfo[0].cat_id;\n        }\n    }\n\n\n\n    render() {\n        this.getCatName();\n\n        let catinfo = this.props.catinfo;\n\n        return (\n            <div className=\"main_view\">\n                <div className=\"cat_view\">\n                    <NavigationBar navinfo={this.navInfo}/>\n                    { catinfo && catinfo.length > 0? \n                        <h2 className=\"title\">{catinfo[0].title}</h2>\n                    :null\n                    }\n\n                    { this.props.catitems ?\n                        this.renderGrid()\n                    : null }\n\n                    <div className=\"font_12\">\n                        <Link to={`/cat-edit/${this.props.match.params.id}`}>Edit</Link>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        catitems: state.cats.catitems,\n        catinfo: state.cats.catinfo,\n        subcats: state.cats.subcats\n        \n    }\n}\n\n\nexport default connect(mapStateToProps)(CatView)"]},"metadata":{},"sourceType":"module"}