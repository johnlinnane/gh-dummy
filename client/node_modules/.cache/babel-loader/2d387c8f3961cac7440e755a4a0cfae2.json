{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { getAllColls, getItemById, updateItem } from '../../actions';\n\nclass Sandbox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // catOptions: [],\n      // selected: [],\n      // savedCats: [],\n      testOptions: [{\n        value: '1',\n        label: 'Geography'\n      }, {\n        value: '2',\n        label: 'History'\n      }, {\n        value: '3',\n        label: 'Literature'\n      }, {\n        value: '4',\n        label: 'Photography'\n      }, {\n        value: '5',\n        label: 'Music'\n      }, {\n        value: '6',\n        label: 'Theatre'\n      }, {\n        value: '7',\n        label: 'Visual Arts'\n      }, {\n        value: '8',\n        label: 'Language'\n      }, {\n        value: '9',\n        label: 'Heritage'\n      }, {\n        value: '10',\n        label: 'Politics'\n      }, {\n        value: '11',\n        label: 'Film'\n      }, {\n        value: '12',\n        label: 'Radio'\n      }, {\n        value: '13',\n        label: 'Traveller Organisations'\n      }],\n      updated: false,\n      isClearable: true,\n      isDisabled: false,\n      isLoading: false,\n      isRtl: false,\n      isSearchable: true\n    };\n\n    this.handleChange = newValue => {\n      if (newValue && newValue.length) {\n        this.setState({\n          savedCats: [...newValue]\n        }); // newValue is not an array if empty\n      } else {\n        this.setState({\n          savedCats: []\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      let updateData = {\n        _id: '5edcbc5027c3271205b2360a',\n        category_ref: []\n      };\n\n      if (this.state.savedCats && this.state.savedCats.length) {\n        this.state.savedCats.map(cat => {\n          updateData.category_ref.push(cat.value);\n        });\n      }\n\n      this.props.dispatch(updateItem({ ...updateData\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getAllColls());\n    this.props.dispatch(getItemById('5edcbc5027c3271205b2360a'));\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let newCatOptions = prevState.catOptions;\n    let newSelected = prevState.selected; // check if props have arrived\n\n    if (nextProps.cats && nextProps.cats.length) {\n      // create list of all categories and ids\n      nextProps.cats.map((cat, i) => {\n        newCatOptions.push({\n          value: cat.cat_id,\n          label: cat.title\n        });\n      }); // chack for any categories already set\n\n      if (nextProps.items && nextProps.items.item && nextProps.items.item.category_ref && nextProps.items.item.category_ref.length) {\n        nextProps.items.item.category_ref.map((catref, i) => {\n          let catTitle;\n          nextProps.cats.map((cat, i) => {\n            if (cat.cat_id == catref) {\n              catTitle = cat.title;\n              newSelected.push({\n                value: catref,\n                label: catTitle\n              });\n            }\n          });\n        });\n      }\n    }\n\n    return {\n      catOptions: newCatOptions,\n      selected: newSelected,\n      updated: true\n    };\n  }\n\n  render() {\n    const {\n      isClearable,\n      isSearchable,\n      isDisabled,\n      isLoading,\n      isRtl\n    } = this.state;\n    const catOptions = this.state.catOptions;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, this.props.items.item && this.props.items.item.title ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, this.props.items.item.title) : null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"Collections:\"), this.state.updated ? /*#__PURE__*/React.createElement(Select, {\n      className: \"basic-single\",\n      classNamePrefix: \"select\",\n      defaultValue: colourOptions[0],\n      isDisabled: isDisabled,\n      isLoading: isLoading,\n      isClearable: isClearable,\n      isRtl: isRtl,\n      isSearchable: isSearchable,\n      name: \"color\",\n      options: testOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}\n\n;\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  return {\n    items: state.items,\n    colls: state\n  };\n}\n\nexport default connect(mapStateToProps)(Sandbox);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js"],"names":["React","connect","Select","getAllColls","getItemById","updateItem","Sandbox","Component","state","testOptions","value","label","updated","isClearable","isDisabled","isLoading","isRtl","isSearchable","handleChange","newValue","length","setState","savedCats","onClickHandler","updateData","_id","category_ref","map","cat","push","props","dispatch","componentDidMount","getDerivedStateFromProps","nextProps","prevState","newCatOptions","catOptions","newSelected","selected","cats","i","cat_id","title","items","item","catref","catTitle","render","colourOptions","mapStateToProps","console","log","colls"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\n\nimport { getAllColls, getItemById, updateItem } from '../../actions';\n\n\nclass Sandbox extends React.Component {\n    \n    state = {\n        // catOptions: [],\n        // selected: [],\n        // savedCats: [],\n        testOptions: [\n            { value: '1', label: 'Geography' },\n            { value: '2', label: 'History' },\n            { value: '3', label: 'Literature' },\n            { value: '4', label: 'Photography' },\n            { value: '5', label: 'Music' },\n\n            { value: '6', label: 'Theatre' },\n            { value: '7', label: 'Visual Arts' },\n            { value: '8', label: 'Language' },\n            { value: '9', label: 'Heritage' },\n            { value: '10', label: 'Politics' },\n            { value: '11', label: 'Film' },\n            { value: '12', label: 'Radio' },\n            { value: '13', label: 'Traveller Organisations' }\n        ],\n        updated: false,\n  \n        isClearable: true,\n        isDisabled: false,\n        isLoading: false,\n        isRtl: false,\n        isSearchable: true,\n      };\n\n    componentDidMount() {\n        this.props.dispatch(getAllColls());\n        this.props.dispatch(getItemById('5edcbc5027c3271205b2360a'));\n    }\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        \n        let newCatOptions = prevState.catOptions;\n        let newSelected = prevState.selected;\n        \n\n        // check if props have arrived\n        if (nextProps.cats && nextProps.cats.length) {\n            // create list of all categories and ids\n            nextProps.cats.map( (cat, i) => {\n                newCatOptions.push({\n                    value: cat.cat_id,\n                    label: cat.title\n                })\n            })\n\n            // chack for any categories already set\n            if (nextProps.items && nextProps.items.item && nextProps.items.item.category_ref && nextProps.items.item.category_ref.length ) {\n\n                nextProps.items.item.category_ref.map( (catref, i) => {\n\n                    let catTitle;\n\n                    nextProps.cats.map( (cat, i) => {\n                        if (cat.cat_id == catref) {\n                            catTitle = cat.title;\n\n                            newSelected.push({\n                                value: catref,\n                                label: catTitle\n                            })\n                        }\n                    })\n                })\n                \n            }\n        }\n        return {\n            catOptions: newCatOptions,\n            selected: newSelected,\n            updated: true\n        }\n    }\n\n\n    handleChange = (newValue) => {\n        if (newValue && newValue.length) {\n            this.setState({ \n                savedCats: [...newValue]\n            });\n        // newValue is not an array if empty\n        } else {\n            this.setState({ \n                savedCats: []\n            });\n        }\n\n\n    };\n\n    onClickHandler = () => {\n\n        let updateData = {\n            _id: '5edcbc5027c3271205b2360a',\n            category_ref: []\n        };\n\n        if (this.state.savedCats && this.state.savedCats.length) {\n            this.state.savedCats.map( cat => {\n                updateData.category_ref.push(cat.value);\n            })\n        } \n \n        this.props.dispatch(updateItem({\n            ...updateData\n        }))\n    }\n    \n    render() {\n        \n\n        const {\n            isClearable,\n            isSearchable,\n            isDisabled,\n            isLoading,\n            isRtl,\n          } = this.state;\n\n        const catOptions = this.state.catOptions;\n\n        return (\n            <div>\n                {this.props.items.item && this.props.items.item.title ?\n                    <h2>{this.props.items.item.title}</h2>\n                : null }\n\n                <p>Collections:</p>\n                    \n                {this.state.updated ?\n                    <Select\n                        className=\"basic-single\"\n                        classNamePrefix=\"select\"\n                        defaultValue={colourOptions[0]}\n                        isDisabled={isDisabled}\n                        isLoading={isLoading}\n                        isClearable={isClearable}\n                        isRtl={isRtl}\n                        isSearchable={isSearchable}\n                        name=\"color\"\n                        options={testOptions}\n                    />\n                : null}\n\n                <button type=\"button\"onClick={this.onClickHandler}>Submit</button> \n            \n            </div>\n        );\n    }\n};\n \n\nfunction mapStateToProps(state) {\n    console.log(state);\n    return {\n        items:state.items,\n        colls:state\n    }\n}\n\nexport default connect(mapStateToProps)(Sandbox);\n\n"]},"metadata":{},"sourceType":"module"}