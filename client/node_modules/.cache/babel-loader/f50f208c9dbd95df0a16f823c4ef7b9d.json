{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/AdminSection/admin_intro.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getIntroText, updateIntroText } from '../../actions';\n\nclass AdminIntro extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      introData: {\n        title: '',\n        body: ''\n      }\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {\n        this.setState({\n          selectedFile: files\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n\n      if (this.state.selectedFile) {\n        for (var x = 0; x < this.state.selectedFile.length; x++) {\n          data.append('file', this.state.selectedFile[x]);\n        } // HOST-SELECT\n\n\n        axios.post(`http://localhost:8000/upload-intro-img`, data, {\n          // axios.post(`http://64.227.34.134:8000/upload-intro-img`, data, { \n          // receive two parameter endpoint url ,form data \n          onUploadProgress: ProgressEvent => {\n            this.setState({\n              loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n            });\n          }\n        }).then(res => {\n          // then print response status\n          // console.log(res.config.data.id);\n          // console.log(res.statusText);\n          console.log(res);\n          toast.success('upload success');\n          alert('Files uploaded successfully');\n        }).catch(err => {\n          toast.error('upload fail');\n        });\n      } // this.redirectUser(`/items/${this.props.items.item._id}`)\n\n    };\n\n    this.maxSelectFile = event => {\n      // console.log(event);\n      let files = event.target.files; // create file object\n\n      if (files.length > 1) {\n        const msg = 'Only 1 image can be uploaded at a time';\n        event.target.value = null; // discard selected file\n\n        console.log(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = ''; // list allow mime type\n\n      const types = ['image/png', 'image/jpeg', 'image/gif']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // loop create toast massage\n        event.target.value = null;\n        toast.error(err[z]);\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 15000;\n      let err = \"\";\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err += files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n\n    this.handleInput = (event, field) => {\n      const newIntroData = { ...this.state.introData\n      };\n\n      if (field === 'title') {\n        newIntroData.title = event.target.value;\n      }\n\n      if (field === 'body') {\n        newIntroData.body = event.target.value;\n      }\n\n      this.setState({\n        introData: newIntroData\n      }); // console.log(newFormdata);\n    };\n\n    this.submitForm = e => {\n      e.preventDefault();\n      this.props.dispatch(updateIntroText(this.state.introData)); // console.log({...this.state.formdata.cat});\n      // console.log(this.state.formdata.cat);\n      // this.props.dispatch(updateCat(\n      //         this.state.formdata.cat\n      // ))\n      // this.state.formdata.subcats.map( (subcat) =>{\n      //     if (subcat.isModified) {\n      //         // console.log(subcat)\n      //         this.props.dispatch(updateSubcat(\n      //             subcat\n      //         ))\n      //     }\n      // })\n      // if (this.state.formdata.newSubcat.title) {\n      //     const newSubcat = this.state.formdata.newSubcat;\n      //     console.log(newSubcat);\n      //     this.props.dispatch(addSubcat(\n      //         newSubcat\n      //     ))\n      // }\n      // this.props.history.push(`/admin`)\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getIntroText());\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props != prevProps) {\n      let introData = {\n        title: this.props.text.title,\n        body: this.props.text.body\n      };\n      this.setState({\n        introData\n      });\n    }\n  } // *************** UPLOAD LOGIC ********************\n\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, \"Edit Intro Page\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 45\n      }\n    }, \"Heading\")))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      placeholder: \"Text\",\n      defaultValue: this.state.introData.title,\n      onChange: event => this.handleInput(event, 'title'),\n      rows: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 45\n      }\n    }, \"Body Text\")))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      placeholder: \"Text\",\n      defaultValue: this.state.introData.body,\n      onChange: event => this.handleInput(event, 'body'),\n      rows: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 41\n      }\n    }, \"Change Image\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `/images/intro/intro.jpg`,\n      onError: this.addDefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      multiple: true,\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 45\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 41\n      }\n    }, \"Save Changes\"))))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // console.log(state);\n  return {\n    text: state.intros.text\n  };\n}\n\nexport default connect(mapStateToProps)(AdminIntro);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/AdminSection/admin_intro.js"],"names":["React","Component","connect","axios","ToastContainer","toast","getIntroText","updateIntroText","AdminIntro","state","introData","title","body","onChangeHandler","event","files","target","maxSelectFile","checkMimeType","setState","selectedFile","onClickHandler","data","FormData","x","length","append","post","onUploadProgress","ProgressEvent","loaded","total","then","res","console","log","success","alert","catch","err","error","msg","value","types","every","type","z","checkFileSize","size","addDefaultImg","ev","newImg","src","handleInput","field","newIntroData","submitForm","e","preventDefault","props","dispatch","componentDidMount","componentDidUpdate","prevProps","prevState","text","render","mapStateToProps","intros"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { getIntroText, updateIntroText } from '../../actions';\n\n\nclass AdminIntro extends Component {\n\n    \n\n\n\n    state = {\n        introData: {\n            title: '',\n            body: ''\n        }\n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(getIntroText());\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props != prevProps) {\n            \n            \n            let introData = {\n                title: this.props.text.title,\n                body: this.props.text.body\n            }\n            \n\n\n            this.setState({\n                introData\n            })\n        }\n    }\n\n\n    // *************** UPLOAD LOGIC ********************\n\n    onChangeHandler = (event) => {\n\n\n        var files = event.target.files;\n\n        if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {  \n            this.setState({\n                selectedFile: files\n            })\n        }\n    }\n\n\n\n    onClickHandler = () => {\n        const data = new FormData() \n        \n        if (this.state.selectedFile) {\n            for(var x = 0; x<this.state.selectedFile.length; x++) {\n                data.append('file', this.state.selectedFile[x])\n            }\n            \n            // HOST-SELECT\n            axios.post(`http://localhost:8000/upload-intro-img`, data, { \n            // axios.post(`http://64.227.34.134:8000/upload-intro-img`, data, { \n                    // receive two parameter endpoint url ,form data \n                onUploadProgress: ProgressEvent => {\n                    this.setState({\n                        loaded: (ProgressEvent.loaded / ProgressEvent.total*100)\n                    })\n                }\n            })\n            .then(res => { // then print response status\n                // console.log(res.config.data.id);\n                // console.log(res.statusText);\n                console.log(res);\n                toast.success('upload success')\n                alert('Files uploaded successfully')\n            })\n            .catch(err => { \n                toast.error('upload fail')\n            })\n        }\n        // this.redirectUser(`/items/${this.props.items.item._id}`)\n\n\n    }\n\n    maxSelectFile=(event)=>{\n\n        // console.log(event);\n\n        let files = event.target.files // create file object\n            if (files.length > 1) { \n               const msg = 'Only 1 image can be uploaded at a time'\n               event.target.value = null // discard selected file\n               console.log(msg)\n              return false;\n     \n          }\n        return true;\n     \n    }\n\n    checkMimeType=(event)=>{\n        //getting file object\n        let files = event.target.files \n        //define message container\n        let err = ''\n        // list allow mime type\n        const types = ['image/png', 'image/jpeg', 'image/gif']\n        // loop access array\n        for(var x = 0; x<files.length; x++) {\n         // compare file type find doesn't matach\n            if (types.every(type => files[x].type !== type)) {\n                // create error message and assign to container   \n                err += files[x].type+' is not a supported format\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) { // loop create toast massage\n            event.target.value = null \n            toast.error(err[z])\n        }\n        return true;\n    }\n\n    checkFileSize=(event)=>{\n        let files = event.target.files\n        let size = 15000 \n        let err = \"\"; \n\n        for(var x = 0; x<files.length; x++) {\n            if (files[x].size > size) {\n                err += files[x].type+'is too large, please pick a smaller file\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) {\n            toast.error(err[z])\n            event.target.value = null\n        }\n        return true;\n   \n    }    \n\n    // ****************************************************\n\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    }\n\n\n\n    handleInput = (event, field) => {\n\n        const newIntroData = {\n            ...this.state.introData\n        }\n\n\n        if (field === 'title') {\n            newIntroData.title = event.target.value;\n        }\n\n        if (field === 'body') {\n            newIntroData.body = event.target.value;\n        }\n\n        this.setState({\n            introData: newIntroData\n        })\n        // console.log(newFormdata);\n    }\n\n\n\n    submitForm = (e) => {\n        e.preventDefault();\n\n\n\n        this.props.dispatch(updateIntroText(\n            this.state.introData\n        ))\n\n        // console.log({...this.state.formdata.cat});\n        // console.log(this.state.formdata.cat);\n\n        // this.props.dispatch(updateCat(\n        //         this.state.formdata.cat\n            \n        // ))\n\n        // this.state.formdata.subcats.map( (subcat) =>{\n        //     if (subcat.isModified) {\n        //         // console.log(subcat)\n        //         this.props.dispatch(updateSubcat(\n        //             subcat\n        //         ))\n        //     }\n        // })\n\n        \n        // if (this.state.formdata.newSubcat.title) {\n        //     const newSubcat = this.state.formdata.newSubcat;\n        //     console.log(newSubcat);\n        //     this.props.dispatch(addSubcat(\n        //         newSubcat\n        //     ))\n        // }\n\n\n        \n        // this.props.history.push(`/admin`)\n    }\n\n\n\n\n    render() {\n\n        console.log(this.state)\n\n        return (\n            <div className=\"admin\">\n                <div className=\"admin_intro\">\n\n                    <h1>Edit Intro Page</h1>\n\n\n                    <form onSubmit={this.submitForm}>\n                        <table>\n                            <tbody>\n                    \n                                \n\n                                <tr>\n                                    <td>\n                                        <p>\n                                            <b>Heading</b> \n                                        </p>\n                                    </td>\n                                </tr>\n\n\n                                <tr>\n                                    <td>\n                                        <textarea\n                                            type=\"text\"\n                                            placeholder=\"Text\"\n                                            defaultValue={this.state.introData.title} \n                                            onChange={(event) => this.handleInput(event, 'title')}\n                                            rows={6}\n                                        />\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <p>\n                                            <b>Body Text</b> \n                                        </p>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <textarea\n                                            type=\"text\"\n                                            placeholder=\"Text\"\n                                            defaultValue={this.state.introData.body} \n                                            onChange={(event) => this.handleInput(event, 'body')}\n                                            rows={6}\n                                        />\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <p>Change Image</p>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <img src={`/images/intro/intro.jpg`} onError={this.addDefaultImg}/>\n                                    </td>\n                                </tr>\n\n\n\n                                <tr>\n                                    \n                                    <td>\n                                        <div className=\"form_element\">\n                                            <input type=\"file\" className=\"form-control\" multiple name=\"file\" onChange={this.onChangeHandler}/>\n                                            <br />\n                                            <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button> \n                                        </div>\n                                    </td>\n                                </tr>\n\n\n\n\n                                <tr>\n                                    <td>\n                                        <button type=\"submit\">Save Changes</button>\n                                    </td>\n                                </tr>\n\n                            </tbody>\n                        </table>\n                    </form>\n\n\n                </div>\n            </div>\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    // console.log(state);\n\n    return {\n        text: state.intros.text\n        \n    }\n}\n\n\nexport default connect(mapStateToProps)(AdminIntro)"]},"metadata":{},"sourceType":"module"}