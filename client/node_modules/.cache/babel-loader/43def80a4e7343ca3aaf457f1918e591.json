{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/components/Collections/collection.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getColl, searchItem } from '../../actions'; // import { getCollWithItems } from '../../actions';\n\nclass Collection extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderColl = coll => {\n      let imageId = null;\n\n      if (coll) {\n        imageId = coll[0].cover_item;\n      }\n\n      return coll ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"Title\"), \" \", coll[0].title, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, \"Image\"), \" \", /*#__PURE__*/React.createElement(\"img\", {\n        src: `/images/sq_thumb/1.jpg`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"Description\"), \" \", coll[0].description, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, \"Subject\"), \" \", coll[0].subject, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, \"Format\"), coll[0].format) : null;\n    };\n\n    this.renderItems = items => {\n      console.log(items);\n      items.map((item, i) => {\n        console.log(item.title);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }\n        }, item.title, \"Hi\");\n      });\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }\n      }, \"Hi\");\n    };\n  }\n\n  componentDidMount() {\n    let queryId = this.props.match.params.id; // let queryKey = this.props.match.params.key;\n    // let queryValue = this.props.match.params.value;\n    // console.log(queryId);\n\n    this.props.dispatch(getColl(queryId));\n    this.props.dispatch(searchItem('collection_id', queryId)); // this.props.dispatch(getCollWithItems(queryValue));\n  }\n\n  render() {\n    // console.log(this.props.coll);\n    // console.log(this.props.items);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, this.renderColl(this.props.coll), this.props.items ? this.renderItems(this.props.items) : null);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items.data,\n    coll: state.collections.coll\n  };\n}\n\nexport default connect(mapStateToProps)(Collection);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Collections/collection.js"],"names":["React","Component","connect","getColl","searchItem","Collection","renderColl","coll","imageId","cover_item","title","description","subject","format","renderItems","items","console","log","map","item","i","componentDidMount","queryId","props","match","params","id","dispatch","render","mapStateToProps","state","data","collections"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,eAApC,C,CACA;;AAGA,MAAMC,UAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAkBhCK,UAlBgC,GAkBlBC,IAAD,IAAU;AACrB,UAAIC,OAAO,GAAG,IAAd;;AAEA,UAAID,IAAJ,EAAU;AACNC,QAAAA,OAAO,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,UAAlB;AACH;;AAED,aAASF,IAAI,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,OACkBA,IAAI,CAAC,CAAD,CAAJ,CAAQG,KAD1B,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,oBAEiB;AAAK,QAAA,GAAG,EAAG,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFjB,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,OAGwBH,IAAI,CAAC,CAAD,CAAJ,CAAQI,WAHhC,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,OAIoBJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,OAJ5B,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAKkBL,IAAI,CAAC,CAAD,CAAJ,CAAQM,MAL1B,CADW,GAUT,IAVJ;AAaD,KAtC+B;;AAAA,SA0ChCC,WA1CgC,GA0CjBC,KAAD,IAAW;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAaF,KAAb;AACMA,MAAAA,KAAK,CAACG,GAAN,CAAW,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtBJ,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACT,KAAjB;AACA,4BACE;AAAK,UAAA,GAAG,EAAEU,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IAAI,CAACT,KADR,OADF;AAMD,OARD;AASJ,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH,KAvD+B;AAAA;;AAIhCW,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAtC,CADgB,CAGhB;AACA;AAEA;;AAEA,SAAKH,KAAL,CAAWI,QAAX,CAAoBxB,OAAO,CAACmB,OAAD,CAA3B;AACA,SAAKC,KAAL,CAAWI,QAAX,CAAoBvB,UAAU,CAAC,eAAD,EAAkBkB,OAAlB,CAA9B,EATgB,CAUhB;AACH;;AA4CDM,EAAAA,MAAM,GAAG;AAEL;AACA;AAGA,wBAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKtB,UAAL,CAAgB,KAAKiB,KAAL,CAAWhB,IAA3B,CAFL,EAGM,KAAKgB,KAAL,CAAWR,KAAX,GACE,KAAKD,WAAL,CAAiB,KAAKS,KAAL,CAAWR,KAA5B,CADF,GAEE,IALR,CAFN;AAgBH;;AAjF+B;;AAqFpC,SAASc,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHf,IAAAA,KAAK,EAAEe,KAAK,CAACf,KAAN,CAAYgB,IADhB;AAEHxB,IAAAA,IAAI,EAAEuB,KAAK,CAACE,WAAN,CAAkBzB;AAFrB,GAAP;AAKH;;AAGD,eAAeL,OAAO,CAAC2B,eAAD,CAAP,CAAyBxB,UAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nimport { getColl, searchItem } from '../../actions';\n// import { getCollWithItems } from '../../actions';\n\n\nclass Collection  extends Component {\n\n    \n\n    componentDidMount() {\n        let queryId = this.props.match.params.id;\n\n        // let queryKey = this.props.match.params.key;\n        // let queryValue = this.props.match.params.value;\n\n        // console.log(queryId);\n\n        this.props.dispatch(getColl(queryId));\n        this.props.dispatch(searchItem('collection_id', queryId))\n        // this.props.dispatch(getCollWithItems(queryValue));\n    }\n\n\n    renderColl = (coll) => {\n      let imageId = null;\n\n      if (coll) {\n          imageId = coll[0].cover_item;\n      }\n\n      return ( coll ?\n        <div>\n          <h2>Title</h2> {coll[0].title}\n          <h2>Image</h2> <img src={`/images/sq_thumb/1.jpg`} />\n          <h2>Description</h2> {coll[0].description}\n          <h2>Subject</h2> {coll[0].subject}\n          <h2>Format</h2>{coll[0].format}\n\n\n        </div>\n        : null\n      )\n\n    }\n\n\n\n    renderItems = (items) => {\n      console.log (items);\n            items.map( (item, i) => {\n              console.log(item.title);\n              return (\n                <div key={i}>\n                  {item.title}\n                  Hi\n                </div>\n              )\n            })\n        return <p>Hi</p>\n\n    }\n\n\n\n    render() {\n        \n        // console.log(this.props.coll);\n        // console.log(this.props.items);\n        \n\n        return (\n            \n              <div>\n                  \n                  {this.renderColl(this.props.coll)}\n                  { this.props.items ?\n                      this.renderItems(this.props.items)\n                    : null\n                  }\n                  \n                  \n\n\n\n              </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        items: state.items.data,\n        coll: state.collections.coll\n\n    }\n}\n\n\nexport default connect(mapStateToProps)(Collection)"]},"metadata":{},"sourceType":"module"}