{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item_2_sel.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions';\n\nclass EditItemSel extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataToUpdate: {\n        _id: null,\n        category_ref: [],\n        subcategory_ref: [],\n        tags: [],\n        collection_id: ''\n      },\n      catsConverted: null,\n      subcatsConverted: null,\n      collConverted: null,\n      tagsConverted: null,\n      collList: null,\n      catList: null,\n      subcatList: null\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.state.formdata._id));\n      this.props.history.push('/user/all-items');\n    };\n\n    this.redirectUser = url => {\n      setTimeout(() => {\n        this.props.history.push(url);\n      }, 1000);\n    };\n\n    this.handleInputTags = newValue => {\n      let latestData = { ...this.state.dataToUpdate,\n        tags: newValue\n      };\n      let catchData = { ...this.state.dataToUpdate,\n        tags: []\n      };\n\n      if (newValue == null) {\n        this.setState({\n          dataToUpdate: catchData\n        });\n      } else {\n        this.setState({\n          dataToUpdate: latestData\n        });\n      }\n    };\n\n    this.handleInputColl = newValue => {\n      let latestData = { ...this.state.dataToUpdate,\n        collection_id: newValue.value\n      };\n      this.setState({\n        dataToUpdate: latestData\n      });\n    };\n\n    this.handleInputCats = newValue => {\n      let catArray = [];\n\n      if (newValue && newValue.length) {\n        newValue.map(cat => {\n          catArray.push(cat.value);\n        });\n      }\n\n      let latestData = { ...this.state.dataToUpdate,\n        category_ref: catArray\n      };\n      this.setState({\n        dataToUpdate: latestData\n      });\n      this.refineSubcatList();\n    };\n\n    this.handleInputSubcats = newValue => {\n      let subcatArray = [];\n\n      if (newValue && newValue.length) {\n        newValue.map(subcat => {\n          subcatArray.push(subcat.value);\n        });\n      }\n\n      let latestData = { ...this.state.dataToUpdate,\n        subcategory_ref: subcatArray\n      };\n      this.setState({\n        dataToUpdate: latestData\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.props.dispatch(updateItem({ ...this.state.dataToUpdate\n      }));\n      this.props.history.push(`/user/edit-item-file/${this.props.match.params.id}`);\n    };\n\n    this.getCollOptions = () => {\n      let collList = [{\n        value: 0,\n        label: 'None'\n      }];\n      this.props.colls.map(coll => {\n        collList.push({\n          value: coll.id,\n          label: coll.title\n        });\n      });\n      this.setState({\n        collList\n      });\n    };\n\n    this.getCatOptions = () => {\n      let catList = [];\n      this.props.cats.map(cat => {\n        catList.push({\n          value: cat.cat_id,\n          label: cat.title\n        });\n      });\n      this.setState({\n        catList\n      });\n    };\n\n    this.getSubcatOptions = () => {\n      let subcatList = []; // make reformatted list of all subcats\n\n      this.props.subcats.map(subcat => {\n        subcatList.push({\n          value: subcat.subcat_id,\n          label: subcat.title\n        });\n      });\n      this.setState({\n        subcatList\n      });\n    };\n\n    this.refineSubcatList = () => {\n      // if cat is selected\n      if (this.state.catsConverted && this.state.catsConverted.length) {\n        let catsId = [];\n        this.state.catsConverted.map(cat => {\n          catsId.push(cat.value);\n        });\n        let refinedSubcatList = [];\n        this.props.subcats.map((subcat, i) => {\n          if (catsId.indexOf(subcat.parent_cat) !== -1) {\n            refinedSubcatList.push({\n              value: subcat.subcat_id,\n              label: subcat.title\n            });\n          }\n        });\n        this.setState({\n          subcatList: refinedSubcatList\n        });\n      }\n    };\n\n    this.renderForm = () => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    }, \"Edit item:\"), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 33\n      }\n    }, \"Tags\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CreatableSelect, {\n      defaultValue: this.state.tagsConverted,\n      isMulti: true,\n      onChange: this.handleInputTags,\n      options: this.state.tagsConverted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 33\n      }\n    }, \"Collection\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      className: \"basic-single\",\n      classNamePrefix: \"select\",\n      defaultValue: this.state.collConverted,\n      isDisabled: false,\n      isLoading: false,\n      isClearable: true,\n      isRtl: false,\n      isSearchable: true,\n      name: \"color\",\n      options: this.state.collList,\n      onChange: this.handleInputColl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 33\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      key: `cat_${this.props.items.item._id}`,\n      defaultValue: this.state.catsConverted,\n      isMulti: true,\n      name: \"colors\",\n      options: this.state.catList,\n      className: \"basic-multi-select\",\n      classNamePrefix: \"select\",\n      onChange: this.handleInputCats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 41\n      }\n    })))), this.state.catsConverted ? /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 37\n      }\n    }, \"Sub-categories\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      key: `cat_${this.props.items.item._id}`,\n      defaultValue: this.state.subcatsConverted,\n      isMulti: true,\n      name: \"colors\",\n      options: this.state.subcatList,\n      className: \"basic-multi-select\",\n      classNamePrefix: \"select\",\n      onChange: this.handleInputSubcats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 45\n      }\n    })))) : null, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 41\n      }\n    }, \"Save and Continue\"))))));\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById(this.props.match.params.id));\n    this.props.dispatch(getAllColls());\n    this.props.dispatch(getAllCats());\n    this.props.dispatch(getAllSubCats());\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearItem());\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let item = this.props.items.item; // console.log(item)\n\n    if (this.props !== prevProps) {\n      if (this.props.items && this.props.items.item && this.props.cats && this.props.colls && this.props.subcats) {\n        // REFORMAT EXISTING CATEGORIES\n        let catsForState = [];\n\n        if (this.props.items.item.category_ref && this.props.items.item.category_ref.length) {\n          this.props.items.item.category_ref.map(catref => {\n            this.props.cats.map(cat => {\n              if (cat.cat_id == catref) {\n                catsForState.push({\n                  value: cat.cat_id,\n                  label: cat.title\n                });\n              }\n            });\n          });\n        } // REFORMAT EXISTING SUBCATEGORIES\n\n\n        let subcatsForState = [];\n\n        if (this.props.items.item.subcategory_ref && this.props.items.item.subcategory_ref.length) {\n          this.props.items.item.subcategory_ref.map(subcatref => {\n            this.props.subcats.map(subcat => {\n              if (subcat.subcat_id == subcatref) {\n                subcatsForState.push({\n                  value: subcat.subcat_id,\n                  label: subcat.title\n                });\n              }\n            });\n          });\n        }\n\n        if (prevState.catsConverted && prevState.catsConverted.length) {\n          console.log('hi');\n          let catsId = [];\n          prevState.catsConverted.map(cat => {\n            catsId.push(cat.value);\n          });\n          let refinedSubcatList = [];\n          prevProps.subcats.map((subcat, i) => {\n            if (catsId.indexOf(subcat.parent_cat) !== -1) {\n              refinedSubcatList.push({\n                value: subcat.subcat_id,\n                label: subcat.title\n              });\n            }\n          });\n          subcatsForState = refinedSubcatList;\n        } // REFORMAT EXISTING COLLECTION\n\n\n        let collForState = {\n          value: '',\n          label: ''\n        };\n        this.props.colls.map(coll => {\n          if (coll.id == this.props.items.item.collection_id) {\n            collForState = {\n              value: coll.id,\n              label: coll.title\n            };\n          }\n        });\n        let existsForState = {\n          _id: this.props.items.item._id,\n          category_ref: this.props.items.item.category_ref,\n          subcategory_ref: this.props.items.item.subcategory_ref,\n          tags: this.props.items.item.tags,\n          collection_id: this.props.items.item.collection_id\n        };\n        let tagsForState = this.props.items.item.tags;\n\n        if (!tagsForState) {\n          tagsForState = [];\n        } // GET OPTIONS\n\n\n        this.getCollOptions();\n        this.getCatOptions();\n        this.getSubcatOptions();\n        this.renderForm();\n        this.setState({\n          catsConverted: catsForState,\n          subcatsConverted: subcatsForState,\n          collConverted: collForState,\n          tagsConverted: tagsForState,\n          dataToUpdate: existsForState\n        });\n      }\n    }\n  }\n\n  render() {\n    // console.log('rendered');\n    let items = this.props.items;\n    console.log(this.state);\n    console.log(this.props); // this.refineSubcatList();\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article edit_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 13\n      }\n    }, items.itemDeleted ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red_tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 25\n      }\n    }, \"Item Deleted\", this.redirectUser('/user/all-items')) : null, this.state.tagsConverted && this.state.catsConverted && this.state.subcatsConverted && this.state.collConverted ? this.renderForm() : null);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items,\n    colls: state.collections.colls,\n    cats: state.cats.cats,\n    subcats: state.cats.subcats\n  };\n}\n\nexport default connect(mapStateToProps)(EditItemSel);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item_2_sel.js"],"names":["React","PureComponent","connect","Link","axios","ToastContainer","toast","Select","CreatableSelect","getItemById","updateItem","clearItem","deleteItem","getAllColls","getAllCats","getAllSubCats","EditItemSel","state","dataToUpdate","_id","category_ref","subcategory_ref","tags","collection_id","catsConverted","subcatsConverted","collConverted","tagsConverted","collList","catList","subcatList","deletePost","props","dispatch","formdata","history","push","redirectUser","url","setTimeout","handleInputTags","newValue","latestData","catchData","setState","handleInputColl","value","handleInputCats","catArray","length","map","cat","refineSubcatList","handleInputSubcats","subcatArray","subcat","onSubmit","e","preventDefault","match","params","id","getCollOptions","label","colls","coll","title","getCatOptions","cats","cat_id","getSubcatOptions","subcats","subcat_id","catsId","refinedSubcatList","i","indexOf","parent_cat","renderForm","items","item","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","prevState","catsForState","catref","subcatsForState","subcatref","console","log","collForState","existsForState","tagsForState","render","itemDeleted","mapStateToProps","collections"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\n\n\n\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats  } from '../../actions';\n\n\n\nclass EditItemSel extends PureComponent {\n\n\n    state = {\n\n        dataToUpdate: {\n            _id: null,\n            category_ref: [],\n            subcategory_ref: [],\n            tags: [],\n            collection_id: ''\n            \n        },\n        catsConverted: null,\n        subcatsConverted: null,\n        collConverted: null,\n        tagsConverted: null,\n        collList: null,\n        catList: null,\n        subcatList: null\n       \n\n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(getItemById(this.props.match.params.id))\n        this.props.dispatch(getAllColls())\n        this.props.dispatch(getAllCats());\n        this.props.dispatch(getAllSubCats());\n    }\n\n\n    componentWillUnmount() {\n        this.props.dispatch(clearItem())\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n\n        let item = this.props.items.item;\n        // console.log(item)\n        if (this.props !== prevProps) {\n            if (this.props.items && this.props.items.item && this.props.cats && this.props.colls && this.props.subcats) {\n\n\n                // REFORMAT EXISTING CATEGORIES\n                let catsForState = [];\n                if (this.props.items.item.category_ref && this.props.items.item.category_ref.length) {\n                    this.props.items.item.category_ref.map( (catref) => {\n                        this.props.cats.map( (cat) => {\n                            if ( cat.cat_id == catref) {\n                                catsForState.push(\n                                    {\n                                        value: cat.cat_id,\n                                        label: cat.title\n                                    }\n                                )\n                            }\n                        })\n                    })\n                }\n\n\n                // REFORMAT EXISTING SUBCATEGORIES\n                let subcatsForState = [];\n                if (this.props.items.item.subcategory_ref && this.props.items.item.subcategory_ref.length) {\n                    this.props.items.item.subcategory_ref.map( (subcatref) => {\n                        this.props.subcats.map( (subcat) => {\n                            if ( subcat.subcat_id == subcatref) {\n                                subcatsForState.push(\n                                    {\n                                        value: subcat.subcat_id,\n                                        label: subcat.title\n                                    }\n                                )\n                            }\n                        })\n                    })\n                }\n\n\n\n\n\n                if (prevState.catsConverted && prevState.catsConverted.length) {\n                    console.log('hi');\n                    let catsId = [];\n                    prevState.catsConverted.map( cat => {\n                        catsId.push(cat.value)\n                    })\n        \n        \n                    let refinedSubcatList = [];\n        \n                    prevProps.subcats.map( (subcat, i) => {\n                        \n                        if (catsId.indexOf(subcat.parent_cat) !== -1) {\n                            refinedSubcatList.push({\n                                value: subcat.subcat_id,\n                                label: subcat.title\n                            })\n                        }\n                        \n                    })\n                    subcatsForState = refinedSubcatList;\n                }\n\n\n\n\n                // REFORMAT EXISTING COLLECTION\n                let collForState = {value:'', label:''};\n                this.props.colls.map( (coll) => {\n                    if ( coll.id == this.props.items.item.collection_id) {\n                        collForState = {\n                            value: coll.id,\n                            label: coll.title\n                        }\n                    }\n                })\n\n\n                let existsForState = {\n                    _id: this.props.items.item._id,\n                    category_ref: this.props.items.item.category_ref,\n                    subcategory_ref: this.props.items.item.subcategory_ref,\n                    tags: this.props.items.item.tags,\n                    collection_id: this.props.items.item.collection_id\n                }\n\n                let tagsForState = this.props.items.item.tags;\n                if (!tagsForState) {\n                    tagsForState = []\n                }\n\n\n                \n\n\n                // GET OPTIONS\n                this.getCollOptions()\n                this.getCatOptions()\n                this.getSubcatOptions()\n                this.renderForm()\n\n                this.setState({\n                    catsConverted: catsForState,\n                    subcatsConverted: subcatsForState,\n                    collConverted: collForState,\n                    tagsConverted: tagsForState,\n                    dataToUpdate: existsForState\n                })\n            }\n        } \n    }\n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.state.formdata._id));\n        this.props.history.push('/user/all-items');\n    }\n\n\n\n    redirectUser = (url) => {\n        setTimeout(() => {\n            this.props.history.push(url)\n        }, 1000)\n    }\n\n\n    handleInputTags = (newValue) => {\n       \n        let latestData = {\n            ...this.state.dataToUpdate,\n            tags: newValue\n        }\n\n        let catchData = {\n            ...this.state.dataToUpdate,\n            tags: []\n        }\n\n\n        if (newValue == null) {\n            this.setState({\n                dataToUpdate: catchData\n            })\n        } else {\n            this.setState({\n                dataToUpdate: latestData\n            })\n        }\n    }\n\n    handleInputColl = (newValue) => {\n        let latestData = {\n            ...this.state.dataToUpdate,\n            collection_id: newValue.value\n        }\n        this.setState({\n            dataToUpdate: latestData\n        })\n    }\n\n    handleInputCats = (newValue) => {\n        let catArray = [];\n        if (newValue && newValue.length) {\n            newValue.map( cat => {\n                catArray.push(cat.value)\n            })\n        }\n        let latestData = {\n            ...this.state.dataToUpdate,\n            category_ref: catArray\n        }\n        this.setState({\n            dataToUpdate: latestData\n        })\n        this.refineSubcatList();\n    }\n\n    handleInputSubcats = (newValue) => {\n        let subcatArray = [];\n        if (newValue && newValue.length) {\n            newValue.map( subcat => {\n                subcatArray.push(subcat.value)\n            })\n        }\n        let latestData = {\n            ...this.state.dataToUpdate,\n            subcategory_ref: subcatArray\n        }\n        this.setState({\n            dataToUpdate: latestData\n        })\n    }\n\n\n\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.dispatch(updateItem(\n            { ...this.state.dataToUpdate }\n        ))\n        this.props.history.push(`/user/edit-item-file/${this.props.match.params.id }`)\n\n    }\n\n\n    getCollOptions = () => {\n        \n        let collList = [\n            {\n                value: 0,\n                label: 'None'\n            }\n        ];\n        this.props.colls.map( coll => {\n            collList.push({\n                value: coll.id,\n                label: coll.title\n            })\n        })\n        this.setState({\n            collList\n        })\n    }\n\n\n    getCatOptions = () => {\n        let catList = [];\n        this.props.cats.map( cat => {\n            catList.push({\n                value: cat.cat_id,\n                label: cat.title\n            })\n        })\n        this.setState({\n            catList\n        })\n\n        \n    }\n\n\n\n    getSubcatOptions = () => {\n        \n        let subcatList = [];\n        // make reformatted list of all subcats\n        this.props.subcats.map( subcat => {\n            \n            subcatList.push({\n                value: subcat.subcat_id,\n                label: subcat.title\n            })\n        })\n\n\n\n \n\n        this.setState({\n            subcatList\n        })\n    }\n\n\n    refineSubcatList = () => {\n        // if cat is selected\n        if (this.state.catsConverted && this.state.catsConverted.length) {\n            let catsId = [];\n            this.state.catsConverted.map( cat => {\n                catsId.push(cat.value)\n            })\n\n\n            let refinedSubcatList = [];\n\n            this.props.subcats.map( (subcat, i) => {\n                \n                if (catsId.indexOf(subcat.parent_cat) !== -1) {\n                    refinedSubcatList.push({\n                        value: subcat.subcat_id,\n                        label: subcat.title\n                    })\n                }\n                \n            })\n            this.setState({subcatList: refinedSubcatList})\n        }\n        \n    }\n\n\n    renderForm = () => (\n        <form onSubmit={this.onSubmit}>\n                        \n                        <h2>Edit item:</h2>\n                       \n                        <table>\n                        <tbody>\n               \n                            <tr>\n                                <td>\n                                    Tags\n                                </td>\n                                <td>\n                                    <div className=\"form_element select\">\n                                        <CreatableSelect\n                                            defaultValue={this.state.tagsConverted}\n                                            isMulti\n                                            onChange={this.handleInputTags}\n                                            options={this.state.tagsConverted}\n                                        />\n                                    </div>\n                                </td>\n                            </tr>\n                          \n\n                            <tr>\n                                <td>\n                                    Collection\n                                </td>\n                                <td>\n                                    <div className=\"form_element select\">\n                                        <Select\n                                            className=\"basic-single\"\n                                            classNamePrefix=\"select\"\n                                            defaultValue={this.state.collConverted}\n                                            isDisabled={false}\n                                            isLoading={false}\n                                            isClearable={true}\n                                            isRtl={false}\n                                            isSearchable={true}\n                                            name=\"color\"\n                                            options={this.state.collList}\n                                            onChange={this.handleInputColl}\n                                        />\n                                    </div>\n                                </td>\n                            </tr>\n\n\n                            <tr>\n                                <td>\n                                    Category\n                                </td>\n                                <td>\n                                    <div className=\"form_element select\">\n                                        <Select\n                                            key={`cat_${this.props.items.item._id}`}\n                                            defaultValue={this.state.catsConverted}\n                                            isMulti\n                                            name=\"colors\"\n                                            options={this.state.catList}\n                                            className=\"basic-multi-select\"\n                                            classNamePrefix=\"select\"\n                                            onChange={this.handleInputCats}\n                                        />\n                                    </div>\n                                </td>\n                            </tr>  \n\n                           \n                            { this.state.catsConverted ?\n                                <tr>\n                                    <td>\n                                        Sub-categories \n                                    </td>\n                                    <td>\n\n                                        <div className=\"form_element select\">\n                                            <Select\n                                                key={`cat_${this.props.items.item._id}`}\n                                                defaultValue={this.state.subcatsConverted}\n                                                isMulti\n                                                name=\"colors\"\n                                                options={this.state.subcatList}\n                                                className=\"basic-multi-select\"\n                                                classNamePrefix=\"select\"\n                                                onChange={this.handleInputSubcats}\n                                            />\n                                        </div>\n                                    </td>\n                                </tr>\n                            : null }\n\n                                <tr>\n                                    <td></td>\n                                    <td>\n                                        <button type=\"submit\">Save and Continue</button>\n                                    </td>\n                                </tr>\n                            \n                            \n                        </tbody>\n                        </table>\n\n                        \n                        \n                        {/* <div className=\"delete_post\">\n                            <div className=\"button\" onClick={(e) => { if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e) } }>\n                                Delete item\n                            </div>\n                        </div> */}\n\n                    </form>\n    )\n\n    render() {\n        // console.log('rendered');\n\n        let items = this.props.items;\n\n        console.log(this.state);\n        console.log(this.props);\n\n        // this.refineSubcatList();\n\n\n\n        return (\n            \n            \n            <div className=\"rl_container article edit_page\">\n                \n                {/* {\n                    items.updateItem ?\n                        <div className=\"edit_confirm\">\n                            Post updated, <Link to={`/items/${items.item._id}`}>\n                                Click here to see your post\n                            </Link>\n                        </div>\n                    : null\n                } */}\n\n\n                {\n                    items.itemDeleted ?\n                        <div className=\"red_tag\">\n                            Item Deleted    \n                            {this.redirectUser('/user/all-items')}\n                        </div>\n\n                    : null\n                }\n                \n                {this.state.tagsConverted && this.state.catsConverted && this.state.subcatsConverted && this.state.collConverted ?\n                 \n                    this.renderForm()\n                : null }\n\n                    \n            </div>\n            \n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items:state.items,\n        colls:state.collections.colls,\n        cats:state.cats.cats,\n        subcats:state.cats.subcats\n    }\n}\n\nexport default connect(mapStateToProps)(EditItemSel)\n\n\n"]},"metadata":{},"sourceType":"module"}