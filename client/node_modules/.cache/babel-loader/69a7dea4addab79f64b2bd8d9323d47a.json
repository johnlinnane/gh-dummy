{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js\";\nimport React from 'react';\n\nclass Sandbox extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.tryRequire = path => {\n      try {\n        return require(`${path}`);\n      } catch (err) {\n        return null;\n      }\n    };\n\n    this.value = null;\n    this.thing = this.tryRequire('/images/items/5eb4417bf2ff151113f3e178/original/0.pdf') ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"Exists\") // tryRequire('yourPath').default \n    :\n    /*#__PURE__*/\n    React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, \"N'existe\");\n  }\n\n  render() {\n    return {\n      thing\n    };\n  }\n\n}\n\n;\nexport default Sandbox;","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js"],"names":["React","Sandbox","Component","tryRequire","path","require","err","value","thing","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAGlCC,UAHkC,GAGpBC,IAAD,IAAU;AACnB,UAAI;AACH,eAAOC,OAAO,CAAE,GAAED,IAAK,EAAT,CAAd;AACA,OAFD,CAEE,OAAOE,GAAP,EAAY;AACb,eAAO,IAAP;AACA;AACF,KAT+B;;AAAA,SAWlCC,KAXkC,GAW1B,IAX0B;AAAA,SAalCC,KAbkC,GAa1B,KAAKL,UAAL,CAAgB,uDAAhB,iBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADI,CAER;AAFQ;AAAA;AAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBgC;AAAA;;AAmBlCM,EAAAA,MAAM,GAAG;AAIL,WACI;AAACD,MAAAA;AAAD,KADJ;AAMH;;AA7BiC;;AA8BrC;AAED,eAAeP,OAAf","sourcesContent":["import React from 'react';\n\n \nclass Sandbox extends React.Component {\n\n\n    tryRequire = (path) => {\n        try {\n         return require(`${path}`);\n        } catch (err) {\n         return null;\n        }\n      };\n\n    value = null;\n\n    thing = this.tryRequire('/images/items/5eb4417bf2ff151113f3e178/original/0.pdf') ? \n        <p>Exists</p>\n    // tryRequire('yourPath').default \n    : <p>N'existe</p>;\n\n\n    render() {\n\n        \n\n        return (\n            {thing}\n        )\n\n\n\n    }\n};\n \nexport default Sandbox;\n\n"]},"metadata":{},"sourceType":"module"}