{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/Sandbox/sandbox.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions';\nimport { addCat, deleteCat, addSubcat, deleteSubcat, updateCat, updateSubcat } from '../../actions';\n\nclass Sandbox extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {\n        this.setState({\n          selectedFile: files\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n\n      if (this.state.selectedFile) {\n        for (var x = 0; x < this.state.selectedFile.length; x++) {\n          data.append('file', this.state.selectedFile[x]);\n        }\n\n        axios.post(`http://localhost:8000/upload-cat/${this.props.chosenCatInfo._id}`, data, {\n          // receive two parameter endpoint url ,form data \n          onUploadProgress: ProgressEvent => {\n            this.setState({\n              loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n            });\n          }\n        }).then(res => {\n          // then print response status\n          // console.log(res.config.data.id);\n          // console.log(res.statusText);\n          console.log(res);\n          toast.success('upload success');\n          alert('Files uploaded successfully');\n        }).catch(err => {\n          toast.error('upload fail');\n        });\n      }\n\n      this.redirectUser(`/items/${this.props.items.item._id}`);\n    };\n\n    this.maxSelectFile = event => {\n      // console.log(event);\n      let files = event.target.files; // create file object\n\n      if (files.length > 1) {\n        const msg = 'Only 1 image can be uploaded at a time';\n        event.target.value = null; // discard selected file\n\n        console.log(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = ''; // list allow mime type\n\n      const types = ['image/png', 'image/jpeg', 'image/gif']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // loop create toast massage\n        event.target.value = null;\n        toast.error(err[z]);\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 15000;\n      let err = \"\";\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err += files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n  }\n\n  // ****************************************************\n  // addDefaultImg = (ev) => {\n  //     const newImg = '/images/default/default.jpg';\n  //     if (ev.target.src !== newImg) {\n  //         ev.target.src = newImg\n  //     }  \n  // }\n  // submitForm = (e) => {\n  //     e.preventDefault();\n  //     // console.log({...this.state.formdata.cat});\n  //     console.log(this.state.formdata.cat);\n  //     this.props.dispatch(updateCat(\n  //             this.state.formdata.cat\n  //     ))\n  //     this.state.formdata.subcats.map( (subcat) =>{\n  //         if (subcat.isModified) {\n  //             // console.log(subcat)\n  //             this.props.dispatch(updateSubcat(\n  //                 subcat\n  //             ))\n  //         }\n  //     })\n  //     if (this.state.formdata.newSubcat.title) {\n  //         const newSubcat = this.state.formdata.newSubcat;\n  //         console.log(newSubcat);\n  //         this.props.dispatch(addSubcat(\n  //             newSubcat\n  //         ))\n  //     }\n  //     // this.props.history.push(`/admin`)\n  // }\n  render() {\n    // console.log(this.state)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"change_cat_img\",\n      src: `/images/cover_img_cat/${this.props.chosenCatInfo._id}.jpg`,\n      onError: this.addDefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      multiple: true,\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 45\n      }\n    }, \"Upload\")))))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"delete\",\n      onClick: e => {\n        if (window.confirm('Are you sure you wish to delete this category?')) this.deleteCat(e, this.props.chosenCatInfo._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }, \"Delete Category\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }\n    }, \"Save Changes\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    colls: state.collections.colls,\n    cats: state.cats.cats,\n    subcats: state.cats.subcats\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Sandbox));","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/Sandbox/sandbox.js"],"names":["React","Component","connect","withRouter","axios","ToastContainer","toast","Tab","Tabs","TabList","TabPanel","getAllColls","getAllCats","getAllSubCats","addCat","deleteCat","addSubcat","deleteSubcat","updateCat","updateSubcat","Sandbox","onChangeHandler","event","files","target","maxSelectFile","checkMimeType","setState","selectedFile","onClickHandler","data","FormData","state","x","length","append","post","props","chosenCatInfo","_id","onUploadProgress","ProgressEvent","loaded","total","then","res","console","log","success","alert","catch","err","error","redirectUser","items","item","msg","value","types","every","type","z","checkFileSize","size","render","submitForm","addDefaultImg","e","window","confirm","cancel","mapStateToProps","colls","collections","cats","subcats"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport { getAllColls, getAllCats, getAllSubCats  } from '../../actions';\nimport { addCat, deleteCat, addSubcat, deleteSubcat, updateCat, updateSubcat  }  from '../../actions';\n\nclass Sandbox extends Component {\n\n\n\n\n\n    // *************** UPLOAD LOGIC ********************\n\n    onChangeHandler = (event) => {\n\n\n        var files = event.target.files;\n\n        if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {  \n            this.setState({\n                selectedFile: files\n            })\n        }\n    }\n\n\n\n    onClickHandler = () => {\n        const data = new FormData() \n        \n        if (this.state.selectedFile) {\n            for(var x = 0; x<this.state.selectedFile.length; x++) {\n                data.append('file', this.state.selectedFile[x])\n            }\n\n\n                axios.post(`http://localhost:8000/upload-cat/${this.props.chosenCatInfo._id}`, data, { \n                    // receive two parameter endpoint url ,form data \n                    onUploadProgress: ProgressEvent => {\n                        this.setState({\n                            loaded: (ProgressEvent.loaded / ProgressEvent.total*100)\n                        })\n                    }\n                })\n                .then(res => { // then print response status\n                    // console.log(res.config.data.id);\n                    // console.log(res.statusText);\n                    console.log(res);\n                    toast.success('upload success')\n                    alert('Files uploaded successfully')\n                })\n                .catch(err => { \n                    toast.error('upload fail')\n                })\n        }\n        this.redirectUser(`/items/${this.props.items.item._id}`)\n\n\n    }\n\n    maxSelectFile=(event)=>{\n\n        // console.log(event);\n\n        let files = event.target.files // create file object\n            if (files.length > 1) { \n               const msg = 'Only 1 image can be uploaded at a time'\n               event.target.value = null // discard selected file\n               console.log(msg)\n              return false;\n     \n          }\n        return true;\n     \n    }\n\n    checkMimeType=(event)=>{\n        //getting file object\n        let files = event.target.files \n        //define message container\n        let err = ''\n        // list allow mime type\n        const types = ['image/png', 'image/jpeg', 'image/gif']\n        // loop access array\n        for(var x = 0; x<files.length; x++) {\n         // compare file type find doesn't matach\n            if (types.every(type => files[x].type !== type)) {\n                // create error message and assign to container   \n                err += files[x].type+' is not a supported format\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) { // loop create toast massage\n            event.target.value = null \n            toast.error(err[z])\n        }\n        return true;\n    }\n\n    checkFileSize=(event)=>{\n        let files = event.target.files\n        let size = 15000 \n        let err = \"\"; \n\n        for(var x = 0; x<files.length; x++) {\n            if (files[x].size > size) {\n                err += files[x].type+'is too large, please pick a smaller file\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) {\n            toast.error(err[z])\n            event.target.value = null\n        }\n        return true;\n   \n    }    \n\n    // ****************************************************\n\n\n\n\n    // addDefaultImg = (ev) => {\n    //     const newImg = '/images/default/default.jpg';\n    //     if (ev.target.src !== newImg) {\n    //         ev.target.src = newImg\n    //     }  \n    // }\n\n\n\n    // submitForm = (e) => {\n    //     e.preventDefault();\n    //     // console.log({...this.state.formdata.cat});\n    //     console.log(this.state.formdata.cat);\n\n    //     this.props.dispatch(updateCat(\n    //             this.state.formdata.cat\n            \n    //     ))\n\n    //     this.state.formdata.subcats.map( (subcat) =>{\n    //         if (subcat.isModified) {\n    //             // console.log(subcat)\n    //             this.props.dispatch(updateSubcat(\n    //                 subcat\n    //             ))\n    //         }\n    //     })\n\n        \n    //     if (this.state.formdata.newSubcat.title) {\n    //         const newSubcat = this.state.formdata.newSubcat;\n    //         console.log(newSubcat);\n    //         this.props.dispatch(addSubcat(\n    //             newSubcat\n    //         ))\n    //     }\n\n\n        \n    //     // this.props.history.push(`/admin`)\n    // }\n\n\n    render() {\n\n\n        // console.log(this.state)\n        return (\n            <div className=\"admin\">\n                        <form onSubmit={this.submitForm}>\n                            <table>\n                            <tbody>\n                               \n\n\n                                <tr>\n                                    <td>\n                                        <img className=\"change_cat_img\" src={`/images/cover_img_cat/${this.props.chosenCatInfo._id}.jpg`} onError={this.addDefaultImg}/>\n                                    </td>\n                                    <td>\n                                        <div className=\"form_element\">\n                                            <input type=\"file\" className=\"form-control\" multiple name=\"file\" onChange={this.onChangeHandler}/>\n                                            <br />\n                                            <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button> \n                                        </div>\n                                    </td>\n                                </tr>\n\n                            </tbody>\n                            </table>\n                            <button type=\"button\" \n                                className=\"delete\" \n                                onClick={(e) => { if (window.confirm('Are you sure you wish to delete this category?')) this.deleteCat(e, this.props.chosenCatInfo._id) } }\n                            >\n                                Delete Category\n                            </button>\n                            <button type=\"button\" onClick={this.cancel}>Cancel</button>\n                            <button type=\"submit\">Save Changes</button>\n                        </form>\n                        \n                    </div>\n    \n                \n\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        colls:state.collections.colls,\n        cats:state.cats.cats,\n        subcats:state.cats.subcats\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Sandbox));\n"]},"metadata":{},"sourceType":"module"}