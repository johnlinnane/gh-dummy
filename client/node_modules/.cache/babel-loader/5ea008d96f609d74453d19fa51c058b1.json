{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/AdminSection/admin_cat.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions';\nimport { addCat, deleteCat, addSubcat, deleteSubcat, updateCat, updateSubcat } from '../../actions';\n\nclass AdminCat extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        cat: {\n          _id: this.props.chosenCatInfo._id || null,\n          title: this.props.chosenCatInfo.title || null,\n          description: this.props.chosenCatInfo.description || null\n        },\n        subcats: [],\n        // presentNewSubcat: {\n        //     title: null,\n        //     description: null,\n        //     parent_cat: this.props.chosenCatInfo._id,\n        //     isNew: true\n        // },\n        // newSubcats: []\n        newSubcat: {\n          title: null,\n          description: null,\n          parent_cat: this.props.chosenCatInfo._id\n        }\n      },\n      imgSrc: `/images/cover_img_cat/${this.props.chosenCatInfo._id}.jpg`,\n      saved: false,\n      deleted: false,\n      subRemoved: false\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {\n        this.setState({\n          selectedFile: files\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n\n      if (this.state.selectedFile) {\n        for (var x = 0; x < this.state.selectedFile.length; x++) {\n          data.append('file', this.state.selectedFile[x]);\n        } // HOST-SELECT\n\n\n        axios.post(`http://localhost:8000/upload-cat/${this.props.chosenCatInfo._id}`, data, {\n          // axios.post(`http://64.227.34.134:8000/upload-cat/${this.props.chosenCatInfo._id}`, data, { \n          // receive two parameter endpoint url ,form data \n          onUploadProgress: ProgressEvent => {\n            this.setState({\n              loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n            });\n          }\n        }).then(res => {\n          // then print response status\n          // console.log(res.config.data.id);\n          // console.log(res.statusText);\n          console.log(res);\n          toast.success('upload success');\n          alert('Files uploaded successfully');\n        }).catch(err => {\n          toast.error('upload fail');\n        });\n      } // this.redirectUser(`/items/${this.props.items.item._id}`)\n\n    };\n\n    this.maxSelectFile = event => {\n      // console.log(event);\n      let files = event.target.files; // create file object\n\n      if (files.length > 1) {\n        const msg = 'Only 1 image can be uploaded at a time';\n        event.target.value = null; // discard selected file\n\n        console.log(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = ''; // list allow mime type\n\n      const types = ['image/png', 'image/jpeg', 'image/gif']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // loop create toast massage\n        event.target.value = null;\n        toast.error(err[z]);\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 15000;\n      let err = \"\";\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err += files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n\n    this.handleInput = (event, type, field, subcatId) => {\n      // make a copy of formdata\n      const newFormdata = { ...this.state.formdata\n      }; // console.log(newFormdata);\n\n      if (type === 'cat') {\n        if (field === 'cat_title') {\n          newFormdata.cat.title = event.target.value;\n        } else if (field === 'cat_description') {\n          newFormdata.cat.description = event.target.value;\n        }\n      }\n\n      if (type === 'subcat') {\n        this.state.formdata.subcats.map((subcat, i) => {\n          if (subcat._id === subcatId) {\n            if (field === 'title') {\n              newFormdata.subcats[i].title = event.target.value;\n            } else if (field === 'description') {\n              newFormdata.subcats[i].description = event.target.value;\n            }\n\n            newFormdata.subcats[i].isModified = true;\n          }\n        });\n      }\n\n      if (type === 'add_subcat') {\n        if (field === 'subcat_title') {\n          newFormdata.newSubcat.title = event.target.value;\n        }\n\n        if (field === 'subcat_desc') {\n          newFormdata.newSubcat.description = event.target.value;\n        }\n      } // copy it back to state\n\n\n      this.setState({\n        formdata: newFormdata\n      });\n      console.log(newFormdata);\n    };\n\n    this.deleteSubcat = (e, id, isNew) => {\n      this.props.dispatch(deleteSubcat(id));\n      this.setState({\n        subRemoved: true\n      });\n      setTimeout(() => {\n        this.props.history.push(`/admin`);\n      }, 2000);\n    };\n\n    this.deleteCat = (e, id) => {\n      this.props.dispatch(deleteCat(id));\n      this.setState({\n        deleted: true\n      });\n      setTimeout(() => {\n        // this.props.history.push(`/user/edit-item-sel/${this.props.items.newitem.itemId}`);\n        this.props.history.push(`/admin`);\n      }, 2000);\n    };\n\n    this.submitForm = e => {\n      e.preventDefault(); // console.log({...this.state.formdata.cat});\n\n      console.log(this.state.formdata.cat);\n      this.props.dispatch(updateCat(this.state.formdata.cat));\n      this.state.formdata.subcats.map(subcat => {\n        if (subcat.isModified) {\n          // console.log(subcat)\n          this.props.dispatch(updateSubcat(subcat));\n        }\n      });\n\n      if (this.state.formdata.newSubcat.title) {\n        const newSubcat = this.state.formdata.newSubcat;\n        console.log(newSubcat);\n        this.props.dispatch(addSubcat(newSubcat));\n      }\n\n      this.setState({\n        saved: true\n      });\n      setTimeout(() => {\n        this.props.history.push(`/admin`);\n      }, 2000);\n    };\n\n    this.cancel = () => {\n      this.props.history.push(`/admin`);\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getAllColls());\n    this.props.dispatch(getAllCats());\n    this.props.dispatch(getAllSubCats());\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.subcats && this.props.subcats.length) {\n      if (this.props.subcats != prevProps.subcats) {\n        let tempSubcats = [];\n\n        if (this.props.subcats) {\n          this.props.subcats.map((subcat, i) => {\n            if (subcat.parent_cat == this.props.chosenCatInfo._id) {\n              tempSubcats.push(subcat);\n            }\n          });\n        }\n\n        this.setState({\n          formdata: { ...this.state.formdata,\n            subcats: tempSubcats\n          }\n        });\n      }\n    }\n  } // *************** UPLOAD LOGIC ********************\n\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }\n    }, this.props.chosenCatInfo ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 41\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.props.chosenCatInfo.title,\n      defaultValue: this.props.chosenCatInfo.title,\n      onChange: event => this.handleInput(event, 'cat', 'cat_title'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 41\n      }\n    }, \"Description\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      placeholder: \"Enter category description\",\n      defaultValue: this.props.chosenCatInfo.description,\n      onChange: event => this.handleInput(event, 'cat', 'cat_description'),\n      rows: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"change_cat_img\",\n      src: this.state.imgSrc,\n      onError: this.addDefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      multiple: true,\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 45\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 41\n      }\n    }, \"Sub-categories\"))), this.state.formdata.subcats.length ? this.state.formdata.subcats.map((subcat, i) => subcat.parent_cat == this.props.chosenCatInfo._id ? /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: subcat.title,\n      defaultValue: subcat.title,\n      onChange: event => this.handleInput(event, 'subcat', 'title', subcat._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      defaultValue: subcat.description,\n      onChange: event => this.handleInput(event, 'subcat', 'description', subcat._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tooltip\",\n      onClick: e => {\n        if (window.confirm('Are you sure you want to remove this subcategory?')) this.deleteSubcat(e, subcat._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-times-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tooltiptext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 57\n      }\n    }, \"Remove\")))) : null) : null, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add new subcategory\",\n      defaultValue: null,\n      onChange: event => this.handleInput(event, 'add_subcat', 'subcat_title'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      defaultValue: null,\n      onChange: event => this.handleInput(event, 'add_subcat', 'subcat_desc'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 41\n      }\n    }))), this.state.subRemoved ? /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      className: \"message center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 41\n      }\n    }, \"Subcategory removed!\")) : /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"delete\",\n      onClick: e => {\n        if (window.confirm('Are you sure you wish to delete this category?')) this.deleteCat(e, this.props.chosenCatInfo._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 41\n      }\n    }, \"Delete Category\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 41\n      }\n    }, \"Save Changes\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 41\n      }\n    }, \"Cancel\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 33\n      }\n    })))), this.state.deleted ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 29\n      }\n    }, \"Category deleted!\") : null, this.state.saved ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 29\n      }\n    }, \"All changes saved!\") : null) : null);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    colls: state.collections.colls,\n    cats: state.cats.cats,\n    subcats: state.cats.subcats\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(AdminCat));","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/AdminSection/admin_cat.js"],"names":["React","Component","connect","withRouter","axios","ToastContainer","toast","Tab","Tabs","TabList","TabPanel","getAllColls","getAllCats","getAllSubCats","addCat","deleteCat","addSubcat","deleteSubcat","updateCat","updateSubcat","AdminCat","state","formdata","cat","_id","props","chosenCatInfo","title","description","subcats","newSubcat","parent_cat","imgSrc","saved","deleted","subRemoved","onChangeHandler","event","files","target","maxSelectFile","checkMimeType","setState","selectedFile","onClickHandler","data","FormData","x","length","append","post","onUploadProgress","ProgressEvent","loaded","total","then","res","console","log","success","alert","catch","err","error","msg","value","types","every","type","z","checkFileSize","size","addDefaultImg","ev","newImg","src","handleInput","field","subcatId","newFormdata","map","subcat","i","isModified","e","id","isNew","dispatch","setTimeout","history","push","submitForm","preventDefault","cancel","componentDidMount","componentDidUpdate","prevProps","tempSubcats","render","window","confirm","mapStateToProps","colls","collections","cats"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport { getAllColls, getAllCats, getAllSubCats  } from '../../actions';\nimport { addCat, deleteCat, addSubcat, deleteSubcat, updateCat, updateSubcat  }  from '../../actions';\n\nclass AdminCat extends Component {\n\n\n    state = {\n        formdata: {\n            cat: {\n                _id: this.props.chosenCatInfo._id || null,\n                title: this.props.chosenCatInfo.title || null,\n                description: this.props.chosenCatInfo.description || null\n\n            },\n            subcats: [],\n            // presentNewSubcat: {\n            //     title: null,\n            //     description: null,\n            //     parent_cat: this.props.chosenCatInfo._id,\n            //     isNew: true\n            // },\n            // newSubcats: []\n\n            newSubcat: {\n                title: null,\n                description: null,\n                parent_cat: this.props.chosenCatInfo._id\n        \n            }\n            \n        },\n        imgSrc: `/images/cover_img_cat/${this.props.chosenCatInfo._id}.jpg`,\n        saved: false,\n        deleted: false,\n        subRemoved: false\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getAllColls())\n        this.props.dispatch(getAllCats());\n        this.props.dispatch(getAllSubCats());\n    }\n\n    componentDidUpdate(prevProps) {\n    \n\n        if (this.props.subcats && this.props.subcats.length) {\n            if (this.props.subcats != prevProps.subcats) {\n                let tempSubcats = []\n\n                if (this.props.subcats) {\n                    this.props.subcats.map( (subcat, i) => {\n                        if (subcat.parent_cat == this.props.chosenCatInfo._id) {\n                            tempSubcats.push(subcat)\n                        }\n                    })\n                }\n                \n                this.setState({\n                    formdata: {\n                        ...this.state.formdata,\n                        subcats: tempSubcats\n                    }\n                })\n            }\n        }\n    \n    }\n\n\n\n\n    // *************** UPLOAD LOGIC ********************\n\n    onChangeHandler = (event) => {\n\n\n        var files = event.target.files;\n\n        if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {  \n            this.setState({\n                selectedFile: files\n            })\n        }\n    }\n\n\n\n    onClickHandler = () => {\n        const data = new FormData() \n        \n        if (this.state.selectedFile) {\n            for(var x = 0; x<this.state.selectedFile.length; x++) {\n                data.append('file', this.state.selectedFile[x])\n            }\n\n            // HOST-SELECT\n            axios.post(`http://localhost:8000/upload-cat/${this.props.chosenCatInfo._id}`, data, { \n            // axios.post(`http://64.227.34.134:8000/upload-cat/${this.props.chosenCatInfo._id}`, data, { \n                // receive two parameter endpoint url ,form data \n                onUploadProgress: ProgressEvent => {\n                    this.setState({\n                        loaded: (ProgressEvent.loaded / ProgressEvent.total*100)\n                    })\n                }\n            })\n            .then(res => { // then print response status\n                // console.log(res.config.data.id);\n                // console.log(res.statusText);\n                console.log(res);\n                toast.success('upload success')\n                alert('Files uploaded successfully')\n            })\n            .catch(err => { \n                toast.error('upload fail')\n            })\n        }\n        // this.redirectUser(`/items/${this.props.items.item._id}`)\n\n\n    }\n\n    maxSelectFile=(event)=>{\n\n        // console.log(event);\n\n        let files = event.target.files // create file object\n            if (files.length > 1) { \n               const msg = 'Only 1 image can be uploaded at a time'\n               event.target.value = null // discard selected file\n               console.log(msg)\n              return false;\n     \n          }\n        return true;\n     \n    }\n\n    checkMimeType=(event)=>{\n        //getting file object\n        let files = event.target.files \n        //define message container\n        let err = ''\n        // list allow mime type\n        const types = ['image/png', 'image/jpeg', 'image/gif']\n        // loop access array\n        for(var x = 0; x<files.length; x++) {\n         // compare file type find doesn't matach\n            if (types.every(type => files[x].type !== type)) {\n                // create error message and assign to container   \n                err += files[x].type+' is not a supported format\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) { // loop create toast massage\n            event.target.value = null \n            toast.error(err[z])\n        }\n        return true;\n    }\n\n    checkFileSize=(event)=>{\n        let files = event.target.files\n        let size = 15000 \n        let err = \"\"; \n\n        for(var x = 0; x<files.length; x++) {\n            if (files[x].size > size) {\n                err += files[x].type+'is too large, please pick a smaller file\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) {\n            toast.error(err[z])\n            event.target.value = null\n        }\n        return true;\n   \n    }    \n\n    // ****************************************************\n\n\n\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    }\n\n    handleInput = (event, type, field, subcatId) => {\n\n\n        // make a copy of formdata\n        const newFormdata = {\n            ...this.state.formdata\n        }\n\n\n        // console.log(newFormdata);\n        if (type === 'cat') {\n            if (field === 'cat_title') {\n                newFormdata.cat.title = event.target.value;\n\n            } else if (field === 'cat_description') {\n                newFormdata.cat.description = event.target.value;\n            } \n        }\n\n        if (type === 'subcat') {\n            this.state.formdata.subcats.map( (subcat, i ) => {\n                if (subcat._id === subcatId) {\n                    if (field === 'title') {\n                        newFormdata.subcats[i].title = event.target.value;\n                    } else if (field === 'description') {\n                        newFormdata.subcats[i].description = event.target.value;\n                    }\n                    newFormdata.subcats[i].isModified = true;\n                }\n            })\n        }\n\n        if (type === 'add_subcat') {\n            \n            if (field === 'subcat_title') {\n                newFormdata.newSubcat.title = event.target.value;\n            }  if (field === 'subcat_desc') {\n                newFormdata.newSubcat.description = event.target.value;\n            }\n\n\n            \n\n        }\n\n\n        // copy it back to state\n        this.setState({\n            formdata: newFormdata\n\n        })\n        console.log(newFormdata);\n    }\n\n\n    // addSubcat = () => {\n        \n    //     if (this.state.formdata.presentNewSubcat.title) {\n    //         this.setState({\n    //             formdata: {\n    //                 ...this.state.formdata,\n    //                 subcats: [\n    //                     ...this.state.formdata.subcats,\n    //                     this.state.formdata.presentNewSubcat\n    //                 ]\n    //             }\n    //         })\n\n\n    //         this.setState({\n                \n    //                 presentNewSubcat: {\n    //                     title: null,\n    //                     description: null,\n    //                     parent_cat: this.props.chosenCatInfo._id,\n    //                     isNew: true\n    //                 }\n    //         })\n    //     }\n\n        \n        // if (this.state.formdata.newSubcat.title) {\n        //     const newSubcat = this.state.formdata.newSubcat;\n        //     console.log(newSubcat);\n        //     // this.props.dispatch(addSubcat(\n        //     //     newSubcat\n        //     // ))\n\n        //     let refreshedFormdata = {\n        //         ...this.state.formdata,\n        //             subcats: [\n        //                 ...this.state.formdata.subcats,\n        //                 newSubcat\n        //             ]\n        //     }\n\n        //     this.setState({\n        //         formdata: refreshedFormdata,\n        //         newSubcat: null\n                \n        //     })\n        // }\n    // }\n\n\n    deleteSubcat = (e, id, isNew) => {\n        this.props.dispatch(deleteSubcat(id));\n\n        this.setState({\n            subRemoved: true\n        })\n\n        setTimeout(() => {\n            this.props.history.push(`/admin`);\n        }, 2000)\n    }\n\n    deleteCat = (e, id) => {\n        this.props.dispatch(deleteCat(id));\n\n        this.setState({\n            deleted: true\n        })\n\n        setTimeout(() => {\n            // this.props.history.push(`/user/edit-item-sel/${this.props.items.newitem.itemId}`);\n            this.props.history.push(`/admin`);\n        }, 2000)\n        \n\n    }\n\n\n\n    submitForm = (e) => {\n        e.preventDefault();\n        // console.log({...this.state.formdata.cat});\n        console.log(this.state.formdata.cat);\n\n        this.props.dispatch(updateCat(\n                this.state.formdata.cat\n            \n        ))\n\n        this.state.formdata.subcats.map( (subcat) =>{\n            if (subcat.isModified) {\n                // console.log(subcat)\n                this.props.dispatch(updateSubcat(\n                    subcat\n                ))\n            }\n        })\n\n        \n        if (this.state.formdata.newSubcat.title) {\n            const newSubcat = this.state.formdata.newSubcat;\n            console.log(newSubcat);\n            this.props.dispatch(addSubcat(\n                newSubcat\n            ))\n        }\n\n        this.setState({\n            saved: true\n        })\n\n        setTimeout(() => {\n            this.props.history.push(`/admin`);\n        }, 2000)\n        \n    }\n\n    cancel = () => {\n        this.props.history.push(`/admin`)\n    }\n\n\n\n    render() {\n\n\n        console.log(this.props)\n        return (\n            <div className=\"admin\">\n                { this.props.chosenCatInfo ? \n                    <div>\n                        <form onSubmit={this.submitForm}>\n                            <table>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <h3>Title</h3>\n                                    </td>\n                                    <td>\n\n                                        <input\n                                            type=\"text\"\n                                            placeholder={this.props.chosenCatInfo.title}\n                                            defaultValue={this.props.chosenCatInfo.title} \n                                            onChange={(event) => this.handleInput(event, 'cat', 'cat_title')}\n                                        />\n\n\n\n\n                                    </td>\n                                </tr>\n\n\n                                <tr>\n                                    <td>\n                                        <h3>Description</h3>\n                                    </td>\n                                    <td>\n                                        <textarea\n                                            type=\"text\"\n                                            placeholder=\"Enter category description\"\n                                            defaultValue={this.props.chosenCatInfo.description} \n                                            onChange={(event) => this.handleInput(event, 'cat', 'cat_description')}\n                                            rows={6}\n                                        />\n                                    </td>\n                                </tr>\n\n\n                                <tr>\n                                    <td>\n                                        <img className=\"change_cat_img\" src={this.state.imgSrc} onError={this.addDefaultImg}/>\n                                    </td>\n                                    <td>\n                                        <div className=\"form_element\">\n                                            <input type=\"file\" className=\"form-control\" multiple name=\"file\" onChange={this.onChangeHandler}/>\n                                            <br />\n                                            <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button> \n                                        </div>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <h3>Sub-categories</h3>\n                                    </td>\n                                </tr>\n\n\n                                { this.state.formdata.subcats.length ?\n                                    this.state.formdata.subcats.map( (subcat, i) => (\n                                        subcat.parent_cat == this.props.chosenCatInfo._id ? \n                                            <tr key={i}>\n                                                <td>\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder={subcat.title}\n                                                        defaultValue={subcat.title} \n                                                        onChange={(event) => this.handleInput(event, 'subcat', 'title', subcat._id)}\n                                                    />\n                                                </td>\n\n                                                <td>\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Description\"\n                                                        defaultValue={subcat.description} \n                                                        onChange={(event) => this.handleInput(event, 'subcat', 'description', subcat._id)}\n                                                    />\n                                                </td>\n\n                                                <td>\n                                                    {/* <button \n                                                        type=\"button\" \n                                                        onClick={(e) => { if (window.confirm('Are you sure you want to remove this subcategory?')) this.deleteSubcat(e, subcat._id) } }\n                                                        className=\"remove\">Remove</button> */}\n\n                                                    <div  className=\"tooltip\" onClick={(e) => { if (window.confirm('Are you sure you want to remove this subcategory?')) this.deleteSubcat(e, subcat._id) } }>\n                                                        <i className=\"fa fa-times-circle\"></i>\n                                                        <span className=\"tooltiptext\">Remove</span>\n                                                    </div>\n\n                                                    \n                                                    \n\n                                                </td>\n                                            </tr>\n                                        : null \n                                    ) )    \n                                : null }\n\n                                <tr >\n                                    <td>\n\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Add new subcategory\"\n                                            defaultValue={null} \n                                            onChange={(event) => this.handleInput(event, 'add_subcat', 'subcat_title')}\n                                        />\n                                    </td>\n\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Description\"\n                                            defaultValue={null} \n                                            onChange={(event) => this.handleInput(event, 'add_subcat', 'subcat_desc')}\n                                        />\n                                    </td>\n                                </tr>\n                                \n\n                                {this.state.subRemoved ?\n                                    <tr className=\"spacer\">\n                                        <td colSpan=\"2\" className=\"message center\">\n                                            Subcategory removed!\n                                        </td>\n                                    </tr>\n                                : <tr className=\"spacer\"></tr>}\n\n                                \n\n                                <tr>\n                                    <td colSpan=\"2\">\n                                        <button type=\"button\" \n                                            className=\"delete\" \n                                            onClick={(e) => { if (window.confirm('Are you sure you wish to delete this category?')) this.deleteCat(e, this.props.chosenCatInfo._id) } }\n                                        >\n                                            Delete Category\n                                        </button>\n\n                                    </td>\n                                </tr>\n\n                                <tr className=\"spacer\"></tr>\n\n                                <tr>\n                                    <td>\n                                        <button type=\"submit\">Save Changes</button>\n                                    </td>\n\n                                    <td>\n                                        <button type=\"button\" onClick={this.cancel}>Cancel</button>\n                                    </td>\n                                    \n                                </tr>\n\n                                <tr className=\"spacer\"></tr>\n\n\n                            </tbody>\n                            </table>\n                            \n                        </form>\n\n                        \n\n                        {this.state.deleted ?\n                            <p className=\"message\">Category deleted!</p>\n                        : null}\n\n                        {this.state.saved ?\n                            <p className=\"message\">All changes saved!</p>\n                        : null}\n                        \n                    </div>\n                : null }\n            </div>\n    \n                \n\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        colls:state.collections.colls,\n        cats:state.cats.cats,\n        subcats:state.cats.subcats\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AdminCat));\n"]},"metadata":{},"sourceType":"module"}