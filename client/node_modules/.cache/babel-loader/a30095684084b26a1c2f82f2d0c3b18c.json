{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildRegExpFromDelimiters = buildRegExpFromDelimiters;\nexports.canDrag = canDrag;\nexports.canDrop = canDrop;\n\nvar _escapeRegExp = require('lodash/escapeRegExp');\n\nvar _escapeRegExp2 = _interopRequireDefault(_escapeRegExp);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Convert an array of delimiter characters into a regular expression\n * that can be used to split content by those delimiters.\n * @param {Array<char>} delimiters Array of characters to turn into a regex\n * @returns {RegExp} Regular expression\n */\n\n\nfunction buildRegExpFromDelimiters(delimiters) {\n  var delimiterChars = delimiters.map(function (delimiter) {\n    // See: http://stackoverflow.com/a/34711175/1463681\n    var chrCode = delimiter - 48 * Math.floor(delimiter / 48);\n    return String.fromCharCode(96 <= delimiter ? chrCode : delimiter);\n  }).join('');\n  var escapedDelimiterChars = (0, _escapeRegExp2.default)(delimiterChars);\n  return new RegExp('[' + escapedDelimiterChars + ']+');\n}\n/**\n * Returns true when the tag is drag enabled\n * @param {object} params props of the tag element\n * @returns {boolean} true/false\n * The three different properties which controls this function are moveTag, readOnly and allowDragDrop.\n */\n\n\nfunction canDrag(params) {\n  var moveTag = params.moveTag,\n      readOnly = params.readOnly,\n      allowDragDrop = params.allowDragDrop;\n  return moveTag !== undefined && !readOnly && allowDragDrop;\n}\n/**\n * Returns true when the tag is drop enabled\n * @param {object} params props of the tag element\n * @returns {boolean} true/false\n * The two different properties which controls this function are readOnly and allowDragDrop.\n */\n\n\nfunction canDrop(params) {\n  var readOnly = params.readOnly,\n      allowDragDrop = params.allowDragDrop;\n  return !readOnly && allowDragDrop;\n}","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/node_modules/react-tag-input/dist-modules/components/utils.js"],"names":["Object","defineProperty","exports","value","buildRegExpFromDelimiters","canDrag","canDrop","_escapeRegExp","require","_escapeRegExp2","_interopRequireDefault","obj","__esModule","default","delimiters","delimiterChars","map","delimiter","chrCode","Math","floor","String","fromCharCode","join","escapedDelimiterChars","RegExp","params","moveTag","readOnly","allowDragDrop","undefined"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,yBAAR,GAAoCA,yBAApC;AACAF,OAAO,CAACG,OAAR,GAAkBA,OAAlB;AACAH,OAAO,CAACI,OAAR,GAAkBA,OAAlB;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,qBAAD,CAA3B;;AAEA,IAAIC,cAAc,GAAGC,sBAAsB,CAACH,aAAD,CAA3C;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;;;;;;;;AAMA,SAASP,yBAAT,CAAmCU,UAAnC,EAA+C;AAC7C,MAAIC,cAAc,GAAGD,UAAU,CAACE,GAAX,CAAe,UAAUC,SAAV,EAAqB;AACvD;AACA,QAAIC,OAAO,GAAGD,SAAS,GAAG,KAAKE,IAAI,CAACC,KAAL,CAAWH,SAAS,GAAG,EAAvB,CAA/B;AACA,WAAOI,MAAM,CAACC,YAAP,CAAoB,MAAML,SAAN,GAAkBC,OAAlB,GAA4BD,SAAhD,CAAP;AACD,GAJoB,EAIlBM,IAJkB,CAIb,EAJa,CAArB;AAKA,MAAIC,qBAAqB,GAAG,CAAC,GAAGf,cAAc,CAACI,OAAnB,EAA4BE,cAA5B,CAA5B;AACA,SAAO,IAAIU,MAAJ,CAAW,MAAMD,qBAAN,GAA8B,IAAzC,CAAP;AACD;AAED;;;;;;;;AAMA,SAASnB,OAAT,CAAiBqB,MAAjB,EAAyB;AACvB,MAAIC,OAAO,GAAGD,MAAM,CAACC,OAArB;AAAA,MACIC,QAAQ,GAAGF,MAAM,CAACE,QADtB;AAAA,MAEIC,aAAa,GAAGH,MAAM,CAACG,aAF3B;AAIA,SAAOF,OAAO,KAAKG,SAAZ,IAAyB,CAACF,QAA1B,IAAsCC,aAA7C;AACD;AAED;;;;;;;;AAMA,SAASvB,OAAT,CAAiBoB,MAAjB,EAAyB;AACvB,MAAIE,QAAQ,GAAGF,MAAM,CAACE,QAAtB;AAAA,MACIC,aAAa,GAAGH,MAAM,CAACG,aAD3B;AAGA,SAAO,CAACD,QAAD,IAAaC,aAApB;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildRegExpFromDelimiters = buildRegExpFromDelimiters;\nexports.canDrag = canDrag;\nexports.canDrop = canDrop;\n\nvar _escapeRegExp = require('lodash/escapeRegExp');\n\nvar _escapeRegExp2 = _interopRequireDefault(_escapeRegExp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert an array of delimiter characters into a regular expression\n * that can be used to split content by those delimiters.\n * @param {Array<char>} delimiters Array of characters to turn into a regex\n * @returns {RegExp} Regular expression\n */\nfunction buildRegExpFromDelimiters(delimiters) {\n  var delimiterChars = delimiters.map(function (delimiter) {\n    // See: http://stackoverflow.com/a/34711175/1463681\n    var chrCode = delimiter - 48 * Math.floor(delimiter / 48);\n    return String.fromCharCode(96 <= delimiter ? chrCode : delimiter);\n  }).join('');\n  var escapedDelimiterChars = (0, _escapeRegExp2.default)(delimiterChars);\n  return new RegExp('[' + escapedDelimiterChars + ']+');\n}\n\n/**\n * Returns true when the tag is drag enabled\n * @param {object} params props of the tag element\n * @returns {boolean} true/false\n * The three different properties which controls this function are moveTag, readOnly and allowDragDrop.\n */\nfunction canDrag(params) {\n  var moveTag = params.moveTag,\n      readOnly = params.readOnly,\n      allowDragDrop = params.allowDragDrop;\n\n  return moveTag !== undefined && !readOnly && allowDragDrop;\n}\n\n/**\n * Returns true when the tag is drop enabled\n * @param {object} params props of the tag element\n * @returns {boolean} true/false\n * The two different properties which controls this function are readOnly and allowDragDrop.\n */\nfunction canDrop(params) {\n  var readOnly = params.readOnly,\n      allowDragDrop = params.allowDragDrop;\n\n  return !readOnly && allowDragDrop;\n}"]},"metadata":{},"sourceType":"script"}