{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar wrapConnectorHooks_1 = require(\"./wrapConnectorHooks\");\n\nvar shallowEqual = require('shallowequal');\n\nfunction createSourceConnector(backend) {\n  var currentHandlerId;\n  var currentDragSourceNode;\n  var currentDragSourceOptions;\n  var disconnectCurrentDragSource;\n  var currentDragPreviewNode;\n  var currentDragPreviewOptions;\n  var disconnectCurrentDragPreview;\n\n  function reconnectDragSource() {\n    if (disconnectCurrentDragSource) {\n      disconnectCurrentDragSource();\n      disconnectCurrentDragSource = undefined;\n    }\n\n    if (currentHandlerId && currentDragSourceNode) {\n      disconnectCurrentDragSource = backend.connectDragSource(currentHandlerId, currentDragSourceNode, currentDragSourceOptions);\n    }\n  }\n\n  function reconnectDragPreview() {\n    if (disconnectCurrentDragPreview) {\n      disconnectCurrentDragPreview();\n      disconnectCurrentDragPreview = undefined;\n    }\n\n    if (currentHandlerId && currentDragPreviewNode) {\n      disconnectCurrentDragPreview = backend.connectDragPreview(currentHandlerId, currentDragPreviewNode, currentDragPreviewOptions);\n    }\n  }\n\n  function receiveHandlerId(handlerId) {\n    if (handlerId === currentHandlerId) {\n      return;\n    }\n\n    currentHandlerId = handlerId;\n    reconnectDragSource();\n    reconnectDragPreview();\n  }\n\n  var hooks = wrapConnectorHooks_1.default({\n    dragSource: function connectDragSource(node, options) {\n      if (node === currentDragSourceNode && shallowEqual(options, currentDragSourceOptions)) {\n        return;\n      }\n\n      currentDragSourceNode = node;\n      currentDragSourceOptions = options;\n      reconnectDragSource();\n    },\n    dragPreview: function connectDragPreview(node, options) {\n      if (node === currentDragPreviewNode && shallowEqual(options, currentDragPreviewOptions)) {\n        return;\n      }\n\n      currentDragPreviewNode = node;\n      currentDragPreviewOptions = options;\n      reconnectDragPreview();\n    }\n  });\n  return {\n    receiveHandlerId: receiveHandlerId,\n    hooks: hooks\n  };\n}\n\nexports.default = createSourceConnector;","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/node_modules/react-dnd/lib/createSourceConnector.js"],"names":["Object","defineProperty","exports","value","wrapConnectorHooks_1","require","shallowEqual","createSourceConnector","backend","currentHandlerId","currentDragSourceNode","currentDragSourceOptions","disconnectCurrentDragSource","currentDragPreviewNode","currentDragPreviewOptions","disconnectCurrentDragPreview","reconnectDragSource","undefined","connectDragSource","reconnectDragPreview","connectDragPreview","receiveHandlerId","handlerId","hooks","default","dragSource","node","options","dragPreview"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,oBAAoB,GAAGC,OAAO,CAAC,sBAAD,CAAlC;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,cAAD,CAA1B;;AACA,SAASE,qBAAT,CAA+BC,OAA/B,EAAwC;AACpC,MAAIC,gBAAJ;AACA,MAAIC,qBAAJ;AACA,MAAIC,wBAAJ;AACA,MAAIC,2BAAJ;AACA,MAAIC,sBAAJ;AACA,MAAIC,yBAAJ;AACA,MAAIC,4BAAJ;;AACA,WAASC,mBAAT,GAA+B;AAC3B,QAAIJ,2BAAJ,EAAiC;AAC7BA,MAAAA,2BAA2B;AAC3BA,MAAAA,2BAA2B,GAAGK,SAA9B;AACH;;AACD,QAAIR,gBAAgB,IAAIC,qBAAxB,EAA+C;AAC3CE,MAAAA,2BAA2B,GAAGJ,OAAO,CAACU,iBAAR,CAA0BT,gBAA1B,EAA4CC,qBAA5C,EAAmEC,wBAAnE,CAA9B;AACH;AACJ;;AACD,WAASQ,oBAAT,GAAgC;AAC5B,QAAIJ,4BAAJ,EAAkC;AAC9BA,MAAAA,4BAA4B;AAC5BA,MAAAA,4BAA4B,GAAGE,SAA/B;AACH;;AACD,QAAIR,gBAAgB,IAAII,sBAAxB,EAAgD;AAC5CE,MAAAA,4BAA4B,GAAGP,OAAO,CAACY,kBAAR,CAA2BX,gBAA3B,EAA6CI,sBAA7C,EAAqEC,yBAArE,CAA/B;AACH;AACJ;;AACD,WAASO,gBAAT,CAA0BC,SAA1B,EAAqC;AACjC,QAAIA,SAAS,KAAKb,gBAAlB,EAAoC;AAChC;AACH;;AACDA,IAAAA,gBAAgB,GAAGa,SAAnB;AACAN,IAAAA,mBAAmB;AACnBG,IAAAA,oBAAoB;AACvB;;AACD,MAAII,KAAK,GAAGnB,oBAAoB,CAACoB,OAArB,CAA6B;AACrCC,IAAAA,UAAU,EAAE,SAASP,iBAAT,CAA2BQ,IAA3B,EAAiCC,OAAjC,EAA0C;AAClD,UAAID,IAAI,KAAKhB,qBAAT,IACAJ,YAAY,CAACqB,OAAD,EAAUhB,wBAAV,CADhB,EACqD;AACjD;AACH;;AACDD,MAAAA,qBAAqB,GAAGgB,IAAxB;AACAf,MAAAA,wBAAwB,GAAGgB,OAA3B;AACAX,MAAAA,mBAAmB;AACtB,KAToC;AAUrCY,IAAAA,WAAW,EAAE,SAASR,kBAAT,CAA4BM,IAA5B,EAAkCC,OAAlC,EAA2C;AACpD,UAAID,IAAI,KAAKb,sBAAT,IACAP,YAAY,CAACqB,OAAD,EAAUb,yBAAV,CADhB,EACsD;AAClD;AACH;;AACDD,MAAAA,sBAAsB,GAAGa,IAAzB;AACAZ,MAAAA,yBAAyB,GAAGa,OAA5B;AACAR,MAAAA,oBAAoB;AACvB;AAlBoC,GAA7B,CAAZ;AAoBA,SAAO;AACHE,IAAAA,gBAAgB,EAAEA,gBADf;AAEHE,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH;;AACDrB,OAAO,CAACsB,OAAR,GAAkBjB,qBAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar wrapConnectorHooks_1 = require(\"./wrapConnectorHooks\");\nvar shallowEqual = require('shallowequal');\nfunction createSourceConnector(backend) {\n    var currentHandlerId;\n    var currentDragSourceNode;\n    var currentDragSourceOptions;\n    var disconnectCurrentDragSource;\n    var currentDragPreviewNode;\n    var currentDragPreviewOptions;\n    var disconnectCurrentDragPreview;\n    function reconnectDragSource() {\n        if (disconnectCurrentDragSource) {\n            disconnectCurrentDragSource();\n            disconnectCurrentDragSource = undefined;\n        }\n        if (currentHandlerId && currentDragSourceNode) {\n            disconnectCurrentDragSource = backend.connectDragSource(currentHandlerId, currentDragSourceNode, currentDragSourceOptions);\n        }\n    }\n    function reconnectDragPreview() {\n        if (disconnectCurrentDragPreview) {\n            disconnectCurrentDragPreview();\n            disconnectCurrentDragPreview = undefined;\n        }\n        if (currentHandlerId && currentDragPreviewNode) {\n            disconnectCurrentDragPreview = backend.connectDragPreview(currentHandlerId, currentDragPreviewNode, currentDragPreviewOptions);\n        }\n    }\n    function receiveHandlerId(handlerId) {\n        if (handlerId === currentHandlerId) {\n            return;\n        }\n        currentHandlerId = handlerId;\n        reconnectDragSource();\n        reconnectDragPreview();\n    }\n    var hooks = wrapConnectorHooks_1.default({\n        dragSource: function connectDragSource(node, options) {\n            if (node === currentDragSourceNode &&\n                shallowEqual(options, currentDragSourceOptions)) {\n                return;\n            }\n            currentDragSourceNode = node;\n            currentDragSourceOptions = options;\n            reconnectDragSource();\n        },\n        dragPreview: function connectDragPreview(node, options) {\n            if (node === currentDragPreviewNode &&\n                shallowEqual(options, currentDragPreviewOptions)) {\n                return;\n            }\n            currentDragPreviewNode = node;\n            currentDragPreviewOptions = options;\n            reconnectDragPreview();\n        },\n    });\n    return {\n        receiveHandlerId: receiveHandlerId,\n        hooks: hooks,\n    };\n}\nexports.default = createSourceConnector;\n"]},"metadata":{},"sourceType":"script"}