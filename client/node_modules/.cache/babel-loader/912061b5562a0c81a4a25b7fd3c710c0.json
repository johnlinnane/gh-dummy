{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/components/Categories/cat_view.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getItemsByCat, getCatById } from '../../actions';\nimport PanelView from '../PanelView/panel_view';\n\nclass CatView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      info: []\n    };\n  }\n\n  componentDidMount() {\n    let catId = this.props.match.params.id;\n    this.props.dispatch(getItemsByCat(catId));\n    this.props.dispatch(getCatById(catId));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n\n    if (nextProps.catitems && nextProps.catitems.length) {\n      console.log('called');\n      let tempArray = [];\n      nextProps.catitems.map((item, i) => tempArray.push({\n        src: `/images/sq_thumb/${item.omeka.omeka_id}.jpg`,\n        caption: item.title,\n        link: `/items/${item._id}`\n      }));\n      console.log(tempArray);\n\n      if (tempArray.length) {\n        this.setState({\n          info: [...tempArray]\n        });\n      }\n    }\n  }\n\n  render() {\n    let catinfo = this.props.catinfo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, catinfo && catinfo.length > 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, catinfo[0].title) : null, /*#__PURE__*/React.createElement(PanelView, {\n      info: this.state.info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    catitems: state.cats.catitems,\n    catinfo: state.cats.catinfo\n  };\n}\n\nexport default connect(mapStateToProps)(CatView);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Categories/cat_view.js"],"names":["React","Component","connect","getItemsByCat","getCatById","PanelView","CatView","state","info","componentDidMount","catId","props","match","params","id","dispatch","componentWillReceiveProps","nextProps","console","log","catitems","length","tempArray","map","item","i","push","src","omeka","omeka_id","caption","title","link","_id","setState","render","catinfo","mapStateToProps","cats"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,eAA1C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAMA,MAAMC,OAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAW7BM,KAX6B,GAWrB;AACJC,MAAAA,IAAI,EAAE;AADF,KAXqB;AAAA;;AAI7BC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC;AACA,SAAKH,KAAL,CAAWI,QAAX,CAAoBZ,aAAa,CAACO,KAAD,CAAjC;AACA,SAAKC,KAAL,CAAWI,QAAX,CAAoBX,UAAU,CAACM,KAAD,CAA9B;AACH;;AAODM,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AAGA,QAAIA,SAAS,CAACG,QAAV,IAAsBH,SAAS,CAACG,QAAV,CAAmBC,MAA7C,EAAqD;AACjDH,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAIG,SAAS,GAAG,EAAhB;AACAL,MAAAA,SAAS,CAACG,QAAV,CAAmBG,GAAnB,CAAwB,CAACC,IAAD,EAAOC,CAAP,KAChBH,SAAS,CAACI,IAAV,CACI;AACIC,QAAAA,GAAG,EAAG,oBAAmBH,IAAI,CAACI,KAAL,CAAWC,QAAS,MADjD;AAEIC,QAAAA,OAAO,EAAEN,IAAI,CAACO,KAFlB;AAGIC,QAAAA,IAAI,EAAG,UAASR,IAAI,CAACS,GAAI;AAH7B,OADJ,CADR;AASAf,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;;AACA,UAAIA,SAAS,CAACD,MAAd,EAAsB;AAClB,aAAKa,QAAL,CAAc;AAAE1B,UAAAA,IAAI,EAAE,CAAC,GAAGc,SAAJ;AAAR,SAAd;AACH;AAEJ;AACJ;;AAMDa,EAAAA,MAAM,GAAG;AAKL,QAAIC,OAAO,GAAG,KAAKzB,KAAL,CAAWyB,OAAzB;AAIA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEMA,OAAO,IAAIA,OAAO,CAACf,MAAR,GAAiB,CAA5B,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKe,OAAO,CAAC,CAAD,CAAP,CAAWL,KAAhB,CADF,GAED,IAJL,eAOI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAFJ;AAmBH;;AAvE4B;;AA2EjC,SAAS6B,eAAT,CAAyB9B,KAAzB,EAAgC;AAC5B,SAAO;AACHa,IAAAA,QAAQ,EAAEb,KAAK,CAAC+B,IAAN,CAAWlB,QADlB;AAEHgB,IAAAA,OAAO,EAAE7B,KAAK,CAAC+B,IAAN,CAAWF;AAFjB,GAAP;AAKH;;AAGD,eAAelC,OAAO,CAACmC,eAAD,CAAP,CAAyB/B,OAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getItemsByCat, getCatById } from '../../actions';\nimport PanelView from '../PanelView/panel_view';\n\n\n\n\n\nclass CatView  extends Component {\n\n    \n\n    componentDidMount() {\n        let catId = this.props.match.params.id\n        this.props.dispatch(getItemsByCat(catId));\n        this.props.dispatch(getCatById(catId));\n    }\n\n\n    state = {\n        info: []\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log(nextProps);\n        \n        \n        if (nextProps.catitems && nextProps.catitems.length) {\n            console.log('called');\n            let tempArray = []\n            nextProps.catitems.map( (item, i) => (\n                    tempArray.push(\n                        {\n                            src: `/images/sq_thumb/${item.omeka.omeka_id}.jpg`,\n                            caption: item.title,\n                            link: `/items/${item._id}`\n                        }\n                    )\n            ))\n            console.log(tempArray);\n            if (tempArray.length) {\n                this.setState({ info: [...tempArray]});\n            }\n            \n        }\n    }\n\n\n\n\n\n    render() {\n        \n\n\n\n        let catinfo = this.props.catinfo;\n\n\n\n        return (\n            \n            <div>\n\n                { catinfo && catinfo.length > 0? \n                    <h2>{catinfo[0].title}</h2>\n                :null\n                }\n\n                <PanelView info={this.state.info}>\n                </PanelView>\n\n                \n                \n\n\n\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        catitems: state.cats.catitems,\n        catinfo: state.cats.catinfo\n        \n    }\n}\n\n\nexport default connect(mapStateToProps)(CatView)"]},"metadata":{},"sourceType":"module"}