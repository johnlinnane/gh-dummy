{"ast":null,"code":"import axios from 'axios'; // **********************\n// *** DELETE ME ********\n// export function getBooks(\n//     limit = 10,\n//     start = 0,\n//     order = 'asc',\n//     list = ''\n// ) {\n//     const request = axios.get(`/api/books?limit=${limit}&skip=${start}&order=${order}`)\n//                         .then(response => {\n//                             if(list){\n//                                 return [...list, ...response.data]\n//                             } else {\n//                                 return response.data\n//                             }\n//                         })\n//     // console.log(request);\n//     return{\n//         type:'GET_BOOKS',\n//         payload:request\n//     }\n// }\n// **********************\n// *** DELETE ME ********\n// // two requests inside one action, book and user. user reduxthunk\n// export function getBookWithReviewer(id) {\n//     // reduxthunk's dispatched function sends payload to reducers whenever we are ready\n//     // as an alternative to getBooks\n//     const request = axios.get(`/api/getBook?id=${id}`)\n//     // return a dispatch function\n//     return (dispatch) => {\n//         // get the promise, using {{{destructuring}}}\n//         request.then(({data}) => {\n//             let book = data;\n//             // console.log(book);\n//             axios.get(`/api/getReviewer?id=${book.ownerId}`)\n//                 .then(({data}) => {\n//                     let response = {\n//                         book, \n//                         reviewer:data\n//                     }\n//                     // console.log(response);\n//                     // only gets executed when ready\n//                     dispatch({\n//                         type:'GET_BOOK_W_REVIEWER',\n//                         payload:response\n//                     })\n//                 })\n//         })\n//     }\n// }\n// // **********************\n// // *** DELETE ME ********\n// export function clearBookWithReviewer() {\n//     return {\n//         type:'CLEAR_BOOK_W_REVIEWER',\n//         payload:{\n//             book:{},\n//             reviewer:{}\n//         }\n//     }\n// }\n// // **********************\n// // *** DELETE ME ********\n// // book arg is json data\n// export function addBook(book) {\n//     const request = axios.post('/api/book', book)\n//                         .then(response => response.data);\n//     return {\n//         type: 'ADD_BOOK',\n//         payload:request\n//     }\n// }\n// // **********************\n// // *** DELETE ME ********\n// export function clearNewBook() {\n//     return {\n//         type:'CLEAR_NEWBOOK',\n//         payload:null\n//     }\n// }\n// get every post of particular user\n\nexport function getUserPosts(userId) {\n  const request = axios.get(`/api/user_posts?user=${userId}`).then(response => response.data);\n  return {\n    type: 'GET_USER_POSTS',\n    payload: request\n  };\n} // * * * * * * * * * *  GET ITEMS  BY USER* * * * * * * * * *  \n\nexport function getUserItems(userId) {\n  const request = axios.get(`/api/user_items?user=${userId}`).then(response => response.data);\n  return {\n    type: 'GET_USER_ITEMS',\n    payload: request\n  };\n} // ******************** EDIT REVIEW ********************\n// // **********************\n// // *** DELETE ME ********\n// export function getBook(id) {\n//     const request = axios.get(`/api/getBook?id=${id}`)\n//                         .then(response => response.data);\n//     return {\n//         type:'GET_BOOK',\n//         payload:request\n//     }\n// }\n// // **********************\n// // *** DELETE ME ********\n// export function updateBook(data) {\n//     const request = axios.post(`/api/book_update`, data)\n//                         .then(response => response.data);\n//     return {\n//         type:'UPDATE_BOOK',\n//         payload:request\n//     }\n// }\n// export function deleteBook(id) {\n//     const request = axios.delete(`/api/delete_book?id=${id}`)\n//                         .then(response => response.data)\n//     return {\n//         type:'DELETE_BOOK',\n//         payload:request\n//     }\n// }\n// export function clearBook() {\n//     return {\n//         type:'CLEAR_BOOK',\n//         payload: {\n//             book: null,\n//             updateBook:false,\n//             postDeleted:false\n//         }\n//     }\n// }\n// * * * * * * * * * CLEAR ITEM * * * * * * \n\nexport function clearItem() {\n  return {\n    type: 'CLEAR_ITEM',\n    payload: {\n      item: null,\n      updateItem: false,\n      itemDeleted: false\n    }\n  };\n} // ******************** USER ACTIONS ********************\n\nexport function loginUser({\n  email,\n  password\n}) {\n  const request = axios.post('/api/login', {\n    email,\n    password\n  }).then(response => response.data);\n  return {\n    type: 'USER_LOGIN',\n    payload: request\n  };\n}\nexport function auth() {\n  const request = axios.get('/api/auth').then(response => response.data);\n  return {\n    type: 'USER_AUTH',\n    payload: request\n  };\n}\nexport function getUsers() {\n  const request = axios.get(`/api/users`).then(response => response.data);\n  return {\n    type: 'GET_USER',\n    payload: request\n  };\n} // uses thunk\n\nexport function userRegister(user, userList) {\n  const request = axios.post(`/api/register`, user);\n  return dispatch => {\n    request.then(({\n      data\n    }) => {\n      // if register is wrong, don't send new user\n      let users = data.success ? [...userList, data.user] : userList;\n      let response = {\n        success: data.success,\n        users // result of conditional\n\n      };\n      dispatch({\n        type: 'USER_REGISTER',\n        payload: response\n      });\n    });\n  };\n} // ******************** ITEM ACTIONS ********************\n\nexport function getAllItems() {\n  const request = axios.get(`/api/allItems`).then(response => {\n    return response.data;\n  }); // console.log(request);\n\n  return {\n    type: 'GET_ALL_ITEMS',\n    payload: request\n  };\n}\nexport function getItems(limit = 10, start = 0, order = 'asc', list = '') {\n  const request = axios.get(`/api/items?limit=${limit}&skip=${start}&order=${order}`).then(response => {\n    if (list) {\n      return [...list, ...response.data];\n    } else {\n      return response.data;\n    }\n  }); // console.log(request);\n\n  return {\n    type: 'GET_ITEMS',\n    payload: request\n  };\n} // two requests inside one action, book and user. user reduxthunk\n\nexport function getItemWithContributor(id) {\n  // reduxthunk's dispatched function sends payload to reducers whenever we are ready\n  // as an alternative to getItems\n  const request = axios.get(`/api/getItemById?id=${id}`); // return a dispatch function\n\n  return dispatch => {\n    // get the promise, using {{{destructuring}}}\n    request.then(({\n      data\n    }) => {\n      let item = data; // console.log(item);\n      // axios.get(`/api/getContributor?id=${item.ownerId}`)\n\n      console.log(data); // axios.get(`/api/getContributor?id=${item._id}`)\n\n      axios.get(`/api/getContributor?id=5e99a141fb671004505351b4`).then(({\n        data\n      }) => {\n        let response = {\n          item,\n          // reviewer:data\n          contributor: data\n        }; // console.log(response);\n        // only gets executed when ready\n\n        dispatch({\n          type: 'GET_ITEM_W_CONTRIBUTOR',\n          payload: response\n        });\n      });\n    });\n  };\n}\nexport function clearItemWithContributor() {\n  return {\n    type: 'CLEAR_ITEM_W_REVIEWER',\n    payload: {\n      item: {},\n      reviewer: {}\n    }\n  };\n} // item arg is json data\n\nexport function addItem(item) {\n  const request = axios.post('/api/item', item).then(response => response.data);\n  return {\n    type: 'ADD_ITEM',\n    payload: request\n  };\n}\nexport function clearNewItem() {\n  return {\n    type: 'CLEAR_NEWITEM',\n    payload: null\n  };\n} // // get every post of particular user\n// export function getUserPosts(userId) {\n//     const request = axios.get(`/api/user_posts?user=${userId}`)\n//                         .then(response => response.data);\n//     return {\n//         type:'GET_USER_POSTS',\n//         payload:request\n//     }\n// }\n// * * * * * * * * * *  EDIT ITEMS * * * * * * * * * *  \n\nexport function getItemById(id) {\n  const request = axios.get(`/api/getItemById?id=${id}`).then(response => response.data);\n  return {\n    type: 'GET_ITEM',\n    payload: request\n  };\n}\nexport function updateItem(data) {\n  const request = axios.post(`/api/item_update`, data).then(response => response.data);\n  return {\n    type: 'UPDATE_ITEM',\n    payload: request\n  };\n}\nexport function deleteItem(id) {\n  const request = axios.delete(`/api/delete_item?id=${id}`).then(response => response.data);\n  return {\n    type: 'DELETE_ITEM',\n    payload: request\n  };\n} // ******************** COLLECTIONS ACTIONS ********************\n\nexport function getAllColls() {\n  const request = axios.get(`/api/collections`).then(response => {\n    return response.data;\n  });\n  return {\n    type: 'GET_ALL_COLLS',\n    payload: request\n  };\n}\nexport function getColl(id) {\n  // console.log('getColl action called');\n  const request = axios.get(`/api/getColl?id=${id}`).then(response => response.data); // console.log(request);\n\n  return {\n    type: 'GET_COLL',\n    payload: request\n  };\n}\nexport function searchItem(key, value) {\n  // console.log('searchItem action called');\n  const request = axios.get(`/api/searchItem?key=${key}&value=${value}`).then(response => response.data); // console.log(request);\n\n  return {\n    type: 'SEARCH_ITEM',\n    payload: request\n  };\n} // decided not to use\n\nexport function getCollWithItems(collId) {\n  const request = axios.get(`/api/getColl?id=${collId}`).then(response => response.data);\n  return dispatch => {\n    request.then(({\n      data\n    }) => {\n      let coll = data;\n      axios.get(`/api/searchItem?id=${collId}`).then(({\n        data\n      }) => {\n        let response = {\n          coll,\n          items: data\n        };\n        dispatch({\n          type: 'GET_COLL_W_ITEMS',\n          payload: response\n        });\n      });\n    });\n  };\n} // ******************** CATEGORIES ACTIONS ********************\n\nexport function getCats() {\n  const request = axios.get(`/api/categories`).then(response => {\n    return response.data;\n  });\n  return {\n    type: 'GET_ALL_CATS',\n    payload: request\n  };\n}\nexport function getItemsByCat(collId) {\n  const request = axios.get(`/api/getItemByColl?value=${collId}`).then(response => {\n    return response.data;\n  });\n  return {\n    type: 'GET_ITEMS_BY_CAT',\n    payload: request\n  };\n}","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/actions/index.js"],"names":["axios","getUserPosts","userId","request","get","then","response","data","type","payload","getUserItems","clearItem","item","updateItem","itemDeleted","loginUser","email","password","post","auth","getUsers","userRegister","user","userList","dispatch","users","success","getAllItems","getItems","limit","start","order","list","getItemWithContributor","id","console","log","contributor","clearItemWithContributor","reviewer","addItem","clearNewItem","getItemById","deleteItem","delete","getAllColls","getColl","searchItem","key","value","getCollWithItems","collId","coll","items","getCats","getItemsByCat"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AACA,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AACjC,QAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAW,wBAAuBF,MAAO,EAAzC,EACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAD/B,CAAhB;AAEA,SAAO;AACHC,IAAAA,IAAI,EAAC,gBADF;AAEHC,IAAAA,OAAO,EAACN;AAFL,GAAP;AAIH,C,CAID;;AAEA,OAAO,SAASO,YAAT,CAAsBR,MAAtB,EAA8B;AACjC,QAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAW,wBAAuBF,MAAO,EAAzC,EACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAD/B,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAC,gBADF;AAEHC,IAAAA,OAAO,EAACN;AAFL,GAAP;AAIH,C,CAID;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,SAASQ,SAAT,GAAqB;AACxB,SAAO;AACHH,IAAAA,IAAI,EAAC,YADF;AAEHC,IAAAA,OAAO,EAAE;A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","sourcesContent":["import axios from 'axios';\n\n// **********************\n// *** DELETE ME ********\n\n// export function getBooks(\n//     limit = 10,\n//     start = 0,\n//     order = 'asc',\n//     list = ''\n// ) {\n//     const request = axios.get(`/api/books?limit=${limit}&skip=${start}&order=${order}`)\n//                         .then(response => {\n//                             if(list){\n//                                 return [...list, ...response.data]\n//                             } else {\n//                                 return response.data\n//                             }\n//                         })\n\n//     // console.log(request);\n\n//     return{\n//         type:'GET_BOOKS',\n//         payload:request\n//     }\n// }\n\n\n\n\n// **********************\n// *** DELETE ME ********\n\n// // two requests inside one action, book and user. user reduxthunk\n// export function getBookWithReviewer(id) {\n\n//     // reduxthunk's dispatched function sends payload to reducers whenever we are ready\n//     // as an alternative to getBooks\n//     const request = axios.get(`/api/getBook?id=${id}`)\n\n//     // return a dispatch function\n//     return (dispatch) => {\n\n//         // get the promise, using {{{destructuring}}}\n//         request.then(({data}) => {\n//             let book = data;\n//             // console.log(book);\n\n//             axios.get(`/api/getReviewer?id=${book.ownerId}`)\n//                 .then(({data}) => {\n                \n//                     let response = {\n//                         book, \n//                         reviewer:data\n//                     }\n\n//                     // console.log(response);\n\n//                     // only gets executed when ready\n//                     dispatch({\n//                         type:'GET_BOOK_W_REVIEWER',\n//                         payload:response\n//                     })\n//                 })\n//         })\n//     }\n// }\n\n\n// // **********************\n// // *** DELETE ME ********\n// export function clearBookWithReviewer() {\n//     return {\n//         type:'CLEAR_BOOK_W_REVIEWER',\n//         payload:{\n//             book:{},\n//             reviewer:{}\n//         }\n//     }\n// }\n\n\n// // **********************\n// // *** DELETE ME ********\n// // book arg is json data\n// export function addBook(book) {\n//     const request = axios.post('/api/book', book)\n//                         .then(response => response.data);\n\n//     return {\n//         type: 'ADD_BOOK',\n//         payload:request\n//     }\n// }\n\n\n\n// // **********************\n// // *** DELETE ME ********\n// export function clearNewBook() {\n//     return {\n//         type:'CLEAR_NEWBOOK',\n//         payload:null\n//     }\n// }\n\n\n\n// get every post of particular user\nexport function getUserPosts(userId) {\n    const request = axios.get(`/api/user_posts?user=${userId}`)\n                        .then(response => response.data);\n    return {\n        type:'GET_USER_POSTS',\n        payload:request\n    }\n}\n\n\n\n// * * * * * * * * * *  GET ITEMS  BY USER* * * * * * * * * *  \n\nexport function getUserItems(userId) {\n    const request = axios.get(`/api/user_items?user=${userId}`)\n                        .then(response => response.data);\n    \n    return {\n        type:'GET_USER_ITEMS',\n        payload:request\n    }\n}\n\n\n\n// ******************** EDIT REVIEW ********************\n\n// // **********************\n// // *** DELETE ME ********\n// export function getBook(id) {\n//     const request = axios.get(`/api/getBook?id=${id}`)\n//                         .then(response => response.data);\n\n//     return {\n//         type:'GET_BOOK',\n//         payload:request\n//     }\n// }\n\n\n\n\n\n// // **********************\n// // *** DELETE ME ********\n// export function updateBook(data) {\n//     const request = axios.post(`/api/book_update`, data)\n//                         .then(response => response.data);\n//     return {\n//         type:'UPDATE_BOOK',\n//         payload:request\n//     }\n// }\n// export function deleteBook(id) {\n//     const request = axios.delete(`/api/delete_book?id=${id}`)\n//                         .then(response => response.data)\n//     return {\n//         type:'DELETE_BOOK',\n//         payload:request\n//     }\n// }\n// export function clearBook() {\n//     return {\n//         type:'CLEAR_BOOK',\n//         payload: {\n//             book: null,\n//             updateBook:false,\n//             postDeleted:false\n//         }\n//     }\n// }\n\n// * * * * * * * * * CLEAR ITEM * * * * * * \n\nexport function clearItem() {\n    return {\n        type:'CLEAR_ITEM',\n        payload: {\n            item: null,\n            updateItem:false,\n            itemDeleted:false\n        }\n    }\n}\n\n\n\n// ******************** USER ACTIONS ********************\n\nexport function loginUser({email, password}) {\n\n    const request = axios.post('/api/login', {email, password})\n                        .then(response => response.data);\n\n    return {\n        type:'USER_LOGIN',\n        payload:request\n    }\n}\n\n\nexport function auth() {\n    const request = axios.get('/api/auth') \n                        .then(response => response.data);\n\n    return {\n        type:'USER_AUTH',\n        payload:request\n    }\n\n}\n\n\n\nexport function getUsers() {\n    const request = axios.get(`/api/users`)\n                        .then(response => response.data);\n\n    return {\n        type:'GET_USER',\n        payload:request\n    }\n\n}\n\n// uses thunk\nexport function userRegister(user, userList) {\n    const request = axios.post(`/api/register`, user);\n\n    return (dispatch) => {\n        request.then(({data}) => {\n\n            // if register is wrong, don't send new user\n            let users = data.success ? [...userList, data.user] : userList;\n\n            let response = {\n                success:data.success,\n                users    // result of conditional\n            }\n\n            dispatch({\n                type:'USER_REGISTER',\n                payload:response\n            })\n        })\n    }\n}\n\n\n\n\n// ******************** ITEM ACTIONS ********************\n\n\nexport function getAllItems() {\n    const request = axios.get(`/api/allItems`)\n                        .then(response => {\n                                return response.data\n                            }\n                        );\n\n    // console.log(request);\n\n    return {\n        type:'GET_ALL_ITEMS',\n        payload:request\n    }\n}\n\n\n\n\nexport function getItems(\n    limit = 10,\n    start = 0,\n    order = 'asc',\n    list = ''\n) {\n    const request = axios.get(`/api/items?limit=${limit}&skip=${start}&order=${order}`)\n                        .then(response => {\n                            if(list){\n                                return [...list, ...response.data]\n                            } else {\n                                return response.data\n                            }\n                        })\n\n    // console.log(request);\n\n    return{\n        type:'GET_ITEMS',\n        payload:request\n    }\n}\n\n\n\n\n// two requests inside one action, book and user. user reduxthunk\nexport function getItemWithContributor(id) {\n\n    // reduxthunk's dispatched function sends payload to reducers whenever we are ready\n    // as an alternative to getItems\n    const request = axios.get(`/api/getItemById?id=${id}`)\n\n    // return a dispatch function\n    return (dispatch) => {\n\n        // get the promise, using {{{destructuring}}}\n        request.then(({data}) => {\n            let item = data;\n            // console.log(item);\n\n            // axios.get(`/api/getContributor?id=${item.ownerId}`)\n            console.log(data);\n\n            // axios.get(`/api/getContributor?id=${item._id}`)\n            axios.get(`/api/getContributor?id=5e99a141fb671004505351b4`)\n\n                .then(({data}) => {\n                \n                    let response = {\n                        item, \n                        // reviewer:data\n                        contributor:data\n                    }\n\n                    // console.log(response);\n\n                    // only gets executed when ready\n                    dispatch({\n                        type:'GET_ITEM_W_CONTRIBUTOR',\n                        payload:response\n                    })\n                })\n        })\n    }\n}\n\nexport function clearItemWithContributor() {\n    return {\n        type:'CLEAR_ITEM_W_REVIEWER',\n        payload:{\n            item:{},\n            reviewer:{}\n        }\n    }\n}\n\n// item arg is json data\nexport function addItem(item) {\n    const request = axios.post('/api/item', item)\n                        .then(response => response.data);\n\n    return {\n        type: 'ADD_ITEM',\n        payload:request\n    }\n}\n\n\nexport function clearNewItem() {\n    return {\n        type:'CLEAR_NEWITEM',\n        payload:null\n    }\n}\n\n// // get every post of particular user\n// export function getUserPosts(userId) {\n//     const request = axios.get(`/api/user_posts?user=${userId}`)\n//                         .then(response => response.data);\n//     return {\n//         type:'GET_USER_POSTS',\n//         payload:request\n//     }\n// }\n\n\n// * * * * * * * * * *  EDIT ITEMS * * * * * * * * * *  \n\nexport function getItemById(id) {\n    const request = axios.get(`/api/getItemById?id=${id}`)\n                        .then(response => response.data);\n\n    return {\n        type:'GET_ITEM',\n        payload:request\n    }\n}\n\n\nexport function updateItem(data) {\n    const request = axios.post(`/api/item_update`, data)\n                        .then(response => response.data);\n    return {\n        type:'UPDATE_ITEM',\n        payload:request\n    }\n}\n\nexport function deleteItem(id) {\n    const request = axios.delete(`/api/delete_item?id=${id}`)\n                        .then(response => response.data)\n    return {\n        type:'DELETE_ITEM',\n        payload:request\n    }\n}\n\n\n\n\n// ******************** COLLECTIONS ACTIONS ********************\n\n\nexport function getAllColls() {\n    const request = axios.get(`/api/collections`)\n                        .then(response => {\n                                return response.data\n                            }\n                        );\nreturn {\n        type:'GET_ALL_COLLS',\n        payload:request\n    }\n}\n\n\n\n\n\nexport function getColl(id) {\n    // console.log('getColl action called');\n    const request = axios.get(`/api/getColl?id=${id}`)\n                        .then(response => response.data);\n\n    // console.log(request);\n\n\n    return {\n        type:'GET_COLL',\n        payload:request\n    }\n}\n\n\nexport function searchItem(key, value) {\n    // console.log('searchItem action called');\n\n    const request = axios.get(`/api/searchItem?key=${key}&value=${value}`)\n    .then(response => response.data);\n\n    // console.log(request);\n\n    return {\n        type:'SEARCH_ITEM',\n        payload:request\n    }\n\n\n}\n\n\n// decided not to use\nexport function getCollWithItems(collId) {\n\n\n    const request = axios.get(`/api/getColl?id=${collId}`)\n        .then(response => response.data);\n\n\n    return (dispatch) => {\n        request.then( ({data}) => {\n            let coll = data;\n\n            axios.get(`/api/searchItem?id=${collId}`)\n                .then( ({data}) => {\n                    let response = {\n                        coll,\n                        items:data\n                    }\n                    dispatch({\n                        type:'GET_COLL_W_ITEMS',\n                        payload:response\n                    })\n                })\n        })\n    }\n}\n\n\n// ******************** CATEGORIES ACTIONS ********************\n\n\nexport function getCats() {\n    const request = axios.get(`/api/categories`)\n                        .then(response => {\n                                return response.data\n                            }\n                        );\nreturn {\n        type:'GET_ALL_CATS',\n        payload:request\n    }\n}\n\n\n\nexport function getItemsByCat(collId) {\n    const request = axios.get(`/api/getItemByColl?value=${collId}`)\n                        .then(response => {\n                                return response.data\n                            }\n                        );\nreturn {\n        type:'GET_ITEMS_BY_CAT',\n        payload:request\n    }\n}\n"]},"metadata":{},"sourceType":"module"}