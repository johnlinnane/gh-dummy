{"ast":null,"code":"var is = require('type-is');\n\nvar Busboy = require('busboy');\n\nvar extend = require('xtend');\n\nvar onFinished = require('on-finished');\n\nvar appendField = require('append-field');\n\nvar Counter = require('./counter');\n\nvar MulterError = require('./multer-error');\n\nvar FileAppender = require('./file-appender');\n\nvar removeUploadedFiles = require('./remove-uploaded-files');\n\nfunction drainStream(stream) {\n  stream.on('readable', stream.read.bind(stream));\n}\n\nfunction makeMiddleware(setup) {\n  return function multerMiddleware(req, res, next) {\n    if (!is(req, ['multipart'])) return next();\n    var options = setup();\n    var limits = options.limits;\n    var storage = options.storage;\n    var fileFilter = options.fileFilter;\n    var fileStrategy = options.fileStrategy;\n    var preservePath = options.preservePath;\n    req.body = Object.create(null);\n    var busboy;\n\n    try {\n      busboy = new Busboy({\n        headers: req.headers,\n        limits: limits,\n        preservePath: preservePath\n      });\n    } catch (err) {\n      return next(err);\n    }\n\n    var appender = new FileAppender(fileStrategy, req);\n    var isDone = false;\n    var readFinished = false;\n    var errorOccured = false;\n    var pendingWrites = new Counter();\n    var uploadedFiles = [];\n\n    function done(err) {\n      if (isDone) return;\n      isDone = true;\n      req.unpipe(busboy);\n      drainStream(req);\n      busboy.removeAllListeners();\n      onFinished(req, function () {\n        next(err);\n      });\n    }\n\n    function indicateDone() {\n      if (readFinished && pendingWrites.isZero() && !errorOccured) done();\n    }\n\n    function abortWithError(uploadError) {\n      if (errorOccured) return;\n      errorOccured = true;\n      pendingWrites.onceZero(function () {\n        function remove(file, cb) {\n          storage._removeFile(req, file, cb);\n        }\n\n        removeUploadedFiles(uploadedFiles, remove, function (err, storageErrors) {\n          if (err) return done(err);\n          uploadError.storageErrors = storageErrors;\n          done(uploadError);\n        });\n      });\n    }\n\n    function abortWithCode(code, optionalField) {\n      abortWithError(new MulterError(code, optionalField));\n    } // handle text field data\n\n\n    busboy.on('field', function (fieldname, value, fieldnameTruncated, valueTruncated) {\n      if (fieldnameTruncated) return abortWithCode('LIMIT_FIELD_KEY');\n      if (valueTruncated) return abortWithCode('LIMIT_FIELD_VALUE', fieldname); // Work around bug in Busboy (https://github.com/mscdex/busboy/issues/6)\n\n      if (limits && limits.hasOwnProperty('fieldNameSize')) {\n        if (fieldname.length > limits.fieldNameSize) return abortWithCode('LIMIT_FIELD_KEY');\n      }\n\n      appendField(req.body, fieldname, value);\n    }); // handle files\n\n    busboy.on('file', function (fieldname, fileStream, filename, encoding, mimetype) {\n      // don't attach to the files object, if there is no file\n      if (!filename) return fileStream.resume(); // Work around bug in Busboy (https://github.com/mscdex/busboy/issues/6)\n\n      if (limits && limits.hasOwnProperty('fieldNameSize')) {\n        if (fieldname.length > limits.fieldNameSize) return abortWithCode('LIMIT_FIELD_KEY');\n      }\n\n      var file = {\n        fieldname: fieldname,\n        originalname: filename,\n        encoding: encoding,\n        mimetype: mimetype\n      };\n      var placeholder = appender.insertPlaceholder(file);\n      fileFilter(req, file, function (err, includeFile) {\n        if (err) {\n          appender.removePlaceholder(placeholder);\n          return abortWithError(err);\n        }\n\n        if (!includeFile) {\n          appender.removePlaceholder(placeholder);\n          return fileStream.resume();\n        }\n\n        var aborting = false;\n        pendingWrites.increment();\n        Object.defineProperty(file, 'stream', {\n          configurable: true,\n          enumerable: false,\n          value: fileStream\n        });\n        fileStream.on('error', function (err) {\n          pendingWrites.decrement();\n          abortWithError(err);\n        });\n        fileStream.on('limit', function () {\n          aborting = true;\n          abortWithCode('LIMIT_FILE_SIZE', fieldname);\n        });\n\n        storage._handleFile(req, file, function (err, info) {\n          if (aborting) {\n            appender.removePlaceholder(placeholder);\n            uploadedFiles.push(extend(file, info));\n            return pendingWrites.decrement();\n          }\n\n          if (err) {\n            appender.removePlaceholder(placeholder);\n            pendingWrites.decrement();\n            return abortWithError(err);\n          }\n\n          var fileInfo = extend(file, info);\n          appender.replacePlaceholder(placeholder, fileInfo);\n          uploadedFiles.push(fileInfo);\n          pendingWrites.decrement();\n          indicateDone();\n        });\n      });\n    });\n    busboy.on('error', function (err) {\n      abortWithError(err);\n    });\n    busboy.on('partsLimit', function () {\n      abortWithCode('LIMIT_PART_COUNT');\n    });\n    busboy.on('filesLimit', function () {\n      abortWithCode('LIMIT_FILE_COUNT');\n    });\n    busboy.on('fieldsLimit', function () {\n      abortWithCode('LIMIT_FIELD_COUNT');\n    });\n    busboy.on('finish', function () {\n      readFinished = true;\n      indicateDone();\n    });\n    req.pipe(busboy);\n  };\n}\n\nmodule.exports = makeMiddleware;","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/node_modules/multer/lib/make-middleware.js"],"names":["is","require","Busboy","extend","onFinished","appendField","Counter","MulterError","FileAppender","removeUploadedFiles","drainStream","stream","on","read","bind","makeMiddleware","setup","multerMiddleware","req","res","next","options","limits","storage","fileFilter","fileStrategy","preservePath","body","Object","create","busboy","headers","err","appender","isDone","readFinished","errorOccured","pendingWrites","uploadedFiles","done","unpipe","removeAllListeners","indicateDone","isZero","abortWithError","uploadError","onceZero","remove","file","cb","_removeFile","storageErrors","abortWithCode","code","optionalField","fieldname","value","fieldnameTruncated","valueTruncated","hasOwnProperty","length","fieldNameSize","fileStream","filename","encoding","mimetype","resume","originalname","placeholder","insertPlaceholder","includeFile","removePlaceholder","aborting","increment","defineProperty","configurable","enumerable","decrement","_handleFile","info","push","fileInfo","replacePlaceholder","pipe","module","exports"],"mappings":"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","sourcesContent":["var is = require('type-is')\nvar Busboy = require('busboy')\nvar extend = require('xtend')\nvar onFinished = require('on-finished')\nvar appendField = require('append-field')\n\nvar Counter = require('./counter')\nvar MulterError = require('./multer-error')\nvar FileAppender = require('./file-appender')\nvar removeUploadedFiles = require('./remove-uploaded-files')\n\nfunction drainStream (stream) {\n  stream.on('readable', stream.read.bind(stream))\n}\n\nfunction makeMiddleware (setup) {\n  return function multerMiddleware (req, res, next) {\n    if (!is(req, ['multipart'])) return next()\n\n    var options = setup()\n\n    var limits = options.limits\n    var storage = options.storage\n    var fileFilter = options.fileFilter\n    var fileStrategy = options.fileStrategy\n    var preservePath = options.preservePath\n\n    req.body = Object.create(null)\n\n    var busboy\n\n    try {\n      busboy = new Busboy({ headers: req.headers, limits: limits, preservePath: preservePath })\n    } catch (err) {\n      return next(err)\n    }\n\n    var appender = new FileAppender(fileStrategy, req)\n    var isDone = false\n    var readFinished = false\n    var errorOccured = false\n    var pendingWrites = new Counter()\n    var uploadedFiles = []\n\n    function done (err) {\n      if (isDone) return\n      isDone = true\n\n      req.unpipe(busboy)\n      drainStream(req)\n      busboy.removeAllListeners()\n\n      onFinished(req, function () { next(err) })\n    }\n\n    function indicateDone () {\n      if (readFinished && pendingWrites.isZero() && !errorOccured) done()\n    }\n\n    function abortWithError (uploadError) {\n      if (errorOccured) return\n      errorOccured = true\n\n      pendingWrites.onceZero(function () {\n        function remove (file, cb) {\n          storage._removeFile(req, file, cb)\n        }\n\n        removeUploadedFiles(uploadedFiles, remove, function (err, storageErrors) {\n          if (err) return done(err)\n\n          uploadError.storageErrors = storageErrors\n          done(uploadError)\n        })\n      })\n    }\n\n    function abortWithCode (code, optionalField) {\n      abortWithError(new MulterError(code, optionalField))\n    }\n\n    // handle text field data\n    busboy.on('field', function (fieldname, value, fieldnameTruncated, valueTruncated) {\n      if (fieldnameTruncated) return abortWithCode('LIMIT_FIELD_KEY')\n      if (valueTruncated) return abortWithCode('LIMIT_FIELD_VALUE', fieldname)\n\n      // Work around bug in Busboy (https://github.com/mscdex/busboy/issues/6)\n      if (limits && limits.hasOwnProperty('fieldNameSize')) {\n        if (fieldname.length > limits.fieldNameSize) return abortWithCode('LIMIT_FIELD_KEY')\n      }\n\n      appendField(req.body, fieldname, value)\n    })\n\n    // handle files\n    busboy.on('file', function (fieldname, fileStream, filename, encoding, mimetype) {\n      // don't attach to the files object, if there is no file\n      if (!filename) return fileStream.resume()\n\n      // Work around bug in Busboy (https://github.com/mscdex/busboy/issues/6)\n      if (limits && limits.hasOwnProperty('fieldNameSize')) {\n        if (fieldname.length > limits.fieldNameSize) return abortWithCode('LIMIT_FIELD_KEY')\n      }\n\n      var file = {\n        fieldname: fieldname,\n        originalname: filename,\n        encoding: encoding,\n        mimetype: mimetype\n      }\n\n      var placeholder = appender.insertPlaceholder(file)\n\n      fileFilter(req, file, function (err, includeFile) {\n        if (err) {\n          appender.removePlaceholder(placeholder)\n          return abortWithError(err)\n        }\n\n        if (!includeFile) {\n          appender.removePlaceholder(placeholder)\n          return fileStream.resume()\n        }\n\n        var aborting = false\n        pendingWrites.increment()\n\n        Object.defineProperty(file, 'stream', {\n          configurable: true,\n          enumerable: false,\n          value: fileStream\n        })\n\n        fileStream.on('error', function (err) {\n          pendingWrites.decrement()\n          abortWithError(err)\n        })\n\n        fileStream.on('limit', function () {\n          aborting = true\n          abortWithCode('LIMIT_FILE_SIZE', fieldname)\n        })\n\n        storage._handleFile(req, file, function (err, info) {\n          if (aborting) {\n            appender.removePlaceholder(placeholder)\n            uploadedFiles.push(extend(file, info))\n            return pendingWrites.decrement()\n          }\n\n          if (err) {\n            appender.removePlaceholder(placeholder)\n            pendingWrites.decrement()\n            return abortWithError(err)\n          }\n\n          var fileInfo = extend(file, info)\n\n          appender.replacePlaceholder(placeholder, fileInfo)\n          uploadedFiles.push(fileInfo)\n          pendingWrites.decrement()\n          indicateDone()\n        })\n      })\n    })\n\n    busboy.on('error', function (err) { abortWithError(err) })\n    busboy.on('partsLimit', function () { abortWithCode('LIMIT_PART_COUNT') })\n    busboy.on('filesLimit', function () { abortWithCode('LIMIT_FILE_COUNT') })\n    busboy.on('fieldsLimit', function () { abortWithCode('LIMIT_FIELD_COUNT') })\n    busboy.on('finish', function () {\n      readFinished = true\n      indicateDone()\n    })\n\n    req.pipe(busboy)\n  }\n}\n\nmodule.exports = makeMiddleware\n"]},"metadata":{},"sourceType":"script"}