{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/select-multi.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { getAllCats, getItemById, updateItem } from '../../actions';\n\nclass Sandbox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      catOptions: [],\n      existingCats: [],\n      updatedCats: [],\n      catsAreUpdated: false\n    };\n\n    this.handleChangeCats = newValue => {\n      if (newValue && newValue.length) {\n        this.setState({\n          updatedCats: [...newValue]\n        });\n      } else {\n        this.setState({\n          updatedCats: []\n        });\n      }\n    };\n\n    this.onClickHandlerCats = () => {\n      let updateData = {\n        _id: '5edcbc5027c3271205b2360a',\n        category_ref: []\n      };\n\n      if (this.state.updatedCats && this.state.updatedCats.length) {\n        this.state.updatedCats.map(cat => {\n          updateData.category_ref.push(cat.value);\n        });\n      }\n\n      this.props.dispatch(updateItem({ ...updateData\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getAllCats());\n    this.props.dispatch(getItemById('5edcbc5027c3271205b2360a'));\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let catOptionsFromProps = prevState.catOptions;\n    let catsFromProps = prevState.existingCats;\n\n    if (nextProps.cats && nextProps.cats.length) {\n      nextProps.cats.map((cat, i) => {\n        catOptionsFromProps.push({\n          value: cat.cat_id,\n          label: cat.title\n        });\n      });\n\n      if (nextProps.items && nextProps.items.item && nextProps.items.item.category_ref && nextProps.items.item.category_ref.length) {\n        nextProps.items.item.category_ref.map((catref, i) => {\n          let catTitle;\n          nextProps.cats.map((cat, i) => {\n            if (cat.cat_id == catref) {\n              catTitle = cat.title;\n              catsFromProps.push({\n                value: catref,\n                label: catTitle\n              });\n            }\n          });\n        });\n      }\n    }\n\n    return {\n      catOptions: catOptionsFromProps,\n      existingCats: catsFromProps,\n      catsAreUpdated: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, this.state.catsAreUpdated && this.props.items && this.props.items.item ? /*#__PURE__*/React.createElement(Select, {\n      defaultValue: this.state.existingCats,\n      isMulti: true,\n      name: \"colors\",\n      options: this.state.catOptions,\n      className: \"basic-multi-select\",\n      classNamePrefix: \"select\",\n      onChange: this.handleChangeCats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onClickHandlerCats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items,\n    cats: state.cats.cats\n  };\n}\n\nexport default connect(mapStateToProps)(Sandbox);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/select-multi.js"],"names":["React","connect","Select","getAllCats","getItemById","updateItem","Sandbox","Component","state","catOptions","existingCats","updatedCats","catsAreUpdated","handleChangeCats","newValue","length","setState","onClickHandlerCats","updateData","_id","category_ref","map","cat","push","value","props","dispatch","componentDidMount","getDerivedStateFromProps","nextProps","prevState","catOptionsFromProps","catsFromProps","cats","i","cat_id","label","title","items","item","catref","catTitle","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,QAAoD,eAApD;;AAGA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,WAAW,EAAE,EAHT;AAIJC,MAAAA,cAAc,EAAE;AAJZ,KAF0B;;AAAA,SAmDlCC,gBAnDkC,GAmDdC,QAAD,IAAc;AAC7B,UAAIA,QAAQ,IAAIA,QAAQ,CAACC,MAAzB,EAAiC;AAC7B,aAAKC,QAAL,CAAc;AACVL,UAAAA,WAAW,EAAE,CAAC,GAAGG,QAAJ;AADH,SAAd;AAGH,OAJD,MAIO;AACH,aAAKE,QAAL,CAAc;AACVL,UAAAA,WAAW,EAAE;AADH,SAAd;AAGH;AAGJ,KA/DiC;;AAAA,SAiElCM,kBAjEkC,GAiEb,MAAM;AACvB,UAAIC,UAAU,GAAG;AACbC,QAAAA,GAAG,EAAE,0BADQ;AAEbC,QAAAA,YAAY,EAAE;AAFD,OAAjB;;AAIA,UAAI,KAAKZ,KAAL,CAAWG,WAAX,IAA0B,KAAKH,KAAL,CAAWG,WAAX,CAAuBI,MAArD,EAA6D;AACzD,aAAKP,KAAL,CAAWG,WAAX,CAAuBU,GAAvB,CAA4BC,GAAG,IAAI;AAC/BJ,UAAAA,UAAU,CAACE,YAAX,CAAwBG,IAAxB,CAA6BD,GAAG,CAACE,KAAjC;AACH,SAFD;AAGH;;AACD,WAAKC,KAAL,CAAWC,QAAX,CAAoBrB,UAAU,CAAC,EAC3B,GAAGa;AADwB,OAAD,CAA9B;AAGH,KA9EiC;AAAA;;AASlCS,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWC,QAAX,CAAoBvB,UAAU,EAA9B;AACA,SAAKsB,KAAL,CAAWC,QAAX,CAAoBtB,WAAW,CAAC,0BAAD,CAA/B;AACH;;AAGD,SAAOwB,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AAElD,QAAIC,mBAAmB,GAAGD,SAAS,CAACrB,UAApC;AACA,QAAIuB,aAAa,GAAGF,SAAS,CAACpB,YAA9B;;AAEA,QAAImB,SAAS,CAACI,IAAV,IAAkBJ,SAAS,CAACI,IAAV,CAAelB,MAArC,EAA6C;AACzCc,MAAAA,SAAS,CAACI,IAAV,CAAeZ,GAAf,CAAoB,CAACC,GAAD,EAAMY,CAAN,KAAY;AAC5BH,QAAAA,mBAAmB,CAACR,IAApB,CAAyB;AACrBC,UAAAA,KAAK,EAAEF,GAAG,CAACa,MADU;AAErBC,UAAAA,KAAK,EAAEd,GAAG,CAACe;AAFU,SAAzB;AAIH,OALD;;AAOA,UAAIR,SAAS,CAACS,KAAV,IAAmBT,SAAS,CAACS,KAAV,CAAgBC,IAAnC,IAA2CV,SAAS,CAACS,KAAV,CAAgBC,IAAhB,CAAqBnB,YAAhE,IAAgFS,SAAS,CAACS,KAAV,CAAgBC,IAAhB,CAAqBnB,YAArB,CAAkCL,MAAtH,EAA+H;AAC3Hc,QAAAA,SAAS,CAACS,KAAV,CAAgBC,IAAhB,CAAqBnB,YAArB,CAAkCC,GAAlC,CAAuC,CAACmB,MAAD,EAASN,CAAT,KAAe;AAClD,cAAIO,QAAJ;AACAZ,UAAAA,SAAS,CAACI,IAAV,CAAeZ,GAAf,CAAoB,CAACC,GAAD,EAAMY,CAAN,KAAY;AAC5B,gBAAIZ,GAAG,CAACa,MAAJ,IAAcK,MAAlB,EAA0B;AACtBC,cAAAA,QAAQ,GAAGnB,GAAG,CAACe,KAAf;AACAL,cAAAA,aAAa,CAACT,IAAd,CAAmB;AACfC,gBAAAA,KAAK,EAAEgB,MADQ;AAEfJ,gBAAAA,KAAK,EAAEK;AAFQ,eAAnB;AAIH;AACJ,WARD;AASH,SAXD;AAYH;AACJ;;AACD,WAAO;AACHhC,MAAAA,UAAU,EAAEsB,mBADT;AAEHrB,MAAAA,YAAY,EAAEsB,aAFX;AAGHpB,MAAAA,cAAc,EAAE;AAHb,KAAP;AAKH;;AAgCD8B,EAAAA,MAAM,GAAG;AAGL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKlC,KAAL,CAAWI,cAAX,IAA6B,KAAKa,KAAL,CAAWa,KAAxC,IAAiD,KAAKb,KAAL,CAAWa,KAAX,CAAiBC,IAAlE,gBACG,oBAAC,MAAD;AACI,MAAA,YAAY,EAAE,KAAK/B,KAAL,CAAWE,YAD7B;AAEI,MAAA,OAAO,MAFX;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,UAJxB;AAKI,MAAA,SAAS,EAAC,oBALd;AAMI,MAAA,eAAe,EAAC,QANpB;AAOI,MAAA,QAAQ,EAAE,KAAKI,gBAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAUC,IAbN,eAeI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAqB,MAAA,OAAO,EAAE,KAAKI,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,CADJ;AAoBH;;AAvGiC;;AAwGrC;;AAGD,SAAS0B,eAAT,CAAyBnC,KAAzB,EAAgC;AAC5B,SAAO;AACH8B,IAAAA,KAAK,EAAC9B,KAAK,CAAC8B,KADT;AAEHL,IAAAA,IAAI,EAACzB,KAAK,CAACyB,IAAN,CAAWA;AAFb,GAAP;AAIH;;AAED,eAAehC,OAAO,CAAC0C,eAAD,CAAP,CAAyBrC,OAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\n\nimport { getAllCats, getItemById, updateItem } from '../../actions';\n\n\nclass Sandbox extends React.Component {\n    \n    state = {\n        catOptions: [],\n        existingCats: [],\n        updatedCats: [],\n        catsAreUpdated: false\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getAllCats());\n        this.props.dispatch(getItemById('5edcbc5027c3271205b2360a'));\n    }\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        \n        let catOptionsFromProps = prevState.catOptions;\n        let catsFromProps = prevState.existingCats;\n\n        if (nextProps.cats && nextProps.cats.length) {\n            nextProps.cats.map( (cat, i) => {\n                catOptionsFromProps.push({\n                    value: cat.cat_id,\n                    label: cat.title\n                })\n            })\n\n            if (nextProps.items && nextProps.items.item && nextProps.items.item.category_ref && nextProps.items.item.category_ref.length ) {\n                nextProps.items.item.category_ref.map( (catref, i) => {\n                    let catTitle;\n                    nextProps.cats.map( (cat, i) => {\n                        if (cat.cat_id == catref) {\n                            catTitle = cat.title;\n                            catsFromProps.push({\n                                value: catref,\n                                label: catTitle\n                            })\n                        }\n                    })\n                })\n            }\n        }\n        return {\n            catOptions: catOptionsFromProps,\n            existingCats: catsFromProps,\n            catsAreUpdated: true\n        }\n    }\n\n\n    handleChangeCats = (newValue) => {\n        if (newValue && newValue.length) {\n            this.setState({ \n                updatedCats: [...newValue]\n            });\n        } else {\n            this.setState({ \n                updatedCats: []\n            });\n        }\n\n\n    };\n\n    onClickHandlerCats = () => {\n        let updateData = {\n            _id: '5edcbc5027c3271205b2360a',\n            category_ref: []\n        };\n        if (this.state.updatedCats && this.state.updatedCats.length) {\n            this.state.updatedCats.map( cat => {\n                updateData.category_ref.push(cat.value);\n            })\n        } \n        this.props.dispatch(updateItem({\n            ...updateData\n        }))\n    }\n    \n    render() {\n\n\n        return (\n            <div>\n               \n\n                {this.state.catsAreUpdated && this.props.items && this.props.items.item ?\n                    <Select\n                        defaultValue={this.state.existingCats}\n                        isMulti\n                        name=\"colors\"\n                        options={this.state.catOptions}\n                        className=\"basic-multi-select\"\n                        classNamePrefix=\"select\"\n                        onChange={this.handleChangeCats}\n                    />\n                : null}\n\n                <button type=\"button\"onClick={this.onClickHandlerCats}>Submit</button> \n            \n            </div>\n        );\n    }\n};\n \n\nfunction mapStateToProps(state) {\n    return {\n        items:state.items,\n        cats:state.cats.cats\n    }\n}\n\nexport default connect(mapStateToProps)(Sandbox);\n\n"]},"metadata":{},"sourceType":"module"}