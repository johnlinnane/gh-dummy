{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/components/Admin/add_item.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { addItem, clearNewItem, getLatestItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions';\nimport Tags from '../../widgetsUI/tags';\n\nclass AddItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        title: '',\n        creator: '',\n        subject: '',\n        description: '',\n        source: '',\n        date_created: '',\n        contributor: '',\n        item_format: '',\n        materials: '',\n        physical_dimensions: '',\n        pages: '',\n        editor: '',\n        publisher: '',\n        further_info: '',\n        language: '',\n        reference: '',\n        rights: '',\n        file_format: '',\n        external_link: [{\n          url: '',\n          text: ''\n        }],\n        geo: {\n          address: ''\n        }\n      }\n    };\n\n    this.handleInput = (event, name, level) => {\n      // make a copy of formdata\n      const newFormdata = { ...this.state.formdata\n      };\n\n      if (level === 'external_link') {\n        newFormdata.external_link[name] = event.target.value;\n      } else if (level === 'geo') {\n        newFormdata.geo[name] = event.target.value;\n      } else {\n        newFormdata[name] = event.target.value;\n      } // copy it back to state\n\n\n      this.setState({\n        formdata: newFormdata\n      });\n    };\n\n    this.clicko = () => {\n      console.log(this.props.latest);\n    };\n\n    this.showNewItem = item => item.post ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conf_link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Cool !!\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.clicko,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"Click me\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/user/add_item_2_sel/${item.itemId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"Click to add more\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/items/${item.itemId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Click the link to see the item\")) : null;\n\n    this.createTextInput = (existing, name, placeholder, inputLabel, level) => {\n      // let string = `this.state.formdata.${variable}`;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, inputLabel), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form_element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: placeholder,\n        value: existing,\n        onChange: event => this.handleInput(event, name, level),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }))));\n    };\n\n    this.redirectUser = url => {\n      setTimeout(() => {\n        this.props.history.push(url);\n      }, 1000);\n    };\n\n    this.submitForm = e => {\n      e.preventDefault(); // console.log(this.state.formdata);\n      // dispatch an action, adding updated  formdata + the user id from the redux store\n\n      this.props.dispatch(addItem({ ...this.state.formdata,\n        ownerId: this.props.user.login.id\n      }));\n      this.props.dispatch(getLatestItem); // this.redirectUser()\n      // this.props.history.push(`/user/add_item_sel/${this.props.items.item._id}`);\n    };\n  }\n\n  componentDidMount() {} // this.props.dispatch(getAllColls())\n  // this.props.dispatch(getAllCats());\n  // this.props.dispatch(getAllSubCats());\n  // clear success message \n\n\n  componentWillUnmount() {\n    this.props.dispatch(clearNewItem());\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article edit_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, \"Add an item\"), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, this.createTextInput(this.state.formdata.title, 'title', \"Enter title\", \"Title\"), this.createTextInput(this.state.formdata.creator, 'creator', \"Enter creator\", \"Creator\"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.formdata.description,\n      onChange: event => this.handleInput(event, 'description'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    }, \"Pages\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter pages\",\n      value: this.state.formdata.pages,\n      onChange: event => this.handleInput(event, 'pages'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    })))), this.createTextInput(this.state.formdata.source, 'source', \"Enter item source\", \"Source\"), this.createTextInput(this.state.formdata.subject, 'subject', \"Subject\", \"Subject\"), this.createTextInput(this.state.formdata.date_created, 'date_created', \"Date item was created\", \"Date\"), this.createTextInput(this.state.formdata.contributor, 'contributor', \"contributor\", \"Contributor\"), this.createTextInput(this.state.formdata.item_format, 'item_format', \"The item's format\", \"Format\"), this.createTextInput(this.state.formdata.materials, 'materials', \"materials\", \"Materials\"), this.createTextInput(this.state.formdata.physical_dimensions, 'physical_dimensions', \"Physical dimensions\", \"Dimensions\"), this.createTextInput(this.state.formdata.editor, 'editor', \"editor\", \"Editor\"), this.createTextInput(this.state.formdata.publisher, 'publisher', \"publisher\", \"Publisher\"), this.createTextInput(this.state.formdata.further_info, 'further_info', \"Enter any further info, resources..\", \"Further Info\"), this.createTextInput(this.state.formdata.external_link[0].url, 'url', \"External link url\", \"URL\", 'external_link'), this.createTextInput(this.state.formdata.external_link[0].text, 'text', \"External link text\", 'Description of the link', \"external_link\"), this.createTextInput(this.state.formdata.language, 'language', \"language\", \"Language\"), this.createTextInput(this.state.formdata.reference, 'reference', \"reference\", \"Ref\"), this.createTextInput(this.state.formdata.rights, 'rights', \"rights\", \"Rights\"), this.createTextInput(this.state.formdata.geo.address, 'address', \"Item address\", \"Address\", 'geo'))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, \"Submit Item\"), // if new book exists\n    this.props.items.newitem ? this.showNewItem(this.props.items.newitem) : null));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // console.log(state); \n  return {\n    items: state.items,\n    colls: state.collections.colls,\n    cats: state.cats.cats,\n    subcats: state.cats.subcats,\n    latest: state.latest\n  };\n}\n\nexport default connect(mapStateToProps)(AddItem);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Admin/add_item.js"],"names":["React","Component","connect","Link","axios","Progress","ToastContainer","toast","addItem","clearNewItem","getLatestItem","getAllColls","getAllCats","getAllSubCats","Tags","AddItem","state","formdata","title","creator","subject","description","source","date_created","contributor","item_format","materials","physical_dimensions","pages","editor","publisher","further_info","language","reference","rights","file_format","external_link","url","text","geo","address","handleInput","event","name","level","newFormdata","target","value","setState","clicko","console","log","props","latest","showNewItem","item","post","itemId","createTextInput","existing","placeholder","inputLabel","redirectUser","setTimeout","history","push","submitForm","e","preventDefault","dispatch","ownerId","user","login","id","componentDidMount","componentWillUnmount","render","items","newitem","mapStateToProps","colls","collections","cats","subcats"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport {Progress} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport { addItem, clearNewItem, getLatestItem } from '../../actions';\nimport {getAllColls, getAllCats, getAllSubCats  } from '../../actions';\nimport Tags from '../../widgetsUI/tags';\n\n\n\n\n\nclass AddItem extends Component {\n\n\n    state = {\n        formdata:{\n            title: '',\n            creator: '',\n            subject: '',\n            description: '',\n            source: '',\n            date_created: '',\n            \n            contributor: '',\n            item_format: '',\n            materials: '',\n            physical_dimensions: '',\n            pages: '',        \n            editor: '',\n            publisher: '',\n            further_info: '',\n            language: '',\n            reference: '',\n            rights: '',\n            file_format: '',\n            external_link: [\n                {\n                    url: '',\n                    text: ''\n                }\n            ],\n            geo: {\n                address: ''\n            }\n\n        }\n    }\n\n\n    componentDidMount() {\n        // this.props.dispatch(getAllColls())\n        // this.props.dispatch(getAllCats());\n        // this.props.dispatch(getAllSubCats());\n    }\n\n\n    // clear success message \n    componentWillUnmount() {\n        this.props.dispatch(clearNewItem())\n    }\n\n    handleInput = (event, name, level) => {\n        // make a copy of formdata\n        const newFormdata = {\n            ...this.state.formdata\n        }\n\n        if (level === 'external_link') {\n            newFormdata.external_link[name] = event.target.value;\n        } else if (level === 'geo') {\n            newFormdata.geo[name] = event.target.value;\n        \n        } else {\n            newFormdata[name] = event.target.value;\n        }\n\n        // copy it back to state\n        this.setState({\n            formdata:newFormdata\n        })\n    }\n\n    clicko = () => {\n        console.log(this.props.latest)\n    }\n\n    showNewItem = (item) => (\n        item.post ?\n            <div className=\"conf_link\">\n                Cool !! \n                \n                <button onClick={this.clicko}>Click me</button>\n                <Link to={`/user/add_item_2_sel/${item.itemId}`}>\n                    Click to add more\n                </Link>\n                \n                <Link to={`/items/${item.itemId}`}>\n                    Click the link to see the item\n                </Link>\n            </div>\n        : null\n    )\n\n\n\n    createTextInput = (existing, name, placeholder, inputLabel, level) => {\n        // let string = `this.state.formdata.${variable}`;\n\n        return (\n            <tr>\n                <td>\n                    {inputLabel}\n                </td>\n                <td>\n                    <div className=\"form_element\">\n                        <input\n                            type=\"text\"\n                            placeholder={placeholder}\n                            value={existing} \n                            onChange={(event) => this.handleInput(event, name, level)}\n                        />\n                    </div>\n                </td>\n            </tr>\n        )\n    }\n\n    redirectUser = (url) => {\n        setTimeout(() => {\n            this.props.history.push(url)\n        }, 1000)\n    }\n\n\n    submitForm = (e) => {\n        e.preventDefault();\n        \n        // console.log(this.state.formdata);\n\n        // dispatch an action, adding updated  formdata + the user id from the redux store\n        this.props.dispatch(addItem({\n                ...this.state.formdata,\n                ownerId:this.props.user.login.id\n        }));\n\n        this.props.dispatch(getLatestItem);\n\n        // this.redirectUser()\n        // this.props.history.push(`/user/add_item_sel/${this.props.items.item._id}`);\n\n    }\n\n\n\n\n\n\n    render() {\n        console.log(this.props);\n\n        return (\n            <div className=\"rl_container article edit_page\">\n                <form onSubmit={this.submitForm}>\n                    \n                    {/* <h2>Add a review</h2> */}\n                    <h2>Add an item</h2>\n\n\n                    <table>\n                    <tbody>\n\n                        {this.createTextInput(this.state.formdata.title,'title', \"Enter title\", \"Title\")}\n                        {this.createTextInput(this.state.formdata.creator,'creator', \"Enter creator\", \"Creator\")}\n\n\n\n\n                        <tr>\n                            <td className=\"label\">\n                                Description\n                            </td>\n                            <td>\n                                <textarea\n                                    value={this.state.formdata.description}\n                                    onChange={(event) => this.handleInput(event, 'description')}\n                                />\n                            </td>\n                        </tr>\n\n                        \n                        <tr>\n                            <td className=\"label\">\n                                Pages\n                            </td>\n                            <td>\n                                <div className=\"form_element\">\n                                    <input\n                                        type=\"number\"\n                                        placeholder=\"Enter pages\"\n                                        value={this.state.formdata.pages} \n                                        onChange={(event) => this.handleInput(event, 'pages')}                        />\n                                </div>\n                            </td>\n                        </tr>\n\n                        {this.createTextInput(this.state.formdata.source,'source', \"Enter item source\", \"Source\")}\n                        {this.createTextInput(this.state.formdata.subject,'subject', \"Subject\", \"Subject\")}\n                        {this.createTextInput(this.state.formdata.date_created,'date_created', \"Date item was created\", \"Date\")}\n                        {this.createTextInput(this.state.formdata.contributor,'contributor', \"contributor\", \"Contributor\")}\n                        {this.createTextInput(this.state.formdata.item_format,'item_format', \"The item's format\", \"Format\")}\n                        {this.createTextInput(this.state.formdata.materials,'materials', \"materials\", \"Materials\")}\n                        {this.createTextInput(this.state.formdata.physical_dimensions,'physical_dimensions', \"Physical dimensions\", \"Dimensions\")}\n                        {this.createTextInput(this.state.formdata.editor,'editor', \"editor\", \"Editor\")}\n                        {this.createTextInput(this.state.formdata.publisher,'publisher', \"publisher\", \"Publisher\")}\n                        {this.createTextInput(this.state.formdata.further_info,'further_info', \"Enter any further info, resources..\", \"Further Info\")}\n                        \n                        {this.createTextInput(this.state.formdata.external_link[0].url,'url', \"External link url\", \"URL\", 'external_link')}\n                        {this.createTextInput(this.state.formdata.external_link[0].text,'text', \"External link text\", 'Description of the link', \"external_link\")}\n\n                        {this.createTextInput(this.state.formdata.language,'language', \"language\", \"Language\")}\n                        {this.createTextInput(this.state.formdata.reference,'reference', \"reference\", \"Ref\")}\n                        {this.createTextInput(this.state.formdata.rights,'rights', \"rights\", \"Rights\")}\n\n                        {this.createTextInput(this.state.formdata.geo.address,'address', \"Item address\", \"Address\", 'geo')}\n                    \n                        \n\n\n                    \n                    </tbody>\n                    </table>\n\n                    {/* <div className=\"form-group\">\n                        <Progress max=\"100\" color=\"success\" value={this.state.loaded} >\n                            { this.state.loaded ?\n                                <div>    \n                                    {Math.round(this.state.loaded,2)}\n                                    %\n                                </div>\n                            :null}\n                        </Progress>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <ToastContainer />\n                    </div> */}\n\n\n                    \n\n\n\n                  \n\n\n\n\n                    <button type=\"submit\">Submit Item</button>\n\n                    {\n                        // if new book exists\n                        this.props.items.newitem ?\n                            this.showNewItem(this.props.items.newitem)\n                        : null\n\n\n                    }\n\n\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    // console.log(state); \n    return {\n        items:state.items,\n        colls:state.collections.colls,\n        cats:state.cats.cats,\n        subcats:state.cats.subcats,\n        latest:state.latest\n    }\n}\n\nexport default connect(mapStateToProps)(AddItem)\n\n\n"]},"metadata":{},"sourceType":"module"}