{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { getAllColls, getItemById, updateItem } from '../../actions';\n\nclass Sandbox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // catOptions: [],\n      // selected: [],\n      // savedCats: [],\n      updated: false\n    };\n\n    this.handleChange = newValue => {\n      if (newValue && newValue.length) {\n        this.setState({\n          savedCats: [...newValue]\n        }); // newValue is not an array if empty\n      } else {\n        this.setState({\n          savedCats: []\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      let updateData = {\n        _id: '5edcbc5027c3271205b2360a',\n        category_ref: []\n      };\n\n      if (this.state.savedCats && this.state.savedCats.length) {\n        this.state.savedCats.map(cat => {\n          updateData.category_ref.push(cat.value);\n        });\n      }\n\n      this.props.dispatch(updateItem({ ...updateData\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getAllColls());\n    this.props.dispatch(getItemById('5edcbc5027c3271205b2360a'));\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let newCatOptions = prevState.catOptions;\n    let newSelected = prevState.selected; // check if props have arrived\n\n    if (nextProps.cats && nextProps.cats.length) {\n      // create list of all categories and ids\n      nextProps.cats.map((cat, i) => {\n        newCatOptions.push({\n          value: cat.cat_id,\n          label: cat.title\n        });\n      }); // chack for any categories already set\n\n      if (nextProps.items && nextProps.items.item && nextProps.items.item.category_ref && nextProps.items.item.category_ref.length) {\n        nextProps.items.item.category_ref.map((catref, i) => {\n          let catTitle;\n          nextProps.cats.map((cat, i) => {\n            if (cat.cat_id == catref) {\n              catTitle = cat.title;\n              newSelected.push({\n                value: catref,\n                label: catTitle\n              });\n            }\n          });\n        });\n      }\n    }\n\n    return {\n      catOptions: newCatOptions,\n      selected: newSelected,\n      updated: true\n    };\n  }\n\n  render() {\n    const catOptions = this.state.catOptions;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, this.props.items.item && this.props.items.item.title ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, this.props.items.item.title) : null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Collections:\"), this.state.updated ? /*#__PURE__*/React.createElement(Select, {\n      className: \"basic-single\",\n      classNamePrefix: \"select\",\n      defaultValue: colourOptions[0],\n      isDisabled: isDisabled,\n      isLoading: isLoading,\n      isClearable: isClearable,\n      isRtl: isRtl,\n      isSearchable: isSearchable,\n      name: \"color\",\n      options: colourOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}\n\n;\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  return {\n    items: state.items,\n    colls: state\n  };\n}\n\nexport default connect(mapStateToProps)(Sandbox);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js"],"names":["React","connect","Select","getAllColls","getItemById","updateItem","Sandbox","Component","state","updated","handleChange","newValue","length","setState","savedCats","onClickHandler","updateData","_id","category_ref","map","cat","push","value","props","dispatch","componentDidMount","getDerivedStateFromProps","nextProps","prevState","newCatOptions","catOptions","newSelected","selected","cats","i","cat_id","label","title","items","item","catref","catTitle","render","colourOptions","isDisabled","isLoading","isClearable","isRtl","isSearchable","mapStateToProps","console","log","colls"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\n\nimport { getAllColls, getItemById, updateItem } from '../../actions';\n\n\nclass Sandbox extends React.Component {\n    \n    state = {\n        // catOptions: [],\n        // selected: [],\n        // savedCats: [],\n        updated: false\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getAllColls());\n        this.props.dispatch(getItemById('5edcbc5027c3271205b2360a'));\n    }\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        \n        let newCatOptions = prevState.catOptions;\n        let newSelected = prevState.selected;\n        \n\n        // check if props have arrived\n        if (nextProps.cats && nextProps.cats.length) {\n            // create list of all categories and ids\n            nextProps.cats.map( (cat, i) => {\n                newCatOptions.push({\n                    value: cat.cat_id,\n                    label: cat.title\n                })\n            })\n\n            // chack for any categories already set\n            if (nextProps.items && nextProps.items.item && nextProps.items.item.category_ref && nextProps.items.item.category_ref.length ) {\n\n                nextProps.items.item.category_ref.map( (catref, i) => {\n\n                    let catTitle;\n\n                    nextProps.cats.map( (cat, i) => {\n                        if (cat.cat_id == catref) {\n                            catTitle = cat.title;\n\n                            newSelected.push({\n                                value: catref,\n                                label: catTitle\n                            })\n                        }\n                    })\n                })\n                \n            }\n        }\n        return {\n            catOptions: newCatOptions,\n            selected: newSelected,\n            updated: true\n        }\n    }\n\n\n    handleChange = (newValue) => {\n        if (newValue && newValue.length) {\n            this.setState({ \n                savedCats: [...newValue]\n            });\n        // newValue is not an array if empty\n        } else {\n            this.setState({ \n                savedCats: []\n            });\n        }\n\n\n    };\n\n    onClickHandler = () => {\n\n        let updateData = {\n            _id: '5edcbc5027c3271205b2360a',\n            category_ref: []\n        };\n\n        if (this.state.savedCats && this.state.savedCats.length) {\n            this.state.savedCats.map( cat => {\n                updateData.category_ref.push(cat.value);\n            })\n        } \n \n        this.props.dispatch(updateItem({\n            ...updateData\n        }))\n    }\n    \n    render() {\n        \n        const catOptions = this.state.catOptions;\n\n        return (\n            <div>\n                {this.props.items.item && this.props.items.item.title ?\n                    <h2>{this.props.items.item.title}</h2>\n                : null }\n\n                <p>Collections:</p>\n                    \n                {this.state.updated ?\n                    <Select\n                        className=\"basic-single\"\n                        classNamePrefix=\"select\"\n                        defaultValue={colourOptions[0]}\n                        isDisabled={isDisabled}\n                        isLoading={isLoading}\n                        isClearable={isClearable}\n                        isRtl={isRtl}\n                        isSearchable={isSearchable}\n                        name=\"color\"\n                        options={colourOptions}\n                    />\n                : null}\n\n                <button type=\"button\"onClick={this.onClickHandler}>Submit</button> \n            \n            </div>\n        );\n    }\n};\n \n\nfunction mapStateToProps(state) {\n    console.log(state);\n    return {\n        items:state.items,\n        colls:state\n    }\n}\n\nexport default connect(mapStateToProps)(Sandbox);\n\n"]},"metadata":{},"sourceType":"module"}