{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'; // import axios from 'axios';\n// import { ToastContainer, toast } from 'react-toastify';\n\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions';\n\nclass EditItem extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        _id: this.props.match.params.id,\n        title: '',\n        creator: '',\n        subject: '',\n        description: '',\n        source: '',\n        date_created: '',\n        contributor: '',\n        item_format: '',\n        materials: '',\n        physical_dimensions: '',\n        pages: '',\n        editor: '',\n        publisher: '',\n        further_info: '',\n        language: '',\n        reference: '',\n        rights: '',\n        file_format: '',\n        external_link: [{\n          url: '',\n          text: ''\n        }],\n        geo: {\n          address: ''\n        }\n      }\n    };\n\n    this.handleInput = (event, name, level) => {\n      // make a copy of formdata\n      const newFormdata = { ...this.state.formdata\n      };\n\n      if (level === 'external_link') {\n        newFormdata.external_link[name] = event.target.value;\n      } else if (level === 'geo') {\n        newFormdata.geo[name] = event.target.value;\n      } else {\n        newFormdata[name] = event.target.value;\n      } // copy it back to state\n\n\n      this.setState({\n        formdata: newFormdata\n      }); // console.log(newFormdata);\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.state.formdata._id));\n      this.props.history.push('/user/all-items');\n    };\n\n    this.redirectUser = () => {\n      setTimeout(() => {\n        this.props.history.push('/user/all-items');\n      }, 1000);\n    };\n\n    this.submitForm = e => {\n      e.preventDefault(); // console.log(this.state.formdata);\n\n      this.props.dispatch(updateItem({ ...this.state.formdata\n      }));\n    };\n\n    this.createTextInput = (stateVar, name, placeholder, label, level) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, label), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form_element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: placeholder,\n        defaultValue: stateVar,\n        onChange: event => this.handleInput(event, name, level),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }\n      }))));\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n\n    this.renderForm = () => {\n      // console.log(this.state);\n      let items = this.props.items;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }\n      }, items.updateItem ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"edit_confirm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }\n      }, \"Post updated, \", /*#__PURE__*/React.createElement(Link, {\n        to: `/items/${items.item._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 39\n        }\n      }, \"Click here to see your post\")) : null, items.itemDeleted ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"red_tag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }\n      }, \"Item Deleted\", this.redirectUser()) : null, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.submitForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }\n      }, \"Edit item:\"), /*#__PURE__*/React.createElement(\"img\", {\n        src: `/images/items/${items.item._id}/sq_thumbnail/0.jpg`,\n        alt: \"Item\",\n        onError: this.addDefaultImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }\n      }, this.createTextInput(items.item.title, 'title', \"Enter title\", \"Title\"), this.createTextInput(items.item.creator, 'creator', \"Enter creator\", \"Creator\"), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 25\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        value: items.item.description,\n        onChange: event => this.handleInput(event, 'description'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }\n      }, \"Pages\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form_element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter pages\",\n        value: items.item.pages,\n        onChange: event => this.handleInput(event, 'pages'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 33\n        }\n      })))), this.createTextInput(items.item.source, 'source', \"Enter item source\", \"Source\"), this.createTextInput(items.item.subject, 'subject', \"Subject\", \"Subject\"), this.createTextInput(items.item.date_created, 'date_created', \"Date item was created\", \"Date\"), this.createTextInput(items.item.contributor, 'contributor', \"contributor\", \"Contributor\"), this.createTextInput(items.item.item_format, 'item_format', \"The item's format\", \"Format\"), this.createTextInput(items.item.materials, 'materials', \"materials\", \"Materials\"), this.createTextInput(items.item.physical_dimensions, 'physical_dimensions', \"Physical dimensions\", \"Dimensions\"), this.createTextInput(items.item.editor, 'editor', \"editor\", \"Editor\"), this.createTextInput(items.item.publisher, 'publisher', \"publisher\", \"Publisher\"), this.createTextInput(items.item.further_info, 'further_info', \"Enter any further info, resources..\", \"Further Info\"), this.createTextInput(items.item.external_link[0].url, 'url', \"External link url\", \"URL\"), this.createTextInput(items.item.external_link[0].text, 'text', \"External link text\", 'Description of the link', \"Link Description\"), this.createTextInput(items.item.language, 'language', \"language\", \"Language\"), this.createTextInput(items.item.reference, 'reference', \"reference\", \"Ref\"), this.createTextInput(items.item.rights, 'rights', \"rights\", \"Rights\"), this.createTextInput(items.item.geo.address, 'address', \"Item address\", \"Address\"))), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 17\n        }\n      }, \"Submit Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"delete_post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"button\",\n        onClick: e => {\n          if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }\n      }, \"Delete item\"))));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById(this.props.match.params.id));\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearItem());\n  } // baseline export before adding new stuff\n\n\n  componentDidUpdate(prevProps) {\n    // console.log(prevProps);\n    let item = this.props.items.item; // console.log(this.state.formdata);\n    // console.log(book);\n    // can create a updatedFormdata variable, but no need\n\n    if (this.props.items !== prevProps.items) {\n      let dataForState = {\n        formdata: {\n          _id: item._id,\n          title: item.title,\n          //\n          creator: item.creator,\n          //\n          description: item.description,\n          //\n          pages: item.pages,\n          //\n          collection_id: item.collection_id,\n          //\n          source: item.source,\n          //\n          subject: item.subject,\n          date_created: item.date_created,\n          tags: item.tags,\n          contributor: item.contributor,\n          item_format: item.item_format,\n          materials: item.materials,\n          physical_dimensions: item.physical_dimensions,\n          editor: item.editor,\n          publisher: item.publisher,\n          further_info: item.further_info,\n          language: item.language,\n          reference: item.reference,\n          rights: item.rights,\n          file_format: item.file_format,\n          // address: item.geo.address,\n          category_ref: item.category_ref,\n          subcategory_ref: item.subcategory_ref\n        }\n      };\n      this.setState({ ...dataForState\n      }); // console.log(item);\n\n      if (item.external_link && item.external_link[0].url) {\n        // console.log('yes');\n        dataForState = {\n          formdata: { ...dataForState.formdata,\n            external_link: {\n              url: item.external_link[0].url,\n              text: item.external_link[0].text\n            }\n          }\n        }; // console.log(dataForState);\n        // console.log(this.state.formdata.external_link);\n\n        this.setState({\n          dataForState\n        });\n      } // console.log(this.state);\n\n\n      if (item.geo && item.geo.address) {\n        // console.log(item.external_link[0].url);\n        dataForState = {\n          formdata: { ...dataForState.formdata,\n            geo: {\n              address: item.geo.address\n            }\n          }\n        };\n        this.setState({ ...dataForState // formdata:{\n          //     ...this.state.formdata,\n          //     geo: {\n          //         address: item.geo.address\n          //     }\n          // }\n\n        });\n      } // console.log(this.state);\n\n    }\n  }\n\n  render() {\n    let items = this.props.items; // console.log(this.props);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article edit_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 13\n      }\n    }, items.item ? this.renderForm() : null);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items\n  };\n}\n\nexport default connect(mapStateToProps)(EditItem);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js"],"names":["React","PureComponent","connect","Link","Select","CreatableSelect","getItemById","updateItem","clearItem","deleteItem","getAllColls","getAllCats","getAllSubCats","EditItem","state","formdata","_id","props","match","params","id","title","creator","subject","description","source","date_created","contributor","item_format","materials","physical_dimensions","pages","editor","publisher","further_info","language","reference","rights","file_format","external_link","url","text","geo","address","handleInput","event","name","level","newFormdata","target","value","setState","deletePost","dispatch","history","push","redirectUser","setTimeout","submitForm","e","preventDefault","createTextInput","stateVar","placeholder","label","addDefaultImg","ev","newImg","src","renderForm","items","item","itemDeleted","window","confirm","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","dataForState","collection_id","tags","category_ref","subcategory_ref","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n// import axios from 'axios';\n// import { ToastContainer, toast } from 'react-toastify';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\n\n\n\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats  } from '../../actions';\n\n\n\nclass EditItem extends PureComponent {\n\n\n    state = {\n        formdata:{\n            _id:this.props.match.params.id,\n            title: '',\n            creator: '',\n            subject: '',\n            description: '',\n            source: '',\n            date_created: '',\n            \n            contributor: '',\n            item_format: '',\n            materials: '',\n            physical_dimensions: '',\n            pages: '',        \n            editor: '',\n            publisher: '',\n            further_info: '',\n            language: '',\n            reference: '',\n            rights: '',\n            file_format: '',\n            external_link: [\n                {\n                    url: '',\n                    text: ''\n                }\n            ],\n            geo: {\n                address: ''\n            }\n        }\n\n\n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(getItemById(this.props.match.params.id))\n\n    }\n\n\n    componentWillUnmount() {\n        this.props.dispatch(clearItem())\n    }\n\n    // baseline export before adding new stuff\n    componentDidUpdate(prevProps) {\n        // console.log(prevProps);\n        let item = this.props.items.item;\n        // console.log(this.state.formdata);\n\n        \n        // console.log(book);\n\n        // can create a updatedFormdata variable, but no need\n        if (this.props.items !== prevProps.items) {\n\n            let dataForState = {\n                formdata:{\n                    _id:item._id,\n                    title:item.title,  //\n                    creator:item.creator,  //\n                    description:item.description,  //\n                    pages:item.pages,  //\n                    collection_id:item.collection_id,  //\n                    source:item.source,   //\n\n                    subject: item.subject,\n                    date_created: item.date_created,\n                    tags: item.tags,\n                    contributor: item.contributor,\n                    item_format: item.item_format,\n                    materials: item.materials,\n                    physical_dimensions: item.physical_dimensions,\n                    editor: item.editor,\n                    publisher: item.publisher,\n                    further_info: item.further_info,\n                    language: item.language,\n                    reference: item.reference,\n                    rights: item.rights,\n                    file_format: item.file_format,\n                    // address: item.geo.address,\n                    category_ref: item.category_ref,\n                    subcategory_ref: item.subcategory_ref\n                }\n            }\n\n            this.setState({\n                ...dataForState\n            })\n            // console.log(item);\n            if (item.external_link && item.external_link[0].url) {\n                // console.log('yes');\n\n                dataForState = {\n                    formdata: {\n                        ...dataForState.formdata,\n                        external_link: {\n                            url: item.external_link[0].url,\n                            text: item.external_link[0].text\n                        }\n                    }\n                }\n\n                // console.log(dataForState);\n\n                // console.log(this.state.formdata.external_link);\n                this.setState({\n                    dataForState\n                    \n                })\n\n            } \n\n            // console.log(this.state);\n\n\n            if (item.geo && item.geo.address) {\n                // console.log(item.external_link[0].url);\n            \n                dataForState = {\n                    formdata: {\n                        ...dataForState.formdata,\n                        geo: {\n                            address: item.geo.address\n                        }\n                    }\n                }\n            \n            \n            \n                this.setState({\n                    ...dataForState\n                    // formdata:{\n                    //     ...this.state.formdata,\n                    //     geo: {\n                    //         address: item.geo.address\n                    //     }\n                    // }\n                })\n            }\n\n            // console.log(this.state);\n            \n\n            \n        }\n\n    }\n\n\n    handleInput = (event, name, level) => {\n\n        \n        // make a copy of formdata\n        const newFormdata = {\n            ...this.state.formdata\n        }\n\n\n        if (level === 'external_link') {\n            newFormdata.external_link[name] = event.target.value;\n        } else if (level === 'geo') {\n            newFormdata.geo[name] = event.target.value;\n        } else {\n            newFormdata[name] = event.target.value;\n        }\n\n\n        // copy it back to state\n        this.setState({\n            formdata: newFormdata\n\n        })\n        // console.log(newFormdata);\n    }\n\n\n\n\n    \n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.state.formdata._id));\n        this.props.history.push('/user/all-items');\n    }\n\n\n\n    redirectUser = () => {\n        setTimeout(() => {\n            this.props.history.push('/user/all-items')\n        }, 1000)\n    }\n\n\n\n\n\n\n    submitForm = (e) => {\n        e.preventDefault();\n        // console.log(this.state.formdata);\n\n        this.props.dispatch(updateItem({\n                ...this.state.formdata\n            }\n        ))\n    }\n\n    \n\n\n\n    createTextInput = (stateVar, name, placeholder, label, level) => {\n\n        return (\n            <tr>\n                <td>\n                    {label}\n                </td>\n                <td>\n                    <div className=\"form_element\">\n                        <input\n                            type=\"text\"\n                            placeholder={placeholder}\n                            defaultValue={stateVar} \n                            onChange={(event) => this.handleInput(event, name, level)}\n                        />\n                    </div>\n                </td>\n\n            </tr>\n        )\n    }\n\n\n\n    // ****************************************************\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    } \n\n\n    renderForm = () => {\n        // console.log(this.state);\n\n        let items = this.props.items;\n\n        return (\n            <div>\n            {\n                items.updateItem ?\n                    <div className=\"edit_confirm\">\n                        Post updated, <Link to={`/items/${items.item._id}`}>\n                            Click here to see your post\n                        </Link>\n                    </div>\n                : null\n            }\n\n\n            {\n                items.itemDeleted ?\n                    <div className=\"red_tag\">\n                        Item Deleted    \n                        {this.redirectUser()}\n                    </div>\n\n                : null\n            }\n\n\n            <form onSubmit={this.submitForm}>\n                \n                <h2>Edit item:</h2>\n\n                <img src={`/images/items/${items.item._id}/sq_thumbnail/0.jpg`} alt=\"Item\" onError={this.addDefaultImg}/>\n\n                <table>\n                <tbody>\n                \n                    {this.createTextInput(items.item.title,'title', \"Enter title\", \"Title\")}\n                    {this.createTextInput(items.item.creator,'creator', \"Enter creator\", \"Creator\")}\n\n\n\n\n                    <tr>\n                        <td className=\"label\">\n                            Description\n                        </td>\n                        <td>\n                            <textarea\n                                value={items.item.description}\n                                onChange={(event) => this.handleInput(event, 'description')}\n                            />\n                        </td>\n                    </tr>\n\n                    \n                    <tr>\n                        <td className=\"label\">\n                            Pages\n                        </td>\n                        <td>\n                            <div className=\"form_element\">\n                                <input\n                                    type=\"number\"\n                                    placeholder=\"Enter pages\"\n                                    value={items.item.pages} \n                                    onChange={(event) => this.handleInput(event, 'pages')}                        />\n                            </div>\n                        </td>\n                    </tr>\n\n                    {this.createTextInput(items.item.source,'source', \"Enter item source\", \"Source\")}\n                    {this.createTextInput(items.item.subject,'subject', \"Subject\", \"Subject\")}\n                    {this.createTextInput(items.item.date_created,'date_created', \"Date item was created\", \"Date\")}\n                \n                    {this.createTextInput(items.item.contributor,'contributor', \"contributor\", \"Contributor\")}\n                    {this.createTextInput(items.item.item_format,'item_format', \"The item's format\", \"Format\")}\n                    {this.createTextInput(items.item.materials,'materials', \"materials\", \"Materials\")}\n                    {this.createTextInput(items.item.physical_dimensions,'physical_dimensions', \"Physical dimensions\", \"Dimensions\")}\n                    {this.createTextInput(items.item.editor,'editor', \"editor\", \"Editor\")}\n                    {this.createTextInput(items.item.publisher,'publisher', \"publisher\", \"Publisher\")}\n                    {this.createTextInput(items.item.further_info,'further_info', \"Enter any further info, resources..\", \"Further Info\")}\n                    \n                    {this.createTextInput(items.item.external_link[0].url,'url', \"External link url\", \"URL\")}\n                    {this.createTextInput(items.item.external_link[0].text,'text', \"External link text\", 'Description of the link', \"Link Description\")}\n\n                    {this.createTextInput(items.item.language,'language', \"language\", \"Language\")}\n                    {this.createTextInput(items.item.reference,'reference', \"reference\", \"Ref\")}\n                    {this.createTextInput(items.item.rights,'rights', \"rights\", \"Rights\")}\n                    {this.createTextInput(items.item.geo.address,'address', \"Item address\", \"Address\")}\n                    \n                </tbody>\n                </table>\n\n                <button type=\"submit\">Submit Edit</button>\n                \n                <div className=\"delete_post\">\n                    <div className=\"button\" \n                        onClick={(e) => { if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e) } }>\n                        Delete item\n                    </div>\n                </div>\n\n            </form>\n            </div>\n        )\n    }\n\n\n    render() {\n\n        let items = this.props.items;\n        // console.log(this.props);\n\n        return (\n            \n            <div className=\"rl_container article edit_page\">\n                { items.item ?    \n                    this.renderForm()\n                : null }\n            </div>\n            \n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items:state.items\n    }\n}\n\nexport default connect(mapStateToProps)(EditItem)\n\n\n"]},"metadata":{},"sourceType":"module"}