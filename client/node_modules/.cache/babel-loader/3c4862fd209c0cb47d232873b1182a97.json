{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'; // create alot of actions to bring in the book info\n// import { getBook, updateBook, clearBook, deleteBook } from '../../actions';\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\n\nclass EditItem extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        // submit id to find post\n        _id: this.props.match.params.id,\n        title: '',\n        //\n        creator: '',\n        //\n        subject: '',\n        description: '',\n        //\n        source: '',\n        //\n        date_created: '',\n        tags: '',\n        contributor: '',\n        collection_id: '',\n        //\n        item_format: '',\n        materials: '',\n        physical_dimensions: '',\n        pages: '',\n        //\n        editor: '',\n        publisher: '',\n        further_info: '',\n        external_link: '',\n        language: '',\n        reference: '',\n        rights: '',\n        file_format: '',\n        address: '',\n        category_ref: '',\n        subcategory_ref: ''\n      }\n    };\n\n    this.handleInput = (event, name) => {\n      // make a copy of formdata\n      const newFormdata = { ...this.state.formdata\n      }; // populate the copy with the input value\n\n      newFormdata[name] = event.target.value; // copy it back to state\n\n      this.setState({\n        formdata: newFormdata\n      });\n    };\n\n    this.submitForm = e => {\n      e.preventDefault(); // console.log(this.state.formdata);\n\n      this.props.dispatch(updateItem(this.state.formdata));\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.props.match.params.id));\n      this.props.history.push('/user/all-items');\n    };\n\n    this.redirectUser = () => {\n      setTimeout(() => {\n        this.props.history.push('/user/all-items');\n      }, 1000);\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById(this.props.match.params.id));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // console.log(nextProps);\n    let item = nextProps.items.item; // console.log(book);\n    // can create a updatedFormdata variable, but no need\n\n    this.setState({\n      formdata: {\n        _id: item._id,\n        title: item.title,\n        //\n        creator: item.creator,\n        //\n        description: item.description,\n        //\n        pages: item.pages,\n        //\n        collection_id: item.collection_id,\n        //\n        source: item.source,\n        //\n        subject: item.subject,\n        date_created: item.date_created,\n        tags: item.tags,\n        contributor: item.contributor,\n        item_format: item.item_format,\n        materials: item.materials,\n        physical_dimensions: item.physical_dimensions,\n        editor: item.editor,\n        publisher: item.publisher,\n        further_info: item.further_info,\n        external_link: item.external_link,\n        language: item.language,\n        reference: item.reference,\n        rights: item.rights,\n        file_format: item.file_format,\n        address: item.address,\n        category_ref: item.category_ref,\n        subcategory_ref: item.subcategory_ref\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearItem());\n  }\n\n  render() {\n    // console.log(this.props);\n    let items = this.props.items;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, items.updateItem ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, \"Post updated, \", /*#__PURE__*/React.createElement(Link, {\n      to: `/items/${items.item._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 43\n      }\n    }, \"Click here to see your post\")) : null, items.itemDeleted ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red_tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, \"Item Deleted\", this.redirectUser()) : null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Edit Item\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter title\",\n      value: this.state.formdata.title,\n      onChange: event => this.handleInput(event, 'title'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter creator\",\n      value: this.state.formdata.creator,\n      onChange: event => this.handleInput(event, 'creator'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.formdata.description,\n      onChange: event => this.handleInput(event, 'description'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter pages\",\n      value: this.state.formdata.pages,\n      onChange: event => this.handleInput(event, 'pages'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.formdata.element_id,\n      onChange: event => this.handleInput(event, 'element_id'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      val: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      val: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      val: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      val: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      val: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }\n    }, \"5\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter source\",\n      value: this.state.formdata.source,\n      onChange: event => this.handleInput(event, 'source'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, \"Submit Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"delete_post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: this.deletePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, \"Delete item\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // console.log(state); \n  return {\n    items: state.items\n  };\n}\n\nexport default connect(mapStateToProps)(EditItem);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item.js"],"names":["React","PureComponent","connect","Link","getItemById","updateItem","clearItem","deleteItem","EditItem","state","formdata","_id","props","match","params","id","title","creator","subject","description","source","date_created","tags","contributor","collection_id","item_format","materials","physical_dimensions","pages","editor","publisher","further_info","external_link","language","reference","rights","file_format","address","category_ref","subcategory_ref","handleInput","event","name","newFormdata","target","value","setState","submitForm","e","preventDefault","dispatch","deletePost","history","push","redirectUser","setTimeout","componentDidMount","componentWillReceiveProps","nextProps","item","items","componentWillUnmount","render","itemDeleted","element_id","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\n// create alot of actions to bring in the book info\n// import { getBook, updateBook, clearBook, deleteBook } from '../../actions';\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\n\n\n\nclass EditItem extends PureComponent {\n\n\n    state = {\n        formdata:{\n            // submit id to find post\n            _id:this.props.match.params.id,\n            title: '',  //\n            creator: '',  //\n            subject: '',\n            description: '',  //\n            source: '',  //\n            date_created: '',\n            tags: '',\n            contributor: '',\n            collection_id: '',       //\n            item_format: '',\n            materials: '',\n            physical_dimensions: '',\n            pages: '',          //\n            editor: '',\n            publisher: '',\n            further_info: '',\n            external_link: '',\n            language: '',\n            reference: '',\n            rights: '',\n            file_format: '',\n            address: '',\n            category_ref: '',\n            subcategory_ref: ''\n        }\n    }\n\n\n    handleInput = (event, name) => {\n        // make a copy of formdata\n        const newFormdata = {\n            ...this.state.formdata\n        }\n\n        // populate the copy with the input value\n        newFormdata[name] = event.target.value;\n\n        // copy it back to state\n        this.setState({\n            formdata:newFormdata\n        })\n    }\n\n\n    submitForm = (e) => {\n        e.preventDefault();\n        // console.log(this.state.formdata);\n\n        this.props.dispatch(updateItem(this.state.formdata))\n    }\n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.props.match.params.id));\n        this.props.history.push('/user/all-items');\n    }\n\n\n\n    redirectUser = () => {\n        setTimeout(() => {\n            this.props.history.push('/user/all-items')\n        }, 1000)\n    }\n\n\n    componentDidMount() {\n\n        this.props.dispatch(getItemById(this.props.match.params.id))\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        // console.log(nextProps);\n        let item = nextProps.items.item;\n        \n        // console.log(book);\n\n        // can create a updatedFormdata variable, but no need\n        \n        this.setState({\n            formdata:{\n                _id:item._id,\n                title:item.title,  //\n                creator:item.creator,  //\n                description:item.description,  //\n                pages:item.pages,  //\n                collection_id:item.collection_id,  //\n                source:item.source,   //\n\n                subject: item.subject,\n                date_created: item.date_created,\n                tags: item.tags,\n                contributor: item.contributor,\n                item_format: item.item_format,\n                materials: item.materials,\n                physical_dimensions: item.physical_dimensions,\n                editor: item.editor,\n                publisher: item.publisher,\n                further_info: item.further_info,\n                external_link: item.external_link,\n                language: item.language,\n                reference: item.reference,\n                rights: item.rights,\n                file_format: item.file_format,\n                address: item.address,\n                category_ref: item.category_ref,\n                subcategory_ref: item.subcategory_ref\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.props.dispatch(clearItem())\n    }\n\n    render() {\n        // console.log(this.props);\n\n        let items = this.props.items;\n\n        return (\n            <div className=\"rl_container article\">\n\n                {\n                    items.updateItem ?\n                        <div className=\"edit_confirm\">\n                            Post updated, <Link to={`/items/${items.item._id}`}>\n                                Click here to see your post\n                            </Link>\n                        </div>\n                    : null\n                }\n\n\n                {\n                    items.itemDeleted ?\n                        <div className=\"red_tag\">\n                            Item Deleted\n                            {this.redirectUser()}\n                        </div>\n\n                    : null\n                }\n\n\n                <form onSubmit={this.submitForm}>\n                    \n                    <h2>Edit Item</h2>\n\n                    <div className=\"form_element\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter title\"\n                            value={this.state.formdata.title} \n                            onChange={(event) => this.handleInput(event, 'title')}\n                        />\n                    </div>\n\n                    <div className=\"form_element\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter creator\"\n                            value={this.state.formdata.creator} \n                            onChange={(event) => this.handleInput(event, 'creator')}    \n                        />\n                    </div>\n\n\n                    <textarea\n                        value={this.state.formdata.description}\n                        onChange={(event) => this.handleInput(event, 'description')}\n                    />\n\n\n                    <div className=\"form_element\">\n                        <input\n                            type=\"number\"\n                            placeholder=\"Enter pages\"\n                            value={this.state.formdata.pages} \n                            onChange={(event) => this.handleInput(event, 'pages')}                        />\n                    </div>\n\n                    <div className=\"form_element\">\n                        <select\n                            value={this.state.formdata.element_id}\n                            onChange={(event) => this.handleInput(event, 'element_id')}\n                        >\n                            <option val=\"1\">1</option>\n                            <option val=\"2\">2</option>\n                            <option val=\"3\">3</option>\n                            <option val=\"4\">4</option>\n                            <option val=\"5\">5</option>\n\n                        </select>\n                    </div>\n\n\n                    <div className=\"form_element\">\n                        <input\n                            type=\"number\"\n                            placeholder=\"Enter source\"\n                            value={this.state.formdata.source} \n                            onChange={(event) => this.handleInput(event, 'source')}                        />\n                    </div>\n\n\n                    <button type=\"submit\">Submit Edit</button>\n                    \n                    <div className=\"delete_post\">\n                        <div className=\"button\" onClick={this.deletePost}>\n                            Delete item\n                        </div>\n\n                    </div>\n\n\n\n\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    // console.log(state); \n    return {\n        items:state.items\n    }\n}\n\nexport default connect(mapStateToProps)(EditItem)\n\n\n"]},"metadata":{},"sourceType":"module"}