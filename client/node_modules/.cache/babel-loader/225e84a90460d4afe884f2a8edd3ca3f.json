{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/AdminSection/admin_info.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getInfoText, updateInfoText } from '../../actions';\n\nclass AdminInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        heading_1: '',\n        heading_2: '',\n        heading_3: '',\n        heading_4: '',\n        paragraph_1: '',\n        paragraph_2: '',\n        paragraph_3: '',\n        paragraph_4: ''\n      }\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {\n        this.setState({\n          selectedFile: files\n        });\n      }\n    };\n\n    this.onClickHandler = number => {\n      const data = new FormData();\n\n      if (this.state.selectedFile) {\n        for (var x = 0; x < this.state.selectedFile.length; x++) {\n          data.append('file', this.state.selectedFile[x]);\n        } // HOST-SELECT\n\n\n        axios.post(`http://localhost:8000/upload-info/${number}`, data, {\n          // axios.post(`http://64.227.34.134:8000/upload-info/${number}`, data, { \n          // receive two parameter endpoint url ,form data \n          onUploadProgress: ProgressEvent => {\n            this.setState({\n              loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n            });\n          }\n        }).then(res => {\n          // then print response status\n          // console.log(res.config.data.id);\n          // console.log(res.statusText);\n          console.log(res);\n          toast.success('upload success');\n          alert('Files uploaded successfully');\n        }).catch(err => {\n          toast.error('upload fail');\n        });\n      } // this.redirectUser(`/items/${this.props.items.item._id}`)\n\n    };\n\n    this.maxSelectFile = event => {\n      // console.log(event);\n      let files = event.target.files; // create file object\n\n      if (files.length > 1) {\n        const msg = 'Only 1 image can be uploaded at a time';\n        event.target.value = null; // discard selected file\n\n        console.log(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = ''; // list allow mime type\n\n      const types = ['image/png', 'image/jpeg', 'image/gif']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // loop create toast massage\n        event.target.value = null;\n        toast.error(err[z]);\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 15000;\n      let err = \"\";\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err += files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n\n    this.cancel = () => {\n      this.props.history.push(`/admin`);\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getInfoText());\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props != prevProps) {\n      const infotext = this.props.infotext;\n      let formdata = {\n        heading_1: infotext.heading_1,\n        heading_2: infotext.heading_2,\n        heading_3: infotext.heading_3,\n        heading_4: infotext.heading_4,\n        paragraph_1: infotext.paragraph_1,\n        paragraph_2: infotext.paragraph_2,\n        paragraph_3: infotext.paragraph_3,\n        paragraph_4: infotext.paragraph_4\n      };\n      this.setState({\n        formdata\n      });\n    }\n  } // *************** UPLOAD LOGIC ********************\n\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, \"Edit Info Page\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 33\n      }\n    }, \"Paragraph 1 Heading\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Paragraph 1 Heading\",\n      defaultValue: this.state.formdata.heading_1,\n      onChange: event => this.handleInput(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, \"Paragraph 1 Body\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      placeholder: \"Paragraph 1 Content\",\n      defaultValue: this.state.formdata.paragraph_1,\n      onChange: event => this.handleInput(event),\n      rows: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }\n    }, \"Paragraph 1 Image\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `/images/info/1.jpg`,\n      onError: this.addDefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: () => {\n        this.onClickHandler(1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 41\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 33\n      }\n    }, \"Paragraph 2 Heading\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Paragraph 2 Heading\",\n      defaultValue: this.state.formdata.heading_2,\n      onChange: event => this.handleInput(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 33\n      }\n    }, \"Paragraph 2 Body\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      placeholder: \"Paragraph 2 Content\",\n      defaultValue: this.state.formdata.paragraph_2,\n      onChange: event => this.handleInput(event),\n      rows: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 33\n      }\n    }, \"Paragraph 2 Image\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `/images/info/2.jpg`,\n      onError: this.addDefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: () => {\n        this.onClickHandler(2);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 41\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 33\n      }\n    }, \"Paragraph 3 Heading\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Paragraph 3 Heading\",\n      defaultValue: this.state.formdata.heading_3,\n      onChange: event => this.handleInput(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 33\n      }\n    }, \"Paragraph 3 Body\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      placeholder: \"Paragraph 3 Content\",\n      defaultValue: this.state.formdata.paragraph_3,\n      onChange: event => this.handleInput(event),\n      rows: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 33\n      }\n    }, \"Paragraph 3 Image\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `/images/info/3.jpg`,\n      onError: this.addDefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: () => {\n        this.onClickHandler(3);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 41\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 33\n      }\n    }, \"Paragraph 4 Heading\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Paragraph 4 Heading\",\n      defaultValue: this.state.formdata.heading_4,\n      onChange: event => this.handleInput(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 33\n      }\n    }, \"Paragraph 4 Body\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      placeholder: \"Paragraph 4 Content\",\n      defaultValue: this.state.formdata.paragraph_4,\n      onChange: event => this.handleInput(event),\n      rows: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 33\n      }\n    }, \"Paragraph 4 Image\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `/images/info/4.jpg`,\n      onError: this.addDefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: () => {\n        this.onClickHandler(4);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 41\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 37\n      }\n    }, \"Save Changes\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 37\n      }\n    }, \"Cancel\"))))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // console.log(state);\n  return {\n    infotext: state.infos.text\n  };\n}\n\nexport default connect(mapStateToProps)(AdminInfo);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/AdminSection/admin_info.js"],"names":["React","Component","connect","axios","ToastContainer","toast","getInfoText","updateInfoText","AdminInfo","state","formdata","heading_1","heading_2","heading_3","heading_4","paragraph_1","paragraph_2","paragraph_3","paragraph_4","onChangeHandler","event","files","target","maxSelectFile","checkMimeType","setState","selectedFile","onClickHandler","number","data","FormData","x","length","append","post","onUploadProgress","ProgressEvent","loaded","total","then","res","console","log","success","alert","catch","err","error","msg","value","types","every","type","z","checkFileSize","size","addDefaultImg","ev","newImg","src","cancel","props","history","push","componentDidMount","dispatch","componentDidUpdate","prevProps","prevState","infotext","render","submitForm","handleInput","mapStateToProps","infos","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AAGA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,eAA5C;;AAIA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAG9BQ,KAH8B,GAGvB;AACHC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,SAAS,EAAE,EADL;AAENC,QAAAA,SAAS,EAAE,EAFL;AAGNC,QAAAA,SAAS,EAAE,EAHL;AAINC,QAAAA,SAAS,EAAE,EAJL;AAKNC,QAAAA,WAAW,EAAE,EALP;AAMNC,QAAAA,WAAW,EAAE,EANP;AAONC,QAAAA,WAAW,EAAE,EAPP;AAQNC,QAAAA,WAAW,EAAE;AARP;AADP,KAHuB;;AAAA,SAmD9BC,eAnD8B,GAmDXC,KAAD,IAAW;AAGzB,UAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;;AAEA,UAAI,KAAKE,aAAL,CAAmBH,KAAnB,KAA6B,KAAKI,aAAL,CAAmBJ,KAAnB,CAA7B,IAA0D,KAAKI,aAAL,CAAmBJ,KAAnB,CAA9D,EAAyF;AACrF,aAAKK,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAEL;AADJ,SAAd;AAGH;AACJ,KA7D6B;;AAAA,SAiE9BM,cAjE8B,GAiEZC,MAAD,IAAY;AACzB,YAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;;AAEA,UAAI,KAAKrB,KAAL,CAAWiB,YAAf,EAA6B;AACzB,aAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAC,KAAKtB,KAAL,CAAWiB,YAAX,CAAwBM,MAAzC,EAAiDD,CAAC,EAAlD,EAAsD;AAClDF,UAAAA,IAAI,CAACI,MAAL,CAAY,MAAZ,EAAoB,KAAKxB,KAAL,CAAWiB,YAAX,CAAwBK,CAAxB,CAApB;AACH,SAHwB,CAKzB;;;AACA5B,QAAAA,KAAK,CAAC+B,IAAN,CAAY,qCAAoCN,MAAO,EAAvD,EAA0DC,IAA1D,EAAgE;AAChE;AACI;AACAM,UAAAA,gBAAgB,EAAEC,aAAa,IAAI;AAC/B,iBAAKX,QAAL,CAAc;AACVY,cAAAA,MAAM,EAAGD,aAAa,CAACC,MAAd,GAAuBD,aAAa,CAACE,KAArC,GAA2C;AAD1C,aAAd;AAGH;AAP2D,SAAhE,EASCC,IATD,CASMC,GAAG,IAAI;AAAE;AACX;AACA;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAnC,UAAAA,KAAK,CAACsC,OAAN,CAAc,gBAAd;AACAC,UAAAA,KAAK,CAAC,6BAAD,CAAL;AACH,SAfD,EAgBCC,KAhBD,CAgBOC,GAAG,IAAI;AACVzC,UAAAA,KAAK,CAAC0C,KAAN,CAAY,aAAZ;AACH,SAlBD;AAmBH,OA5BwB,CA6BzB;;AAGH,KAjG6B;;AAAA,SAmG9BxB,aAnG8B,GAmGfH,KAAD,IAAS;AAEnB;AAEA,UAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB,CAJmB,CAIY;;AAC3B,UAAIA,KAAK,CAACW,MAAN,GAAe,CAAnB,EAAsB;AACnB,cAAMgB,GAAG,GAAG,wCAAZ;AACA5B,QAAAA,KAAK,CAACE,MAAN,CAAa2B,KAAb,GAAqB,IAArB,CAFmB,CAEO;;AAC1BR,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD,eAAO,KAAP;AAEH;;AACH,aAAO,IAAP;AAEH,KAjH6B;;AAAA,SAmH9BxB,aAnH8B,GAmHfJ,KAAD,IAAS;AACnB;AACA,UAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB,CAFmB,CAGnB;;AACA,UAAIyB,GAAG,GAAG,EAAV,CAJmB,CAKnB;;AACA,YAAMI,KAAK,GAAG,CAAC,WAAD,EAAc,YAAd,EAA4B,WAA5B,CAAd,CANmB,CAOnB;;AACA,WAAI,IAAInB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACV,KAAK,CAACW,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AACnC;AACG,YAAImB,KAAK,CAACC,KAAN,CAAYC,IAAI,IAAI/B,KAAK,CAACU,CAAD,CAAL,CAASqB,IAAT,KAAkBA,IAAtC,CAAJ,EAAiD;AAC7C;AACAN,UAAAA,GAAG,IAAIzB,KAAK,CAACU,CAAD,CAAL,CAASqB,IAAT,GAAc,8BAArB;AACH;AACJ;;AAAA;;AAED,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACP,GAAG,CAACd,MAArB,EAA6BqB,CAAC,EAA9B,EAAkC;AAAE;AAChCjC,QAAAA,KAAK,CAACE,MAAN,CAAa2B,KAAb,GAAqB,IAArB;AACA5C,QAAAA,KAAK,CAAC0C,KAAN,CAAYD,GAAG,CAACO,CAAD,CAAf;AACH;;AACD,aAAO,IAAP;AACH,KAxI6B;;AAAA,SA0I9BC,aA1I8B,GA0IflC,KAAD,IAAS;AACnB,UAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;AACA,UAAIkC,IAAI,GAAG,KAAX;AACA,UAAIT,GAAG,GAAG,EAAV;;AAEA,WAAI,IAAIf,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACV,KAAK,CAACW,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAChC,YAAIV,KAAK,CAACU,CAAD,CAAL,CAASwB,IAAT,GAAgBA,IAApB,EAA0B;AACtBT,UAAAA,GAAG,IAAIzB,KAAK,CAACU,CAAD,CAAL,CAASqB,IAAT,GAAc,4CAArB;AACH;AACJ;;AAAA;;AAED,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACP,GAAG,CAACd,MAArB,EAA6BqB,CAAC,EAA9B,EAAkC;AAC9BhD,QAAAA,KAAK,CAAC0C,KAAN,CAAYD,GAAG,CAACO,CAAD,CAAf;AACAjC,QAAAA,KAAK,CAACE,MAAN,CAAa2B,KAAb,GAAqB,IAArB;AACH;;AACD,aAAO,IAAP;AAEH,KA3J6B;;AAAA,SAkK9BO,aAlK8B,GAkKbC,EAAD,IAAQ;AACpB,YAAMC,MAAM,GAAG,6BAAf;;AACA,UAAID,EAAE,CAACnC,MAAH,CAAUqC,GAAV,KAAkBD,MAAtB,EAA8B;AAC1BD,QAAAA,EAAE,CAACnC,MAAH,CAAUqC,GAAV,GAAgBD,MAAhB;AACH;AACJ,KAvK6B;;AAAA,SAyK9BE,MAzK8B,GAyKrB,MAAM;AACX,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAyB,QAAzB;AACH,KA3K6B;AAAA;;AAgB9BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWI,QAAX,CAAoB3D,WAAW,EAA/B;AAEH;;AAGD4D,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAI,KAAKP,KAAL,IAAcM,SAAlB,EAA6B;AAEzB,YAAME,QAAQ,GAAG,KAAKR,KAAL,CAAWQ,QAA5B;AAEA,UAAI3D,QAAQ,GAAG;AACXC,QAAAA,SAAS,EAAE0D,QAAQ,CAAC1D,SADT;AAEXC,QAAAA,SAAS,EAAEyD,QAAQ,CAACzD,SAFT;AAGXC,QAAAA,SAAS,EAAEwD,QAAQ,CAACxD,SAHT;AAIXC,QAAAA,SAAS,EAAEuD,QAAQ,CAACvD,SAJT;AAKXC,QAAAA,WAAW,EAAEsD,QAAQ,CAACtD,WALX;AAMXC,QAAAA,WAAW,EAAEqD,QAAQ,CAACrD,WANX;AAOXC,QAAAA,WAAW,EAAEoD,QAAQ,CAACpD,WAPX;AAQXC,QAAAA,WAAW,EAAEmD,QAAQ,CAACnD;AARX,OAAf;AAWA,WAAKO,QAAL,CAAc;AACVf,QAAAA;AADU,OAAd;AAGH;AACJ,GA1C6B,CAiD9B;;;AA6HA4D,EAAAA,MAAM,GAAG;AAEL7B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKmB,KAAjB;AAIA,wBAII;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAKI;AAAM,MAAA,QAAQ,EAAE,KAAKU,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,qBAFhB;AAGI,MAAA,YAAY,EAAE,KAAK9D,KAAL,CAAWC,QAAX,CAAoBC,SAHtC;AAII,MAAA,QAAQ,EAAGS,KAAD,IAAW,KAAKoD,WAAL,CAAiBpD,KAAjB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,CATA,eAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,qBAFhB;AAGI,MAAA,YAAY,EAAE,KAAKX,KAAL,CAAWC,QAAX,CAAoBK,WAHtC;AAII,MAAA,QAAQ,EAAGK,KAAD,IAAW,KAAKoD,WAAL,CAAiBpD,KAAjB,CAJzB;AAKI,MAAA,IAAI,EAAE,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CAzBA,eAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,GAAG,EAAG,oBAAX;AAAgC,MAAA,OAAO,EAAE,KAAKoC,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,IAAI,EAAC,MAAjD;AAAwD,MAAA,QAAQ,EAAE,KAAKrC,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,2BAAhC;AAA4D,MAAA,OAAO,EAAG,MAAM;AAAC,aAAKQ,cAAL,CAAoB,CAApB;AAAuB,OAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAHJ,CAFJ,CAxCA,eAqDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,CADJ,CArDA,eA4DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,qBAFhB;AAGI,MAAA,YAAY,EAAE,KAAKlB,KAAL,CAAWC,QAAX,CAAoBE,SAHtC;AAII,MAAA,QAAQ,EAAGQ,KAAD,IAAW,KAAKoD,WAAL,CAAiBpD,KAAjB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,CA5DA,eA4EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,qBAFhB;AAGI,MAAA,YAAY,EAAE,KAAKX,KAAL,CAAWC,QAAX,CAAoBM,WAHtC;AAII,MAAA,QAAQ,EAAGI,KAAD,IAAW,KAAKoD,WAAL,CAAiBpD,KAAjB,CAJzB;AAKI,MAAA,IAAI,EAAE,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CA5EA,eA2FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAG,oBAAX;AAAgC,MAAA,OAAO,EAAE,KAAKoC,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,IAAI,EAAC,MAAjD;AAAwD,MAAA,QAAQ,EAAE,KAAKrC,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,2BAAhC;AAA4D,MAAA,OAAO,EAAG,MAAM;AAAC,aAAKQ,cAAL,CAAoB,CAApB;AAAuB,OAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAFJ,CAFJ,CA3FA,eAuGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,CADJ,CAvGA,eA6GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,qBAFhB;AAGI,MAAA,YAAY,EAAE,KAAKlB,KAAL,CAAWC,QAAX,CAAoBG,SAHtC;AAII,MAAA,QAAQ,EAAGO,KAAD,IAAW,KAAKoD,WAAL,CAAiBpD,KAAjB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,CA7GA,eA6HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,qBAFhB;AAGI,MAAA,YAAY,EAAE,KAAKX,KAAL,CAAWC,QAAX,CAAoBO,WAHtC;AAII,MAAA,QAAQ,EAAGG,KAAD,IAAW,KAAKoD,WAAL,CAAiBpD,KAAjB,CAJzB;AAKI,MAAA,IAAI,EAAE,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CA7HA,eA4IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAG,oBAAX;AAAgC,MAAA,OAAO,EAAE,KAAKoC,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,IAAI,EAAC,MAAjD;AAAwD,MAAA,QAAQ,EAAE,KAAKrC,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,2BAAhC;AAA4D,MAAA,OAAO,EAAG,MAAM;AAAC,aAAKQ,cAAL,CAAoB,CAApB;AAAuB,OAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAFJ,CAFJ,CA5IA,eAwJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,CADJ,CAxJA,eA8JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,qBAFhB;AAGI,MAAA,YAAY,EAAE,KAAKlB,KAAL,CAAWC,QAAX,CAAoBI,SAHtC;AAII,MAAA,QAAQ,EAAGM,KAAD,IAAW,KAAKoD,WAAL,CAAiBpD,KAAjB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,CA9JA,eA8KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,qBAFhB;AAGI,MAAA,YAAY,EAAE,KAAKX,KAAL,CAAWC,QAAX,CAAoBQ,WAHtC;AAII,MAAA,QAAQ,EAAGE,KAAD,IAAW,KAAKoD,WAAL,CAAiBpD,KAAjB,CAJzB;AAKI,MAAA,IAAI,EAAE,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CA9KA,eA6LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAG,oBAAX;AAAgC,MAAA,OAAO,EAAE,KAAKoC,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,IAAI,EAAC,MAAjD;AAAwD,MAAA,QAAQ,EAAE,KAAKrC,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,2BAAhC;AAA4D,MAAA,OAAO,EAAG,MAAM;AAAC,aAAKQ,cAAL,CAAoB,CAApB;AAAuB,OAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAFJ,CAFJ,CA7LA,eA0MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,CADJ,CA1MA,eA8MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKiC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CALJ,CA9MA,CADJ,CADJ,CALJ,CADJ,CAJJ;AA8OH;;AAla6B;;AAqalC,SAASa,eAAT,CAAyBhE,KAAzB,EAAgC;AAC5B;AAEA,SAAO;AACH4D,IAAAA,QAAQ,EAAE5D,KAAK,CAACiE,KAAN,CAAYC;AADnB,GAAP;AAIH;;AAGD,eAAezE,OAAO,CAACuE,eAAD,CAAP,CAAyBjE,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nimport { getInfoText, updateInfoText } from '../../actions';\n\n\n\nclass AdminInfo extends Component {\n\n\n    state= {\n        formdata: {\n            heading_1: '',\n            heading_2: '',\n            heading_3: '',\n            heading_4: '',\n            paragraph_1: '',\n            paragraph_2: '',\n            paragraph_3: '',\n            paragraph_4: ''\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getInfoText());\n\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props != prevProps) {\n\n            const infotext = this.props.infotext;\n\n            let formdata = {\n                heading_1: infotext.heading_1,\n                heading_2: infotext.heading_2,\n                heading_3: infotext.heading_3,\n                heading_4: infotext.heading_4,\n                paragraph_1: infotext.paragraph_1,\n                paragraph_2: infotext.paragraph_2,\n                paragraph_3: infotext.paragraph_3,\n                paragraph_4: infotext.paragraph_4\n            }\n\n            this.setState({\n                formdata\n            })\n        }\n    }\n\n\n\n\n\n\n    // *************** UPLOAD LOGIC ********************\n\n    onChangeHandler = (event) => {\n\n\n        var files = event.target.files;\n\n        if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {  \n            this.setState({\n                selectedFile: files\n            })\n        }\n    }\n\n\n\n    onClickHandler = (number) => {\n        const data = new FormData() \n        \n        if (this.state.selectedFile) {\n            for(var x = 0; x<this.state.selectedFile.length; x++) {\n                data.append('file', this.state.selectedFile[x])\n            }\n\n            // HOST-SELECT\n            axios.post(`http://localhost:8000/upload-info/${number}`, data, {\n            // axios.post(`http://64.227.34.134:8000/upload-info/${number}`, data, { \n                // receive two parameter endpoint url ,form data \n                onUploadProgress: ProgressEvent => {\n                    this.setState({\n                        loaded: (ProgressEvent.loaded / ProgressEvent.total*100)\n                    })\n                }\n            })\n            .then(res => { // then print response status\n                // console.log(res.config.data.id);\n                // console.log(res.statusText);\n                console.log(res);\n                toast.success('upload success')\n                alert('Files uploaded successfully')\n            })\n            .catch(err => { \n                toast.error('upload fail')\n            })\n        }\n        // this.redirectUser(`/items/${this.props.items.item._id}`)\n\n\n    }\n\n    maxSelectFile=(event)=>{\n\n        // console.log(event);\n\n        let files = event.target.files // create file object\n            if (files.length > 1) { \n               const msg = 'Only 1 image can be uploaded at a time'\n               event.target.value = null // discard selected file\n               console.log(msg)\n              return false;\n     \n          }\n        return true;\n     \n    }\n\n    checkMimeType=(event)=>{\n        //getting file object\n        let files = event.target.files \n        //define message container\n        let err = ''\n        // list allow mime type\n        const types = ['image/png', 'image/jpeg', 'image/gif']\n        // loop access array\n        for(var x = 0; x<files.length; x++) {\n         // compare file type find doesn't matach\n            if (types.every(type => files[x].type !== type)) {\n                // create error message and assign to container   \n                err += files[x].type+' is not a supported format\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) { // loop create toast massage\n            event.target.value = null \n            toast.error(err[z])\n        }\n        return true;\n    }\n\n    checkFileSize=(event)=>{\n        let files = event.target.files\n        let size = 15000 \n        let err = \"\"; \n\n        for(var x = 0; x<files.length; x++) {\n            if (files[x].size > size) {\n                err += files[x].type+'is too large, please pick a smaller file\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) {\n            toast.error(err[z])\n            event.target.value = null\n        }\n        return true;\n   \n    }    \n\n    // ****************************************************\n\n\n\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    }\n\n    cancel = () => {\n        this.props.history.push(`/admin`)\n    }\n    \n\n    render() {\n\n        console.log(this.props)\n\n\n\n        return (\n\n\n\n            <div className=\"admin\">\n                <div className=\"admin_info\">\n\n                    <h1>Edit Info Page</h1>\n\n\n                    <form onSubmit={this.submitForm}>\n                        <table>\n                            <tbody>\n\n\n\n\n\n\n                            {/* PARAGRAPH ONE */}\n                            \n                            <tr>\n                                <td>\n                                    Paragraph 1 Heading\n                                </td>\n\n                                <td>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Paragraph 1 Heading\"\n                                        defaultValue={this.state.formdata.heading_1} \n                                        onChange={(event) => this.handleInput(event)}\n                                    />\n                                </td>\n                            </tr>\n\n                            \n                            <tr>\n                                <td>\n                                    Paragraph 1 Body\n                                </td>\n                                <td>\n                                    <textarea\n                                        type=\"text\"\n                                        placeholder=\"Paragraph 1 Content\"\n                                        defaultValue={this.state.formdata.paragraph_1} \n                                        onChange={(event) => this.handleInput(event)}\n                                        rows={6}\n                                    />\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td>Paragraph 1 Image</td>\n                                <td>\n                                    \n                                    <img src={`/images/info/1.jpg`} onError={this.addDefaultImg}/>\n                                    <div className=\"form_element\">\n                                        <input type=\"file\" className=\"form-control\" name=\"file\" onChange={this.onChangeHandler}/>\n                                        <br />\n                                        <button type=\"button\" className=\"btn btn-success btn-block\" onClick={ () => {this.onClickHandler(1)} }>Upload</button> \n                                    </div>\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td colSpan=\"2\"><hr/></td>\n                            </tr>\n\n\n                            {/* PARAGRAPH TWO */}\n                            \n                            <tr>\n                                <td>\n                                    Paragraph 2 Heading\n                                </td>\n\n                                <td>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Paragraph 2 Heading\"\n                                        defaultValue={this.state.formdata.heading_2} \n                                        onChange={(event) => this.handleInput(event)}\n                                    />\n                                </td>\n                            </tr>\n\n                            \n                            <tr>\n                                <td>\n                                    Paragraph 2 Body\n                                </td>\n                                <td>\n                                    <textarea\n                                        type=\"text\"\n                                        placeholder=\"Paragraph 2 Content\"\n                                        defaultValue={this.state.formdata.paragraph_2} \n                                        onChange={(event) => this.handleInput(event)}\n                                        rows={6}\n                                    />\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td>Paragraph 2 Image</td>\n                                <td>\n                                    <img src={`/images/info/2.jpg`} onError={this.addDefaultImg}/>\n                                    <div className=\"form_element\">\n                                        <input type=\"file\" className=\"form-control\" name=\"file\" onChange={this.onChangeHandler}/>\n                                        <br />\n                                        <button type=\"button\" className=\"btn btn-success btn-block\" onClick={ () => {this.onClickHandler(2)} }>Upload</button> \n                                    </div>\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td colSpan=\"2\"><hr/></td>\n                            </tr>\n\n                            {/* PARAGRAPH THREE */}\n                            \n                            <tr>\n                                <td>\n                                    Paragraph 3 Heading\n                                </td>\n\n                                <td>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Paragraph 3 Heading\"\n                                        defaultValue={this.state.formdata.heading_3} \n                                        onChange={(event) => this.handleInput(event)}\n                                    />\n                                </td>\n                            </tr>\n\n                            \n                            <tr>\n                                <td>\n                                    Paragraph 3 Body\n                                </td>\n                                <td>\n                                    <textarea\n                                        type=\"text\"\n                                        placeholder=\"Paragraph 3 Content\"\n                                        defaultValue={this.state.formdata.paragraph_3} \n                                        onChange={(event) => this.handleInput(event)}\n                                        rows={6}\n                                    />\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td>Paragraph 3 Image</td>\n                                <td>\n                                    <img src={`/images/info/3.jpg`} onError={this.addDefaultImg}/>\n                                    <div className=\"form_element\">\n                                        <input type=\"file\" className=\"form-control\" name=\"file\" onChange={this.onChangeHandler}/>\n                                        <br />\n                                        <button type=\"button\" className=\"btn btn-success btn-block\" onClick={ () => {this.onClickHandler(3)} }>Upload</button> \n                                    </div>\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td colSpan=\"2\"><hr/></td>\n                            </tr>\n\n                            {/* PARAGRAPH FOUR */}\n                            \n                            <tr>\n                                <td>\n                                    Paragraph 4 Heading\n                                </td>\n\n                                <td>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Paragraph 4 Heading\"\n                                        defaultValue={this.state.formdata.heading_4} \n                                        onChange={(event) => this.handleInput(event)}\n                                    />\n                                </td>\n                            </tr>\n\n                            \n                            <tr>\n                                <td>\n                                    Paragraph 4 Body\n                                </td>\n                                <td>\n                                    <textarea\n                                        type=\"text\"\n                                        placeholder=\"Paragraph 4 Content\"\n                                        defaultValue={this.state.formdata.paragraph_4} \n                                        onChange={(event) => this.handleInput(event)}\n                                        rows={6}\n                                    />\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td>Paragraph 4 Image</td>\n                                <td>\n                                    <img src={`/images/info/4.jpg`} onError={this.addDefaultImg}/>\n                                    <div className=\"form_element\">\n                                        <input type=\"file\" className=\"form-control\" name=\"file\" onChange={this.onChangeHandler}/>\n                                        <br />\n                                        <button type=\"button\" className=\"btn btn-success btn-block\" onClick={ () => {this.onClickHandler(4)} }>Upload</button> \n                                    </div>\n                                </td>\n                            </tr>\n                            \n\n                            <tr>\n                                <td colSpan=\"2\"><hr/></td>\n                            </tr>\n\n                            <tr>\n                                <td>\n                                    <button type=\"submit\">Save Changes</button>\n                                </td>\n\n                                <td>\n                                    <button type=\"button\" onClick={this.cancel}>Cancel</button>\n                                </td>\n                                \n                            </tr>                  \n\n\n                        </tbody>\n                        </table>\n                    </form>\n\n\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    // console.log(state);\n\n    return {\n        infotext: state.infos.text\n        \n    }\n}\n\n\nexport default connect(mapStateToProps)(AdminInfo)"]},"metadata":{},"sourceType":"module"}