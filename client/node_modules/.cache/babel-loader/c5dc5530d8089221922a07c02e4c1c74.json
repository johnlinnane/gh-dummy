{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/Collections/collection.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'; // import PanelView from '../PanelView/panel_view';\n\nimport { getCollById, searchItem } from '../../actions'; // import { getCollWithItems } from '../../actions';\n\nimport NavigationBar from '../../widgetsUI/navigation';\n\nclass Collection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.navInfo = {\n      catTitle: null,\n      catId: null,\n      subCatTitle: null,\n      subCatId: null,\n      collTitle: null,\n      collId: null,\n      type: 'Collections'\n    };\n    this.state = {\n      info: []\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n\n    this.renderColl = coll => {\n      let imageId = null;\n\n      if (coll && coll.length) {\n        imageId = coll[0].cover_item;\n      }\n\n      return coll && coll.length ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, coll[0].title), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, \"Description\"), \" \", coll[0].description, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, \"Subject\"), \" \", coll[0].subject, coll[0].format ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 27\n        }\n      }, \"Format\"), coll[0].format) : null, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, \"Items\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      })) : null;\n    };\n\n    this.renderGrid = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"coll_grid_row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"coll_grid_column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, this.props.items ? this.props.items.map((item, i) => /*#__PURE__*/React.createElement(Link, {\n        to: `/items/${item._id}`,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"figure\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n        alt: item.title,\n        onError: this.addDefaultImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"figcaption\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }\n      }, item.title)))) : null));\n    };\n\n    this.getCollName = () => {\n      if (this.props.coll && this.props.coll.length) {\n        this.navInfo.collTitle = this.props.coll[0].title;\n        this.navInfo.collId = this.props.coll[0].id;\n      }\n    };\n  }\n\n  componentDidMount() {\n    let queryId = this.props.match.params.id;\n    this.props.dispatch(getCollById(queryId));\n    this.props.dispatch(searchItem('collection_id', queryId));\n  }\n\n  render() {\n    // console.log(this.props.coll);\n    console.log(this.props);\n    this.getCollName();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      navinfo: this.navInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }), this.renderColl(this.props.coll), this.renderGrid());\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  return {\n    items: state.items.data,\n    coll: state.collections.coll\n  };\n}\n\nexport default connect(mapStateToProps)(Collection);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/Collections/collection.js"],"names":["React","Component","connect","Link","getCollById","searchItem","NavigationBar","Collection","navInfo","catTitle","catId","subCatTitle","subCatId","collTitle","collId","type","state","info","addDefaultImg","ev","newImg","target","src","renderColl","coll","imageId","length","cover_item","title","description","subject","format","renderGrid","props","items","map","item","i","_id","getCollName","id","componentDidMount","queryId","match","params","dispatch","render","console","log","mapStateToProps","data","collections"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// import PanelView from '../PanelView/panel_view';\n\n\n\n\nimport { getCollById, searchItem } from '../../actions';\n// import { getCollWithItems } from '../../actions';\nimport NavigationBar from '../../widgetsUI/navigation';\n\n\n\nclass Collection  extends Component {\n\n   \n\n    navInfo = {\n        catTitle: null,\n        catId: null,\n        subCatTitle: null,\n        subCatId: null,\n        collTitle: null,\n        collId: null,\n        type: 'Collections'\n    }\n\n\n    componentDidMount() {\n        let queryId = this.props.match.params.id;\n\n \n\n        this.props.dispatch(getCollById(queryId));\n        this.props.dispatch(searchItem('collection_id', queryId))\n\n    }\n\n\n\n    state = {\n        info: []\n    }\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    }\n\n\n    renderColl = (coll) => {\n        let imageId = null;\n\n        if (coll && coll.length) {\n          imageId = coll[0].cover_item;\n        \n        }\n        return ( coll && coll.length ?\n            <div>\n                <h1>{coll[0].title}</h1> \n                <hr />\n\n                <h2>Description</h2> {coll[0].description}\n                <h2>Subject</h2> {coll[0].subject}\n                { coll[0].format ? \n                    <span><h2>Format</h2>{coll[0].format}</span>\n                : null }\n                <hr />\n                <h1>Items</h1>\n                <hr />\n            </div>\n            : null\n        )\n\n    }\n\n\n\n\n\n    renderGrid = () => {\n        return(\n            <div class=\"coll_grid_row\">\n                <div className=\"coll_grid_column\">\n\n\n\n\n\n\n                    { this.props.items ? \n                        this.props.items.map ( (item, i) => (\n                            <Link to={`/items/${item._id}`}key={i}>\n                                <figure key={i}>\n                                    <img src={`/images/items/${item._id}/sq_thumbnail/0.jpg`} \n                                        alt={item.title} \n                                        onError={this.addDefaultImg} />\n                                    <figcaption>{item.title}</figcaption>\n                                </figure>\n                            </Link>\n                        ))\n                    : null }\n\n\n                                \n\n                   \n                </div>\n            </div>\n    )}\n    \n\n\n\n    // renderItems = (items) => (\n    //     items ?\n    //         items.map( (item, i) => (\n    //           <Link to={`/items/${item._id}`}key={i}>\n    //             <h2>{item.title}</h2> \n    //             <img src={`/images/items/${item._id}/sq_thumbnail/0.jpg`} alt={\"Item\"} onError={this.addDefaultImg}/>\n    //             <h3>Creator</h3> {item.creator}\n    //             <h3>Subject</h3> {item.subject}\n    //             <h3>Description</h3> {item.description}\n    //             <hr />\n    //           </Link>\n\n    //         ))\n    //     : null\n\n    // )\n\n\n\n\n\n\n    // componentWillReceiveProps(nextProps) {\n    //     if(nextProps.items) {\n    //         let tempArray = [];\n    //         nextProps.items.map( item => {\n    //             tempArray.push(\n    //                 {\n    //                     src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n    //                     caption: item.title,\n    //                     link: `/items/${item._id}`\n    //                 }\n    //             )\n    //         })\n    //         if (tempArray.length) {\n    //             this.setState({ info: [...tempArray]});\n    //         }\n    //     }\n    // }\n\n\n\n\n\n\n\n\n\n\n    getCollName = () => {\n        if (this.props.coll && this.props.coll.length) {\n            this.navInfo.collTitle = this.props.coll[0].title;\n            this.navInfo.collId = this.props.coll[0].id;\n        }\n    }\n\n\n\n\n    render() {\n        \n        // console.log(this.props.coll);\n        console.log(this.props);\n        this.getCollName();\n\n        \n        return (\n            \n            <div className=\"main_view\">\n\n                <NavigationBar navinfo={this.navInfo}/>\n                  \n                {this.renderColl(this.props.coll)}\n               \n                {this.renderGrid()}\n\n              </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    console.log(state);\n    return {\n        items: state.items.data,\n        coll: state.collections.coll\n\n    }\n}\n\n\nexport default connect(mapStateToProps)(Collection)"]},"metadata":{},"sourceType":"module"}