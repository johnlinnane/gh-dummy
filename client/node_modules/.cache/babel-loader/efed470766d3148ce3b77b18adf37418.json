{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/Categories/cat_view.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getItemsByCat, getCatById } from '../../actions';\nimport PanelView from '../PanelView/panel_view';\nimport NavigationBar from '../../widgetsUI/navigation';\n\nclass CatView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      info: []\n    };\n    this.navInfo = {\n      catTitle: null,\n      catId: null,\n      subCatTitle: null,\n      subCatId: null,\n      type: 'Categories'\n    };\n\n    this.renderGrid = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"cat_grid_row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cat_grid_column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, this.props.catitems ? this.props.catitems.map((item, i) => /*#__PURE__*/React.createElement(Link, {\n        to: `/items/${item._id}`,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"figure\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n        alt: item.title,\n        onError: this.addDefaultImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"figcaption\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }, item.title)))) : null));\n    };\n\n    this.getCatName = () => {\n      if (this.props.catinfo && this.props.catinfo.length) {\n        this.navInfo.catTitle = this.props.catinfo[0].title;\n        this.navInfo.catId = this.props.catinfo[0].cat_id;\n      }\n    };\n  }\n\n  componentDidMount() {\n    let catId = this.props.match.params.id;\n    this.props.dispatch(getItemsByCat(catId));\n    this.props.dispatch(getCatById(catId));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.catitems && nextProps.catitems.length) {\n      let tempArray = [];\n      nextProps.catitems.map((item, i) => tempArray.push({\n        // src: `/images/sq_thumb/${item.omeka.omeka_id}.jpg`,\n        src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n        caption: item.title,\n        link: `/items/${item._id}`\n      }));\n\n      if (tempArray.length) {\n        this.setState({\n          info: [...tempArray]\n        });\n      }\n    }\n\n    if (this.props.catinfo && this.props.catinfo.length) {\n      this.setState({\n        navInfo: {\n          catTitle: this.props.catinfo[0].title,\n          catId: this.props.catinfo[0].cat_id\n        }\n      });\n    }\n  }\n\n  render() {\n    this.getCatName(); // console.log(this.navInfo);\n\n    let catinfo = this.props.catinfo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cat_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      navinfo: this.navInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), catinfo && catinfo.length > 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, catinfo[0].title) : null, this.props.catitems ? this.renderGrid() : null));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    catitems: state.cats.catitems,\n    catinfo: state.cats.catinfo\n  };\n}\n\nexport default connect(mapStateToProps)(CatView);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/Categories/cat_view.js"],"names":["React","Component","connect","getItemsByCat","getCatById","PanelView","NavigationBar","CatView","state","info","navInfo","catTitle","catId","subCatTitle","subCatId","type","renderGrid","props","catitems","map","item","i","_id","title","addDefaultImg","getCatName","catinfo","length","cat_id","componentDidMount","match","params","id","dispatch","componentWillReceiveProps","nextProps","tempArray","push","src","caption","link","setState","render","mapStateToProps","cats"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getItemsByCat, getCatById } from '../../actions';\nimport PanelView from '../PanelView/panel_view';\nimport NavigationBar from '../../widgetsUI/navigation';\n\n\nclass CatView  extends Component {\n    \n\n    componentDidMount() {\n        let catId = this.props.match.params.id\n        this.props.dispatch(getItemsByCat(catId));\n        this.props.dispatch(getCatById(catId));\n    }\n\n\n    state = {\n        info: []\n    }\n\n    \n    navInfo = {\n        catTitle: null,\n        catId: null,\n        subCatTitle: null,\n        subCatId: null,\n        type: 'Categories'\n    }\n\n    componentWillReceiveProps(nextProps) {\n        \n        if (nextProps.catitems && nextProps.catitems.length) {\n            let tempArray = []\n            nextProps.catitems.map( (item, i) => (\n                    tempArray.push(\n                        {\n                            // src: `/images/sq_thumb/${item.omeka.omeka_id}.jpg`,\n                            src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n                            caption: item.title,\n                            link: `/items/${item._id}` \n                        }\n                    )\n            ))\n            if (tempArray.length) {\n                this.setState({ info: [...tempArray]});\n            }\n        }\n        if (this.props.catinfo && this.props.catinfo.length) {\n            this.setState({\n                navInfo: {\n                    catTitle: this.props.catinfo[0].title,\n                    catId: this.props.catinfo[0].cat_id\n                }\n            })\n        }\n    }\n\n\n\n    renderGrid = () => {\n        return(\n            <div class=\"cat_grid_row\">\n                <div className=\"cat_grid_column\">\n\n                    { this.props.catitems ? \n                        this.props.catitems.map ( (item, i) => (\n                            <Link to={`/items/${item._id}`}key={i}>\n                                <figure key={i}>\n                                    <img src={`/images/items/${item._id}/sq_thumbnail/0.jpg`} \n                                        alt={item.title} \n                                        onError={this.addDefaultImg} />\n                                    <figcaption>{item.title}</figcaption>\n                                </figure>\n                            </Link>\n                        ))\n                    : null }\n\n                </div>\n            </div>\n    )}\n\n\n\n\n\n    getCatName = () => {\n        if (this.props.catinfo && this.props.catinfo.length) {\n            this.navInfo.catTitle = this.props.catinfo[0].title;\n            this.navInfo.catId = this.props.catinfo[0].cat_id;\n        }\n    }\n\n\n\n    render() {\n\n        this.getCatName();\n\n        // console.log(this.navInfo);\n\n        let catinfo = this.props.catinfo;\n\n        return (\n            <div className=\"main_view\">\n                <div className=\"cat_view\">\n                    <NavigationBar navinfo={this.navInfo}/>\n                    { catinfo && catinfo.length > 0? \n                        <h2 className=\"title\">{catinfo[0].title}</h2>\n                    :null\n                    }\n\n                    {/* <PanelView info={this.state.info}></PanelView> */}\n                    { this.props.catitems ?\n                        this.renderGrid()\n                    : null }\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        catitems: state.cats.catitems,\n        catinfo: state.cats.catinfo\n        \n    }\n}\n\n\nexport default connect(mapStateToProps)(CatView)"]},"metadata":{},"sourceType":"module"}