{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/containers/Admin/edit_item_3_file.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Progress } from 'reactstrap';\nimport Select from 'react-select';\nimport { getItemById, deleteItem } from '../../actions';\n\nclass EditItemFile extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        _id: this.props.match.params.id,\n        title: '',\n        creator: '',\n        subject: '',\n        description: '',\n        source: '',\n        date_created: '',\n        contributor: '',\n        // collection_id: '',     \n        item_format: '',\n        materials: '',\n        physical_dimensions: '',\n        pages: '',\n        editor: '',\n        publisher: '',\n        further_info: '',\n        language: '',\n        reference: '',\n        rights: '',\n        file_format: '',\n        address: '',\n        subcategory_ref: '',\n        external_link: {\n          url: '',\n          text: ''\n        },\n        geo: {\n          address: ''\n        }\n      },\n      selectedFile: null,\n      loaded: 0,\n      fileTypes: [{\n        value: 'jpg',\n        label: \"Image\"\n      }]\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.state.formdata._id));\n      this.props.history.push('/user/all-items');\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {\n        this.setState({\n          selectedFile: files\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n\n      if (this.state.selectedFile) {\n        for (var x = 0; x < this.state.selectedFile.length; x++) {\n          data.append('file', this.state.selectedFile[x]);\n        } // HOST-SELECT\n\n\n        axios.post(`http://localhost:8000/upload/${this.state.formdata._id}`, data, {\n          // axios.post(`http://64.227.34.134:8000/upload/${this.state.formdata._id}`, data, { \n          // receive two parameter endpoint url ,form data \n          onUploadProgress: ProgressEvent => {\n            this.setState({\n              loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n            });\n          }\n        }).then(res => {\n          // then print response status\n          // console.log(res.config.data.id);\n          // console.log(res.statusText);\n          console.log(res);\n          toast.success('upload success');\n          alert('Files uploaded successfully');\n        }).catch(err => {\n          toast.error('upload fail');\n        });\n      }\n\n      this.redirectUser(`/items/${this.props.items.item._id}`);\n    };\n\n    this.maxSelectFile = event => {\n      // console.log(event);\n      let files = event.target.files; // create file object\n\n      if (files.length > 6) {\n        const msg = 'Only 6 images can be uploaded at a time';\n        event.target.value = null; // discard selected file\n\n        console.log(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = ''; // list allow mime type\n\n      const types = ['image/png', 'image/jpg', 'image/jpeg', 'image/gif', 'application/pdf', 'video/mp4', 'video/quicktime']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // loop create toast massage\n        event.target.value = null;\n        toast.error(err[z]);\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 15000;\n      let err = \"\";\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err += files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.redirectUser = url => {\n      setTimeout(() => {\n        this.props.history.push(url);\n      }, 1000);\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById(this.props.match.params.id));\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let formdata = prevState.formdata;\n\n    if (nextProps.items.item) {\n      let item = nextProps.items.item;\n      formdata = { ...formdata,\n        _id: item._id,\n        title: item.title,\n        //\n        creator: item.creator,\n        //\n        description: item.description,\n        //\n        pages: item.pages,\n        //\n        source: item.source,\n        //\n        subject: item.subject,\n        date_created: item.date_created,\n        contributor: item.contributor,\n        item_format: item.item_format,\n        materials: item.materials,\n        physical_dimensions: item.physical_dimensions,\n        editor: item.editor,\n        publisher: item.publisher,\n        further_info: item.further_info,\n        language: item.language,\n        reference: item.reference,\n        rights: item.rights,\n        file_format: item.file_format,\n        subcategory_ref: item.subcategory_ref\n      };\n    }\n\n    return {\n      formdata: formdata\n    };\n  } // *************** UPLOAD LOGIC ********************\n\n\n  // addDefaultImg = (ev) => {\n  //     const newImg = '/images/default/default.jpg';\n  //     if (ev.target.src !== newImg) {\n  //         ev.target.src = newImg\n  //     }  \n  // } \n  render() {\n    // console.log(this.state);\n    let items = this.props.items;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article edit_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, \"Upload files:\"), this.props.items && this.props.items.item ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, \"Item: \", this.props.items.item.title) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      key: `cat_${this.props.items.item._id}`,\n      defaultValue: this.state.catsConverted,\n      isMulti: true,\n      name: \"colors\",\n      options: this.state.catList,\n      className: \"basic-multi-select\",\n      classNamePrefix: \"select\",\n      onChange: this.handleInputCats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      multiple: true,\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block edit_page_3_finish\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 29\n      }\n    }, \"Upload Files and Finish\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Progress, {\n      max: \"100\",\n      color: \"success\",\n      value: this.state.loaded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }\n    }, this.state.loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 33\n      }\n    }, Math.round(this.state.loaded, 2), \"%\") : null))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items\n  };\n}\n\nexport default connect(mapStateToProps)(EditItemFile);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/containers/Admin/edit_item_3_file.js"],"names":["React","PureComponent","connect","Link","axios","ToastContainer","toast","Progress","Select","getItemById","deleteItem","EditItemFile","state","formdata","_id","props","match","params","id","title","creator","subject","description","source","date_created","contributor","item_format","materials","physical_dimensions","pages","editor","publisher","further_info","language","reference","rights","file_format","address","subcategory_ref","external_link","url","text","geo","selectedFile","loaded","fileTypes","value","label","deletePost","dispatch","history","push","onChangeHandler","event","files","target","maxSelectFile","checkMimeType","setState","onClickHandler","data","FormData","x","length","append","post","onUploadProgress","ProgressEvent","total","then","res","console","log","success","alert","catch","err","error","redirectUser","items","item","msg","types","every","type","z","checkFileSize","size","setTimeout","componentDidMount","getDerivedStateFromProps","nextProps","prevState","render","catsConverted","catList","handleInputCats","Math","round","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport {Progress} from 'reactstrap';\nimport Select from 'react-select';\n\n\nimport { getItemById, deleteItem } from '../../actions';\n\n\nclass EditItemFile extends PureComponent {\n\n    state = {\n        formdata:{\n            _id:this.props.match.params.id,\n            title: '',\n            creator: '',\n            subject: '',\n            description: '',\n            source: '',\n            date_created: '',\n            \n            contributor: '',\n            // collection_id: '',     \n            item_format: '',\n            materials: '',\n            physical_dimensions: '',\n            pages: '',        \n            editor: '',\n            publisher: '',\n            further_info: '',\n            language: '',\n            reference: '',\n            rights: '',\n            file_format: '',\n            address: '',\n            subcategory_ref: '',\n       \n            external_link: {\n                url: '',\n                text: ''\n            },\n            geo: {\n                address: ''\n            }\n        },\n        selectedFile: null,\n        loaded: 0,\n        fileTypes: [\n            {\n                value: 'jpg',\n                label: \"Image\"\n            }\n        ]\n    \n    }\n\n    componentDidMount() {\n        this.props.dispatch(getItemById(this.props.match.params.id))\n    }\n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.state.formdata._id));\n        this.props.history.push('/user/all-items');\n    }\n\n\n   \n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n\n        let formdata = prevState.formdata;\n        if (nextProps.items.item ) {\n\n            let item = nextProps.items.item;\n\n            formdata = {\n                ...formdata,\n                _id:item._id,\n                title:item.title,  //\n                creator:item.creator,  //\n                description:item.description,  //\n                pages:item.pages,  //\n                source:item.source,   //\n\n                subject: item.subject,\n                date_created: item.date_created,\n                contributor: item.contributor,\n                item_format: item.item_format,\n                materials: item.materials,\n                physical_dimensions: item.physical_dimensions,\n                editor: item.editor,\n                publisher: item.publisher,\n                further_info: item.further_info,\n                language: item.language,\n                reference: item.reference,\n                rights: item.rights,\n                file_format: item.file_format,\n                subcategory_ref: item.subcategory_ref\n            }\n        }\n        return {\n            formdata: formdata\n        }\n    }\n\n\n    // *************** UPLOAD LOGIC ********************\n\n    onChangeHandler = (event) => {\n\n\n        var files = event.target.files;\n\n        if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {  \n            this.setState({\n                selectedFile: files\n            })\n        }\n    }\n\n\n\n    onClickHandler = () => {\n        const data = new FormData() \n        \n        if (this.state.selectedFile) {\n            for(var x = 0; x<this.state.selectedFile.length; x++) {\n                data.append('file', this.state.selectedFile[x])\n            }\n\n            // HOST-SELECT\n            axios.post(`http://localhost:8000/upload/${this.state.formdata._id}`, data, { \n            // axios.post(`http://64.227.34.134:8000/upload/${this.state.formdata._id}`, data, { \n                // receive two parameter endpoint url ,form data \n                onUploadProgress: ProgressEvent => {\n                    this.setState({\n                        loaded: (ProgressEvent.loaded / ProgressEvent.total*100)\n                    })\n                }\n            })\n            .then(res => { // then print response status\n                // console.log(res.config.data.id);\n                // console.log(res.statusText);\n                console.log(res);\n                toast.success('upload success')\n                alert('Files uploaded successfully')\n            })\n            .catch(err => { \n                toast.error('upload fail')\n            })\n        }\n        this.redirectUser(`/items/${this.props.items.item._id}`)\n\n\n    }\n\n    maxSelectFile=(event)=>{\n\n        // console.log(event);\n\n        let files = event.target.files // create file object\n            if (files.length > 6) { \n               const msg = 'Only 6 images can be uploaded at a time'\n               event.target.value = null // discard selected file\n               console.log(msg)\n              return false;\n     \n          }\n        return true;\n     \n    }\n\n    checkMimeType=(event)=>{\n        //getting file object\n        let files = event.target.files \n        //define message container\n        let err = ''\n        // list allow mime type\n        const types = ['image/png', 'image/jpg', 'image/jpeg', 'image/gif', 'application/pdf', 'video/mp4', 'video/quicktime']\n        // loop access array\n        for(var x = 0; x<files.length; x++) {\n         // compare file type find doesn't matach\n            if (types.every(type => files[x].type !== type)) {\n                // create error message and assign to container   \n                err += files[x].type+' is not a supported format\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) { // loop create toast massage\n            event.target.value = null \n            toast.error(err[z])\n        }\n        return true;\n    }\n\n    checkFileSize=(event)=>{\n        let files = event.target.files\n        let size = 15000 \n        let err = \"\"; \n\n        for(var x = 0; x<files.length; x++) {\n            if (files[x].size > size) {\n                err += files[x].type+'is too large, please pick a smaller file\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) {\n            toast.error(err[z])\n            event.target.value = null\n        }\n        return true;\n   \n    }    \n\n    // ****************************************************\n\n\n    redirectUser = (url) => {\n        setTimeout(() => {\n            this.props.history.push(url)\n        }, 1000)\n    }\n\n    // addDefaultImg = (ev) => {\n    //     const newImg = '/images/default/default.jpg';\n    //     if (ev.target.src !== newImg) {\n    //         ev.target.src = newImg\n    //     }  \n    // } \n\n    render() {\n        // console.log(this.state);\n        let items = this.props.items;\n\n\n        return (\n            \n            <div className=\"main_view\">\n                <div className=\"rl_container article edit_page\">\n                        \n                    <h2>Upload files:</h2>\n\n                    {this.props.items && this.props.items.item ?\n                        <span>Item: {this.props.items.item.title}</span>\n                    : null }\n\n                    <div className=\"form_element select\">\n                        <Select\n                            key={`cat_${this.props.items.item._id}`}\n                            defaultValue={this.state.catsConverted}\n                            isMulti\n                            name=\"colors\"\n                            options={this.state.catList}\n                            className=\"basic-multi-select\"\n                            classNamePrefix=\"select\"\n                            onChange={this.handleInputCats}\n                        />\n                    </div>\n\n\n                    {/* <img src={`/images/items/${this.props.match.params.id}/sq_thumbnail/0.jpg`} alt=\"Item\" onError={this.addDefaultImg}/> */}\n\n\n                    <div className=\"form_element\">\n                        <input type=\"file\" className=\"form-control\" multiple name=\"file\" onChange={this.onChangeHandler}/>\n                        <div className=\"center\">\n                            <button type=\"button\" className=\"btn btn-success btn-block edit_page_3_finish\" onClick={this.onClickHandler}>Upload Files and Finish</button> \n                        </div>\n                    </div>\n\n\n                    <div className=\"form-group\">\n                        <Progress max=\"100\" color=\"success\" value={this.state.loaded} >\n                            { this.state.loaded ?\n                                <div>    \n                                    {Math.round(this.state.loaded,2)}\n                                    %\n                                </div>\n                            :null}\n                        </Progress>\n                    </div>\n\n                    {/* <div className=\"form-group\">\n                        <ToastContainer />\n                    </div> */}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items:state.items\n    }\n}\n\n\nexport default connect(mapStateToProps)(EditItemFile)\n\n\n"]},"metadata":{},"sourceType":"module"}