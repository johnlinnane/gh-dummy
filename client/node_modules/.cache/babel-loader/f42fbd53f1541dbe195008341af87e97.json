{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/Categories/cat_view.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getItemsByCat, getCatById, getAllSubCats } from '../../actions';\nimport NavigationBar from '../../widgetsUI/navigation';\n\nclass CatView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      info: [],\n      theseSubcats: [] // subcatsUsed: []\n\n    };\n    this.navInfo = {\n      catTitle: null,\n      catId: null,\n      subCatTitle: null,\n      subCatId: null,\n      type: 'Categories'\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n\n    this.renderImage = subCat => {\n      if (this.props.catitems) {\n        const firstItem = this.props.catitems.find(item => item.subcategory_ref == subCat.subcat_id);\n\n        if (firstItem) {\n          console.log(firstItem._id);\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: `/images/items/${firstItem._id}/sq_thumbnail/0.jpg`,\n            alt: subCat.title,\n            onError: this.addDefaultImg,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: `/images/default/default.jpg`,\n            alt: \"default item image\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 24\n            }\n          });\n        }\n      }\n    };\n\n    this.renderSubcats = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cat_grid_row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cat_grid_column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, this.state.theseSubcats && this.state.theseSubcats.length ? this.state.theseSubcats.map((subcat, i) => /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"figure\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 41\n        }\n      }, this.renderImage(subcat), /*#__PURE__*/React.createElement(\"figcaption\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 45\n        }\n      }, subcat.title)))) : null));\n    };\n  }\n\n  componentDidMount() {\n    let catId = this.props.match.params.id;\n    this.props.dispatch(getItemsByCat(catId));\n    this.props.dispatch(getCatById(catId));\n    this.props.dispatch(getAllSubCats(catId));\n  }\n\n  componentWillReceiveProps(nextProps) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.subcats !== prevProps.subcats) {\n      let theseSubcats = this.state.theseSubcats;\n      this.props.subcats.map(subcat => {\n        if (subcat.parent_cat == this.props.match.params.id) {\n          theseSubcats.push(subcat);\n        }\n      });\n      this.setState({\n        theseSubcats\n      });\n    }\n\n    if (this.props.catinfo && this.props.catinfo.length) {\n      this.navInfo.catTitle = this.props.catinfo[0].title;\n      this.navInfo.catId = this.props.catinfo[0].cat_id;\n    }\n  }\n\n  render() {\n    let catinfo = this.props.catinfo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cat_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      navinfo: this.navInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }), catinfo && catinfo.length > 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, catinfo[0].title) : null, this.renderSubcats()));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    catinfo: state.cats.catinfo,\n    subcats: state.cats.subcats,\n    catitems: state.cats.catitems\n  };\n}\n\nexport default connect(mapStateToProps)(CatView);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/Categories/cat_view.js"],"names":["React","Component","connect","Link","getItemsByCat","getCatById","getAllSubCats","NavigationBar","CatView","state","info","theseSubcats","navInfo","catTitle","catId","subCatTitle","subCatId","type","addDefaultImg","ev","newImg","target","src","renderImage","subCat","props","catitems","firstItem","find","item","subcategory_ref","subcat_id","console","log","_id","title","renderSubcats","length","map","subcat","i","componentDidMount","match","params","id","dispatch","componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","prevState","subcats","parent_cat","push","setState","catinfo","cat_id","render","mapStateToProps","cats"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getItemsByCat, getCatById, getAllSubCats } from '../../actions';\nimport NavigationBar from '../../widgetsUI/navigation';\n\n\nclass CatView  extends Component {\n    \n    componentDidMount() {\n        let catId = this.props.match.params.id\n        this.props.dispatch(getItemsByCat(catId));\n        this.props.dispatch(getCatById(catId));\n        this.props.dispatch(getAllSubCats(catId));\n    }\n\n    state = {\n        info: [],\n        theseSubcats: []\n        // subcatsUsed: []\n    }\n    \n    navInfo = {\n        catTitle: null,\n        catId: null,\n        subCatTitle: null,\n        subCatId: null,\n        type: 'Categories'\n    }\n\n    componentWillReceiveProps(nextProps) {\n    }\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    }\n\n\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.subcats !== prevProps.subcats) {\n\n            let theseSubcats = this.state.theseSubcats;\n\n            this.props.subcats.map( subcat => {\n                if (subcat.parent_cat == this.props.match.params.id) {\n                    theseSubcats.push(subcat)\n                }\n            })\n\n            this.setState({\n                theseSubcats\n              \n            })\n        }\n\n        if (this.props.catinfo && this.props.catinfo.length) {\n           \n            this.navInfo.catTitle = this.props.catinfo[0].title;\n            this.navInfo.catId = this.props.catinfo[0].cat_id;\n                \n            \n        }\n    }\n\n\n    renderImage = (subCat) => {\n        if (this.props.catitems) {\n            \n            const firstItem = this.props.catitems.find( item => item.subcategory_ref == subCat.subcat_id);\n            \n            if (firstItem) {\n                console.log(firstItem._id);\n                return (\n                    <img src={`/images/items/${firstItem._id}/sq_thumbnail/0.jpg`} \n                                alt={subCat.title} \n                                onError={this.addDefaultImg} />\n                    )\n            } else {\n                return <img src={`/images/default/default.jpg`} alt=\"default item image\" />\n            }\n           \n                \n            \n        }\n    }\n\n\n    renderSubcats = () => {\n        return (\n           \n                    <div className=\"cat_grid_row\">\n                        <div className=\"cat_grid_column\">\n\n                            {this.state.theseSubcats && this.state.theseSubcats.length ?\n                                \n                                this.state.theseSubcats.map( (subcat, i) => (\n                                \n                                \n                                    <div key={i}>\n                                        <figure>\n                                            {this.renderImage(subcat)}\n                                            <figcaption>{subcat.title}</figcaption>\n                                        </figure>\n                                    </div>\n                                ))\n                            : null }\n\n\n                        </div>\n                    </div>\n            \n        )\n    }\n\n\n\n\n\n  \n\n\n    render() {\n        let catinfo = this.props.catinfo;\n        \n        return (\n            <div className=\"main_view\">\n                <div className=\"cat_view\">\n\n                    <NavigationBar navinfo={this.navInfo}/>\n\n                    { catinfo && catinfo.length > 0 ? \n                        <h2 className=\"title\">{catinfo[0].title}</h2>\n                    :null\n                    }\n\n\n                    {this.renderSubcats()}\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        catinfo: state.cats.catinfo,\n        subcats: state.cats.subcats,\n        catitems: state.cats.catitems\n        \n    }\n}\n\n\nexport default connect(mapStateToProps)(CatView)"]},"metadata":{},"sourceType":"module"}