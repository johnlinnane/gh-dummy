{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/components/Categories/cat_view.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getItemsByCat, getCatById } from '../../actions';\nimport PanelView from '../PanelView/panel_view';\nimport NavigationBar from '../../widgetsUI/navigation';\n\nclass CatView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      info: []\n    };\n    this.navInfo = {\n      catTitle: null,\n      catId: null,\n      subCatTitle: null,\n      subCatId: null,\n      type: 'Categories'\n    };\n\n    this.getCatName = catId => {\n      if (this.props.cats && this.props.cats.length) {\n        this.props.cats.map(cat => {\n          if (cat.cat_id == catId[0]) {\n            // console.log(cat.title);\n            this.navInfo.catTitle = cat.title;\n            this.navInfo.catId = cat.cat_id;\n          }\n        });\n      }\n    };\n\n    this.getSubCatName = subCatId => {\n      // console.log(subCatId);\n      if (this.props.subcats && this.props.subcats.length) {\n        this.props.subcats.map(subcat => {\n          if (subcat.subcat_id == subCatId[0]) {\n            // console.log(cat.title);\n            this.navInfo.subCatTitle = subcat.title;\n            this.navInfo.subCatId = subcat.subcat_id;\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    let catId = this.props.match.params.id;\n    this.props.dispatch(getItemsByCat(catId));\n    this.props.dispatch(getCatById(catId));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.catitems && nextProps.catitems.length) {\n      let tempArray = [];\n      nextProps.catitems.map((item, i) => tempArray.push({\n        // src: `/images/sq_thumb/${item.omeka.omeka_id}.jpg`,\n        src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n        caption: item.title,\n        link: `/items/${item._id}`\n      }));\n\n      if (tempArray.length) {\n        this.setState({\n          info: [...tempArray]\n        });\n      }\n    }\n\n    if (this.props.catinfo && this.props.catinfo.length) {\n      this.setState({\n        navInfo: {\n          catTitle: this.props.catinfo[0].title,\n          catId: this.props.catinfo[0].cat_id\n        }\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    let catinfo = this.props.catinfo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cat_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      navinfo: this.state.navInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), catinfo && catinfo.length > 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, catinfo[0].title) : null, /*#__PURE__*/React.createElement(PanelView, {\n      info: this.state.info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    catitems: state.cats.catitems,\n    catinfo: state.cats.catinfo\n  };\n}\n\nexport default connect(mapStateToProps)(CatView);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Categories/cat_view.js"],"names":["React","Component","connect","getItemsByCat","getCatById","PanelView","NavigationBar","CatView","state","info","navInfo","catTitle","catId","subCatTitle","subCatId","type","getCatName","props","cats","length","map","cat","cat_id","title","getSubCatName","subcats","subcat","subcat_id","componentDidMount","match","params","id","dispatch","componentWillReceiveProps","nextProps","catitems","tempArray","item","i","push","src","_id","caption","link","setState","catinfo","render","console","log","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getItemsByCat, getCatById } from '../../actions';\nimport PanelView from '../PanelView/panel_view';\nimport NavigationBar from '../../widgetsUI/navigation';\n\n\nclass CatView  extends Component {\n    \n\n    componentDidMount() {\n        let catId = this.props.match.params.id\n        this.props.dispatch(getItemsByCat(catId));\n        this.props.dispatch(getCatById(catId));\n    }\n\n\n    state = {\n        info: []\n    }\n\n    \n    navInfo = {\n        catTitle: null,\n        catId: null,\n        subCatTitle: null,\n        subCatId: null,\n        type: 'Categories'\n    }\n\n    componentWillReceiveProps(nextProps) {\n        \n        if (nextProps.catitems && nextProps.catitems.length) {\n            let tempArray = []\n            nextProps.catitems.map( (item, i) => (\n                    tempArray.push(\n                        {\n                            // src: `/images/sq_thumb/${item.omeka.omeka_id}.jpg`,\n                            src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n                            caption: item.title,\n                            link: `/items/${item._id}` \n                        }\n                    )\n            ))\n            if (tempArray.length) {\n                this.setState({ info: [...tempArray]});\n            }\n        }\n        if (this.props.catinfo && this.props.catinfo.length) {\n            this.setState({\n                navInfo: {\n                    catTitle: this.props.catinfo[0].title,\n                    catId: this.props.catinfo[0].cat_id\n                }\n            })\n        }\n    }\n\n    getCatName = (catId) => {\n        if (this.props.cats && this.props.cats.length) {\n            this.props.cats.map( cat => {\n                \n                if (cat.cat_id == catId[0]) {\n                    // console.log(cat.title);\n                    this.navInfo.catTitle = cat.title;\n                    this.navInfo.catId = cat.cat_id;\n\n                }\n            })\n        }\n    }\n\n    getSubCatName = (subCatId) => {\n        // console.log(subCatId);\n        if (this.props.subcats && this.props.subcats.length) {\n            this.props.subcats.map( subcat => {\n                \n                if (subcat.subcat_id == subCatId[0]) {\n                    // console.log(cat.title);\n                    this.navInfo.subCatTitle = subcat.title;\n                    this.navInfo.subCatId = subcat.subcat_id;\n\n                }\n            })\n        }\n    }\n\n\n\n    render() {\n        console.log(this.props)\n\n        let catinfo = this.props.catinfo;\n\n        return (\n            \n            <div className=\"cat_view\">\n                <NavigationBar navinfo={this.state.navInfo}/>\n                { catinfo && catinfo.length > 0? \n                    <h2 className=\"title\">{catinfo[0].title}</h2>\n                :null\n                }\n\n                <PanelView info={this.state.info}></PanelView>\n\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        catitems: state.cats.catitems,\n        catinfo: state.cats.catinfo\n        \n    }\n}\n\n\nexport default connect(mapStateToProps)(CatView)"]},"metadata":{},"sourceType":"module"}