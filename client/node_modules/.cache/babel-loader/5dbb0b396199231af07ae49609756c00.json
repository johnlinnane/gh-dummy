{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/containers/Admin/cat_images.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Progress } from 'reactstrap'; // import { getItemById, deleteItem } from '../../actions';\n\nimport { getAllCats } from '../../actions';\n\nclass CatImages extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {\n        this.setState({\n          selectedFile: files\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n\n      if (this.state.selectedFile) {\n        for (var x = 0; x < this.state.selectedFile.length; x++) {\n          data.append('file', this.state.selectedFile[x]);\n        } // axios.post(`http://localhost:8000/upload?id=${this.state.formdata._id}`, data, { \n\n\n        axios.post(`http://localhost:8000/upload-cat/${this.state.formdata._id}`, data, {\n          // receive two parameter endpoint url ,form data \n          onUploadProgress: ProgressEvent => {\n            this.setState({\n              loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n            });\n          }\n        }).then(res => {\n          // then print response status\n          // console.log(res.config.data.id);\n          // console.log(res.statusText);\n          console.log(res);\n          toast.success('upload success');\n          alert('Files uploaded successfully');\n        }).catch(err => {\n          toast.error('upload fail');\n        });\n      }\n\n      this.redirectUser(`/items/${this.props.items.item._id}`);\n    };\n\n    this.maxSelectFile = event => {\n      // console.log(event);\n      let files = event.target.files; // create file object\n\n      if (files.length > 6) {\n        const msg = 'Only 6 images can be uploaded at a time';\n        event.target.value = null; // discard selected file\n\n        console.log(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = ''; // list allow mime type\n\n      const types = ['image/png', 'image/jpeg', 'image/gif', 'application/pdf']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // loop create toast massage\n        event.target.value = null;\n        toast.error(err[z]);\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 15000;\n      let err = \"\";\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err += files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.redirectUser = url => {\n      setTimeout(() => {\n        this.props.history.push(url);\n      }, 1000);\n    };\n  }\n\n  // state = {\n  //     formdata:{\n  //         _id:this.props.match.params.id,\n  //         title: '',\n  //         creator: '',\n  //         subject: '',\n  //         description: '',\n  //         source: '',\n  //         date_created: '',\n  //         contributor: '',\n  //         // collection_id: '',     \n  //         item_format: '',\n  //         materials: '',\n  //         physical_dimensions: '',\n  //         pages: '',        \n  //         editor: '',\n  //         publisher: '',\n  //         further_info: '',\n  //         language: '',\n  //         reference: '',\n  //         rights: '',\n  //         file_format: '',\n  //         address: '',\n  //         subcategory_ref: '',\n  //         external_link: {\n  //             url: '',\n  //             text: ''\n  //         },\n  //         geo: {\n  //             address: ''\n  //         }\n  //     },\n  //     selectedFile: null,\n  //     loaded: 0\n  // }\n  componentDidMount() {\n    this.props.dispatch(getAllCats());\n  }\n\n  componentDidUpdate(prevProps, prevState) {} // deletePost = () => {\n  //     this.props.dispatch(deleteItem(this.state.formdata._id));\n  //     this.props.history.push('/user/all-items');\n  // }\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //     let formdata = prevState.formdata;\n  //     if (nextProps.items.item ) {\n  //         let item = nextProps.items.item;\n  //         formdata = {\n  //             ...formdata,\n  //             _id:item._id,\n  //             title:item.title,  //\n  //             creator:item.creator,  //\n  //             description:item.description,  //\n  //             pages:item.pages,  //\n  //             source:item.source,   //\n  //             subject: item.subject,\n  //             date_created: item.date_created,\n  //             contributor: item.contributor,\n  //             item_format: item.item_format,\n  //             materials: item.materials,\n  //             physical_dimensions: item.physical_dimensions,\n  //             editor: item.editor,\n  //             publisher: item.publisher,\n  //             further_info: item.further_info,\n  //             language: item.language,\n  //             reference: item.reference,\n  //             rights: item.rights,\n  //             file_format: item.file_format,\n  //             subcategory_ref: item.subcategory_ref\n  //         }\n  //     }\n  //     return {\n  //         formdata: formdata\n  //     }\n  // }\n  // *************** UPDLOAD LOGIC ********************\n\n\n  // addDefaultImg = (ev) => {\n  //     const newImg = '/images/default/default.jpg';\n  //     if (ev.target.src !== newImg) {\n  //         ev.target.src = newImg\n  //     }  \n  // } \n  render() {\n    // console.log(this.state);\n    let items = this.props.items;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article edit_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }, \"Change Category Image:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      multiple: true,\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }\n    }, \"Finish\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Progress, {\n      max: \"100\",\n      color: \"success\",\n      value: this.state.loaded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    }, this.state.loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 33\n      }\n    }, Math.round(this.state.loaded, 2), \"%\") : null))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cats: state.cats.cats\n  };\n}\n\nexport default connect(mapStateToProps)(CatImages);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/containers/Admin/cat_images.js"],"names":["React","PureComponent","connect","Link","axios","ToastContainer","toast","Progress","getAllCats","CatImages","onChangeHandler","event","files","target","maxSelectFile","checkMimeType","setState","selectedFile","onClickHandler","data","FormData","state","x","length","append","post","formdata","_id","onUploadProgress","ProgressEvent","loaded","total","then","res","console","log","success","alert","catch","err","error","redirectUser","props","items","item","msg","value","types","every","type","z","checkFileSize","size","url","setTimeout","history","push","componentDidMount","dispatch","componentDidUpdate","prevProps","prevState","render","Math","round","mapStateToProps","cats"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport {Progress} from 'reactstrap';\n\n// import { getItemById, deleteItem } from '../../actions';\nimport { getAllCats } from '../../actions';\n\n\nclass CatImages extends PureComponent {\n\n    // state = {\n    //     formdata:{\n    //         _id:this.props.match.params.id,\n    //         title: '',\n    //         creator: '',\n    //         subject: '',\n    //         description: '',\n    //         source: '',\n    //         date_created: '',\n            \n    //         contributor: '',\n    //         // collection_id: '',     \n    //         item_format: '',\n    //         materials: '',\n    //         physical_dimensions: '',\n    //         pages: '',        \n    //         editor: '',\n    //         publisher: '',\n    //         further_info: '',\n    //         language: '',\n    //         reference: '',\n    //         rights: '',\n    //         file_format: '',\n    //         address: '',\n    //         subcategory_ref: '',\n       \n    //         external_link: {\n    //             url: '',\n    //             text: ''\n    //         },\n    //         geo: {\n    //             address: ''\n    //         }\n    //     },\n    //     selectedFile: null,\n    //     loaded: 0\n    \n    // }\n\n    componentDidMount() {\n        this.props.dispatch(getAllCats())\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n\n    }    \n    // deletePost = () => {\n    //     this.props.dispatch(deleteItem(this.state.formdata._id));\n    //     this.props.history.push('/user/all-items');\n    // }\n\n\n   \n\n\n    // static getDerivedStateFromProps(nextProps, prevState) {\n\n    //     let formdata = prevState.formdata;\n    //     if (nextProps.items.item ) {\n\n    //         let item = nextProps.items.item;\n\n    //         formdata = {\n    //             ...formdata,\n    //             _id:item._id,\n    //             title:item.title,  //\n    //             creator:item.creator,  //\n    //             description:item.description,  //\n    //             pages:item.pages,  //\n    //             source:item.source,   //\n\n    //             subject: item.subject,\n    //             date_created: item.date_created,\n    //             contributor: item.contributor,\n    //             item_format: item.item_format,\n    //             materials: item.materials,\n    //             physical_dimensions: item.physical_dimensions,\n    //             editor: item.editor,\n    //             publisher: item.publisher,\n    //             further_info: item.further_info,\n    //             language: item.language,\n    //             reference: item.reference,\n    //             rights: item.rights,\n    //             file_format: item.file_format,\n    //             subcategory_ref: item.subcategory_ref\n    //         }\n    //     }\n    //     return {\n    //         formdata: formdata\n    //     }\n    // }\n\n\n    // *************** UPDLOAD LOGIC ********************\n\n    onChangeHandler = (event) => {\n\n\n        var files = event.target.files;\n\n        if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {  \n            this.setState({\n                selectedFile: files\n            })\n        }\n    }\n\n\n\n    onClickHandler = () => {\n        const data = new FormData() \n        \n        if (this.state.selectedFile) {\n            for(var x = 0; x<this.state.selectedFile.length; x++) {\n                data.append('file', this.state.selectedFile[x])\n            }\n\n\n            // axios.post(`http://localhost:8000/upload?id=${this.state.formdata._id}`, data, { \n                axios.post(`http://localhost:8000/upload-cat/${this.state.formdata._id}`, data, { \n                    // receive two parameter endpoint url ,form data \n                    onUploadProgress: ProgressEvent => {\n                        this.setState({\n                            loaded: (ProgressEvent.loaded / ProgressEvent.total*100)\n                        })\n                    }\n                })\n                .then(res => { // then print response status\n                    // console.log(res.config.data.id);\n                    // console.log(res.statusText);\n                    console.log(res);\n                    toast.success('upload success')\n                    alert('Files uploaded successfully')\n                })\n                .catch(err => { \n                    toast.error('upload fail')\n                })\n        }\n        this.redirectUser(`/items/${this.props.items.item._id}`)\n\n\n    }\n\n    maxSelectFile=(event)=>{\n\n        // console.log(event);\n\n        let files = event.target.files // create file object\n            if (files.length > 6) { \n               const msg = 'Only 6 images can be uploaded at a time'\n               event.target.value = null // discard selected file\n               console.log(msg)\n              return false;\n     \n          }\n        return true;\n     \n    }\n\n    checkMimeType=(event)=>{\n        //getting file object\n        let files = event.target.files \n        //define message container\n        let err = ''\n        // list allow mime type\n        const types = ['image/png', 'image/jpeg', 'image/gif', 'application/pdf']\n        // loop access array\n        for(var x = 0; x<files.length; x++) {\n         // compare file type find doesn't matach\n            if (types.every(type => files[x].type !== type)) {\n                // create error message and assign to container   \n                err += files[x].type+' is not a supported format\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) { // loop create toast massage\n            event.target.value = null \n            toast.error(err[z])\n        }\n        return true;\n    }\n\n    checkFileSize=(event)=>{\n        let files = event.target.files\n        let size = 15000 \n        let err = \"\"; \n\n        for(var x = 0; x<files.length; x++) {\n            if (files[x].size > size) {\n                err += files[x].type+'is too large, please pick a smaller file\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) {\n            toast.error(err[z])\n            event.target.value = null\n        }\n        return true;\n   \n    }    \n\n    // ****************************************************\n\n\n    redirectUser = (url) => {\n        setTimeout(() => {\n            this.props.history.push(url)\n        }, 1000)\n    }\n\n    // addDefaultImg = (ev) => {\n    //     const newImg = '/images/default/default.jpg';\n    //     if (ev.target.src !== newImg) {\n    //         ev.target.src = newImg\n    //     }  \n    // } \n\n    render() {\n        // console.log(this.state);\n        let items = this.props.items;\n\n\n        return (\n            \n            <div className=\"main_view\">\n                <div className=\"rl_container article edit_page\">\n                        \n                    <h2>Change Category Image:</h2>\n\n                    {/* {this.props.items && this.props.items.item ?\n                        <span>Item: {this.props.items.item.title}</span>\n                    : null } */}\n\n\n                    {/* <img src={`/images/items/${this.props.match.params.id}/sq_thumbnail/0.jpg`} alt=\"Item\" onError={this.addDefaultImg}/> */}\n\n\n                    <div className=\"form_element\">\n                        <input type=\"file\" className=\"form-control\" multiple name=\"file\" onChange={this.onChangeHandler}/>\n                        <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Finish</button> \n                    </div>\n\n\n                    <div className=\"form-group\">\n                        <Progress max=\"100\" color=\"success\" value={this.state.loaded} >\n                            { this.state.loaded ?\n                                <div>    \n                                    {Math.round(this.state.loaded,2)}\n                                    %\n                                </div>\n                            :null}\n                        </Progress>\n                    </div>\n\n                    {/* <div className=\"form-group\">\n                        <ToastContainer />\n                    </div> */}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        cats:state.cats.cats\n\n    }\n}\n\n\nexport default connect(mapStateToProps)(CatImages)\n\n\n"]},"metadata":{},"sourceType":"module"}