{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item_3_file.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getItemById, deleteItem } from '../../actions';\n\nclass EditItemFile extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        _id: this.props.match.params.id,\n        title: '',\n        creator: '',\n        subject: '',\n        description: '',\n        source: '',\n        date_created: '',\n        contributor: '',\n        // collection_id: '',     \n        item_format: '',\n        materials: '',\n        physical_dimensions: '',\n        pages: '',\n        editor: '',\n        publisher: '',\n        further_info: '',\n        language: '',\n        reference: '',\n        rights: '',\n        file_format: '',\n        address: '',\n        subcategory_ref: '',\n        external_link: {\n          url: '',\n          text: ''\n        },\n        geo: {\n          address: ''\n        }\n      },\n      selectedFile: null,\n      loaded: 0\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.state.formdata._id));\n      this.props.history.push('/user/all-items');\n    };\n\n    this.redirectUser = () => {\n      setTimeout(() => {\n        this.props.history.push('/user/all-items');\n      }, 1000);\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {\n        this.setState({\n          selectedFile: files\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n\n      if (this.state.selectedFile) {\n        for (var x = 0; x < this.state.selectedFile.length; x++) {\n          data.append('file', this.state.selectedFile[x]);\n        }\n\n        axios.post(`http://localhost:8000/upload`, data, {\n          // receive two parameter endpoint url ,form data \n          onUploadProgress: ProgressEvent => {\n            this.setState({\n              loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n            });\n          }\n        }).then(res => {\n          // then print response status\n          console.log(res.statusText);\n          toast.success('upload success');\n          alert('Files uploaded successfully');\n        }).catch(err => {\n          toast.error('upload fail');\n        });\n      } // this.redirectUser(`/items/${item.itemId}`)\n\n    };\n\n    this.maxSelectFile = event => {\n      let files = event.target.files; // create file object\n\n      if (files.length > 6) {\n        const msg = 'Only 6 images can be uploaded at a time';\n        event.target.value = null; // discard selected file\n\n        console.log(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = ''; // list allow mime type\n\n      const types = ['image/png', 'image/jpeg', 'image/gif', 'application/pdf']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // loop create toast massage\n        event.target.value = null;\n        toast.error(err[z]);\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 15000;\n      let err = \"\";\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err += files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.redirectUser = url => {\n      setTimeout(() => {\n        this.props.history.push(url);\n      }, 1000);\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById(this.props.match.params.id));\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // *********** GENERAL FORM STUFF *****************************\n    let formdata = prevState.formdata;\n\n    if (nextProps.items.item) {\n      let item = nextProps.items.item;\n      formdata = { ...formdata,\n        _id: item._id,\n        title: item.title,\n        //\n        creator: item.creator,\n        //\n        description: item.description,\n        //\n        pages: item.pages,\n        //\n        source: item.source,\n        //\n        subject: item.subject,\n        date_created: item.date_created,\n        contributor: item.contributor,\n        item_format: item.item_format,\n        materials: item.materials,\n        physical_dimensions: item.physical_dimensions,\n        editor: item.editor,\n        publisher: item.publisher,\n        further_info: item.further_info,\n        language: item.language,\n        reference: item.reference,\n        rights: item.rights,\n        file_format: item.file_format,\n        subcategory_ref: item.subcategory_ref\n      };\n    }\n\n    return {\n      formdata: formdata\n    };\n  } // *************** UPDLOAD LOGIC ********************\n\n\n  render() {\n    console.log(props);\n    let items = this.props.items;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article edit_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, items.updateItem && items.item._id ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 29\n      }\n    }, \"Post updated, \", /*#__PURE__*/React.createElement(Link, {\n      to: `/items/${items.item._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 47\n      }\n    }, \"Click here to see your post\")) : null, items.itemDeleted ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red_tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 29\n      }\n    }, \"Item Deleted\", this.redirectUser()) : null, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    }, \"Upload new files:\"), this.props.items && this.props.items.item ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }\n    }, this.props.items.item.title) : null, /*#__PURE__*/React.createElement(\"img\", {\n      src: `/images/items/${this.props.match.params.id}/sq_thumbnail/0.jpg`,\n      alt: \"Item\",\n      onError: this.addDefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      multiple: true,\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 41\n      }\n    }, \"Finish\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items // colls:state.collections.colls,\n    // cats:state.cats.cats,\n    // subcats:state.cats.subcats\n\n  };\n}\n\nexport default connect(mapStateToProps)(EditItemFile);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item_3_file.js"],"names":["React","PureComponent","connect","Link","axios","ToastContainer","toast","getItemById","deleteItem","EditItemFile","state","formdata","_id","props","match","params","id","title","creator","subject","description","source","date_created","contributor","item_format","materials","physical_dimensions","pages","editor","publisher","further_info","language","reference","rights","file_format","address","subcategory_ref","external_link","url","text","geo","selectedFile","loaded","deletePost","dispatch","history","push","redirectUser","setTimeout","onChangeHandler","event","files","target","maxSelectFile","checkMimeType","setState","onClickHandler","data","FormData","x","length","append","post","onUploadProgress","ProgressEvent","total","then","res","console","log","statusText","success","alert","catch","err","error","msg","value","types","every","type","z","checkFileSize","size","addDefaultImg","ev","newImg","src","componentDidMount","getDerivedStateFromProps","nextProps","prevState","items","item","render","updateItem","itemDeleted","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\n\n\nimport { getItemById, deleteItem } from '../../actions';\n\n\n\nclass EditItemFile extends PureComponent {\n\n\n    state = {\n        formdata:{\n            _id:this.props.match.params.id,\n            title: '',\n            creator: '',\n            subject: '',\n            description: '',\n            source: '',\n            date_created: '',\n            \n            contributor: '',\n            // collection_id: '',     \n            item_format: '',\n            materials: '',\n            physical_dimensions: '',\n            pages: '',        \n            editor: '',\n            publisher: '',\n            further_info: '',\n            language: '',\n            reference: '',\n            rights: '',\n            file_format: '',\n            address: '',\n            subcategory_ref: '',\n       \n            external_link: {\n                url: '',\n                text: ''\n            },\n            geo: {\n                address: ''\n            }\n        },\n        selectedFile: null,\n        loaded: 0\n    \n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(getItemById(this.props.match.params.id))\n\n    }\n\n\n\n\n\n    \n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.state.formdata._id));\n        this.props.history.push('/user/all-items');\n    }\n\n\n\n    redirectUser = () => {\n        setTimeout(() => {\n            this.props.history.push('/user/all-items')\n        }, 1000)\n    }\n\n\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        \n\n        // *********** GENERAL FORM STUFF *****************************\n        let formdata = prevState.formdata;\n        if (nextProps.items.item ) {\n\n            let item = nextProps.items.item;\n                        \n            \n\n            formdata = {\n                ...formdata,\n                _id:item._id,\n                title:item.title,  //\n                creator:item.creator,  //\n                description:item.description,  //\n                pages:item.pages,  //\n                source:item.source,   //\n\n                subject: item.subject,\n                date_created: item.date_created,\n                contributor: item.contributor,\n                item_format: item.item_format,\n                materials: item.materials,\n                physical_dimensions: item.physical_dimensions,\n                editor: item.editor,\n                publisher: item.publisher,\n                further_info: item.further_info,\n                language: item.language,\n                reference: item.reference,\n                rights: item.rights,\n                file_format: item.file_format,\n                subcategory_ref: item.subcategory_ref\n            }\n            \n        }\n        return {\n            formdata: formdata\n        }\n        \n    }\n\n    // *************** UPDLOAD LOGIC ********************\n\n\n    onChangeHandler = (event) => {\n\n\n        var files = event.target.files;\n\n        if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkMimeType(event)) {  \n            this.setState({\n                selectedFile: files\n            })\n        }\n    }\n\n\n\n    onClickHandler = () => {\n        const data = new FormData() \n        if (this.state.selectedFile) {\n            for(var x = 0; x<this.state.selectedFile.length; x++) {\n                data.append('file', this.state.selectedFile[x])\n            }\n            \n            axios.post(`http://localhost:8000/upload`, data, { \n                    // receive two parameter endpoint url ,form data \n                    onUploadProgress: ProgressEvent => {\n                        this.setState({\n                            loaded: (ProgressEvent.loaded / ProgressEvent.total*100)\n                        })\n                    }\n                })\n                .then(res => { // then print response status\n                    console.log(res.statusText)\n                    toast.success('upload success')\n                    alert('Files uploaded successfully')\n                })\n                .catch(err => { \n                    toast.error('upload fail')\n                })\n        }\n        // this.redirectUser(`/items/${item.itemId}`)\n\n\n    }\n\n    maxSelectFile=(event)=>{\n        let files = event.target.files // create file object\n            if (files.length > 6) { \n               const msg = 'Only 6 images can be uploaded at a time'\n               event.target.value = null // discard selected file\n               console.log(msg)\n              return false;\n     \n          }\n        return true;\n     \n    }\n\n    checkMimeType=(event)=>{\n        //getting file object\n        let files = event.target.files \n        //define message container\n        let err = ''\n        // list allow mime type\n        const types = ['image/png', 'image/jpeg', 'image/gif', 'application/pdf']\n        // loop access array\n        for(var x = 0; x<files.length; x++) {\n         // compare file type find doesn't matach\n            if (types.every(type => files[x].type !== type)) {\n                // create error message and assign to container   \n                err += files[x].type+' is not a supported format\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) { // loop create toast massage\n            event.target.value = null \n            toast.error(err[z])\n        }\n        return true;\n    }\n\n    checkFileSize=(event)=>{\n        let files = event.target.files\n        let size = 15000 \n        let err = \"\"; \n\n        for(var x = 0; x<files.length; x++) {\n            if (files[x].size > size) {\n                err += files[x].type+'is too large, please pick a smaller file\\n';\n            }\n        };\n\n        for(var z = 0; z<err.length; z++) {\n            toast.error(err[z])\n            event.target.value = null\n        }\n        return true;\n   \n    }    \n\n    // ****************************************************\n\n    redirectUser = (url) => {\n        setTimeout(() => {\n            this.props.history.push(url)\n        }, 1000)\n    }\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    } \n\n    render() {\n        console.log(props);\n        let items = this.props.items;\n\n\n        return (\n            \n            \n            <div className=\"rl_container article edit_page\">\n                {/* { this.state.loaded ? */}\n                    \n                    {\n                        items.updateItem && items.item._id ?\n                            <div className=\"edit_confirm\">\n                                Post updated, <Link to={`/items/${items.item._id}`}>\n                                    Click here to see your post\n                                </Link>\n                            </div>\n                        : null\n                    }\n\n\n                    {\n                        items.itemDeleted ?\n                            <div className=\"red_tag\">\n                                Item Deleted    \n                                {this.redirectUser()}\n                            </div>\n\n                        : null\n                    }\n\n\n                        <h2>Upload new files:</h2>\n                        {this.props.items && this.props.items.item ?\n                            <span>{this.props.items.item.title}</span>\n                        : null }\n\n                        <img src={`/images/items/${this.props.match.params.id}/sq_thumbnail/0.jpg`} alt=\"Item\" onError={this.addDefaultImg}/>\n\n\n                                    <div className=\"form_element\">\n                                        <input type=\"file\" className=\"form-control\" multiple name=\"file\" onChange={this.onChangeHandler}/>\n                                        <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Finish</button> \n\n                                    </div>\n                             \n                        \n                      \n\n            </div>\n            \n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items:state.items\n        // colls:state.collections.colls,\n        // cats:state.cats.cats,\n        // subcats:state.cats.subcats\n    }\n}\n\nexport default connect(mapStateToProps)(EditItemFile)\n\n\n"]},"metadata":{},"sourceType":"module"}