{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/react-bootcamp/13_book_shelf/client/src/hoc/auth.js\";\n// check if token is valid\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { auth } from '../actions'; //  this is a post component\n// function that receives a class as an argument\n// returns the component !!\n\nexport default function (ComposedClass) {\n  // make a class to dispatch an action to check if user is authenticated\n  class AuthenticationCheck extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        // display loading logo\n        loading: false\n      };\n    }\n\n    // dispatch an action to check if user is authenticated\n    componentWillMount() {\n      this.props.dispatch(auth());\n    }\n\n    render() {\n      if (this.state.loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"loader\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 24\n          }\n        }, \"Loading...\");\n      } // return the actual route, with the data of the user (from react router)\n\n\n      return /*#__PURE__*/React.createElement(ComposedClass, Object.assign({}, this.props, {\n        user: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }));\n    }\n\n  }\n\n  function mapStateToProps(state) {\n    return {\n      user: state.user\n    };\n  }\n\n  return connect(mapStateToProps)(AuthenticationCheck);\n}","map":{"version":3,"sources":["/Users/johnlinnane/DEV/react-bootcamp/13_book_shelf/client/src/hoc/auth.js"],"names":["React","Component","connect","auth","ComposedClass","AuthenticationCheck","state","loading","componentWillMount","props","dispatch","render","mapStateToProps","user"],"mappings":";AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAyB,aAAzB;AAEA,SAASC,IAAT,QAAqB,YAArB,C,CAEA;AACA;AACA;;AACA,eAAe,UAASC,aAAT,EAAwB;AAEnC;AACA,QAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;AAAA;AAAA;AAAA,WAGxCK,KAHwC,GAGhC;AACJ;AACAC,QAAAA,OAAO,EAAC;AAFJ,OAHgC;AAAA;;AASxC;AACAC,IAAAA,kBAAkB,GAAG;AACjB,WAAKC,KAAL,CAAWC,QAAX,CAAoBP,IAAI,EAAxB;AACH;;AAODQ,IAAAA,MAAM,GAAG;AACL,UAAG,KAAKL,KAAL,CAAWC,OAAd,EAAuB;AACnB,4BAAO;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH,OAHI,CAKL;;;AACA,0BACI,oBAAC,aAAD,oBAAmB,KAAKE,KAAxB;AAA+B,QAAA,IAAI,EAAC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAIH;;AA7BuC;;AAiC5C,WAASG,eAAT,CAAyBN,KAAzB,EAAgC;AAC5B,WAAO;AACHO,MAAAA,IAAI,EAACP,KAAK,CAACO;AADR,KAAP;AAGH;;AACD,SAAOX,OAAO,CAACU,eAAD,CAAP,CAAyBP,mBAAzB,CAAP;AACH","sourcesContent":["\n// check if token is valid\n\nimport React, { Component } from 'react';\nimport { connect } from  'react-redux';\n\nimport { auth } from '../actions';\n\n//  this is a post component\n// function that receives a class as an argument\n// returns the component !!\nexport default function(ComposedClass) {\n\n    // make a class to dispatch an action to check if user is authenticated\n    class AuthenticationCheck extends Component {\n\n\n        state = {\n            // display loading logo\n            loading:false\n        }\n\n\n        // dispatch an action to check if user is authenticated\n        componentWillMount() {\n            this.props.dispatch(auth())\n        }\n\n\n\n\n\n\n        render() {\n            if(this.state.loading) {\n                return <div className=\"loader\">Loading...</div>\n            }\n\n            // return the actual route, with the data of the user (from react router)\n            return(\n                <ComposedClass {...this.props} user=\"\"/>\n\n            )\n        }\n\n    }\n\n    function mapStateToProps(state) {\n        return {\n            user:state.user\n        }\n    }\n    return connect(mapStateToProps)(AuthenticationCheck)\n}\n"]},"metadata":{},"sourceType":"module"}