{"ast":null,"code":"import axios from 'axios';\nexport function getBooks(limit = 10, start = 0, order = 'asc', list = '') {\n  const request = axios.get(`/api/books?limit=${limit}&skip=${start}&order=${order}`).then(response => {\n    if (list) {\n      return [...list, ...response.data];\n    } else {\n      return response.data;\n    }\n  }); // console.log(request);\n\n  return {\n    type: 'GET_BOOKS',\n    payload: request\n  };\n} // two requests inside one action, book and user. user reduxthunk\n\nexport function getBookWithReviewer(id) {\n  // reduxthunk's dispatched function sends payload to reducers whenever we are ready\n  // as an alternative to getBooks\n  const request = axios.get(`/api/getBook?id=${id}`); // return a dispatch function\n\n  return dispatch => {\n    // get the promise, using {{{destructuring}}}\n    request.then(({\n      data\n    }) => {\n      let book = data; // console.log(book);\n\n      axios.get(`/api/getReviewer?id=${book.ownerId}`).then(({\n        data\n      }) => {\n        let response = {\n          book,\n          reviewer: data\n        }; // console.log(response);\n        // only gets executed when ready\n\n        dispatch({\n          type: 'GET_BOOK_W_REVIEWER',\n          payload: response\n        });\n      });\n    });\n  };\n}\nexport function clearBookWithReviewer() {\n  return {\n    type: 'CLEAR_BOOK_W_REVIEWER',\n    payload: {\n      book: {},\n      reviewer: {}\n    }\n  };\n} // book arg is json data\n\nexport function addBook(book) {\n  const request = axios.post('/api/book', book).then(response => response.data);\n  return {\n    type: 'ADD_BOOK',\n    payload: request\n  };\n}\nexport function clearNewBook() {\n  return {\n    type: 'CLEAR_NEWBOOK',\n    payload: null\n  };\n} // get every post of particular user\n\nexport function getUserPosts(userId) {\n  const request = axios.get(`/api/user_posts?user=${userId}`).then(response => response.data);\n  return {\n    type: 'GET_USER_POSTS',\n    payload: request\n  };\n} // * * * * * * * * * *  GET ITEMS  BY USER* * * * * * * * * *  \n\nexport function getUserItems(userId) {\n  const request = axios.get(`/api/user_items?user=${userId}`).then(response => response.data);\n  return {\n    type: 'GET_USER_ITEMS',\n    payload: request\n  };\n} // ******************** EDIT REVIEW ********************\n\nexport function getBook(id) {\n  const request = axios.get(`/api/getBook?id=${id}`).then(response => response.data);\n  return {\n    type: 'GET_BOOK',\n    payload: request\n  };\n}\nexport function updateBook(data) {\n  const request = axios.post(`/api/book_update`, data).then(response => response.data);\n  return {\n    type: 'UPDATE_BOOK',\n    payload: request\n  };\n}\nexport function deleteBook(id) {\n  const request = axios.delete(`/api/delete_book?id=${id}`).then(response => response.data);\n  return {\n    type: 'DELETE_BOOK',\n    payload: request\n  };\n}\nexport function clearBook() {\n  return {\n    type: 'CLEAR_BOOK',\n    payload: {\n      book: null,\n      updateBook: false,\n      postDeleted: false\n    }\n  };\n} // ******************** USER ACTIONS ********************\n\nexport function loginUser({\n  email,\n  password\n}) {\n  const request = axios.post('/api/login', {\n    email,\n    password\n  }).then(response => response.data);\n  return {\n    type: 'USER_LOGIN',\n    payload: request\n  };\n}\nexport function auth() {\n  const request = axios.get('/api/auth').then(response => response.data);\n  return {\n    type: 'USER_AUTH',\n    payload: request\n  };\n}\nexport function getUsers() {\n  const request = axios.get(`/api/users`).then(response => response.data);\n  return {\n    type: 'GET_USER',\n    payload: request\n  };\n} // uses thunk\n\nexport function userRegister(user, userList) {\n  const request = axios.post(`/api/register`, user);\n  return dispatch => {\n    request.then(({\n      data\n    }) => {\n      // if register is wrong, don't send new user\n      let users = data.success ? [...userList, data.user] : userList;\n      let response = {\n        success: data.success,\n        users // result of conditional\n\n      };\n      dispatch({\n        type: 'USER_REGISTER',\n        payload: response\n      });\n    });\n  };\n} // ******************** ITEM ACTIONS ********************\n\nexport function getAllItems() {\n  const request = axios.get(`/api/allItems`).then(response => {\n    return response.data;\n  }); // console.log(request);\n\n  return {\n    type: 'GET_ALL_ITEMS',\n    payload: request\n  };\n}\nexport function getItems(limit = 10, start = 0, order = 'asc', list = '') {\n  const request = axios.get(`/api/items?limit=${limit}&skip=${start}&order=${order}`).then(response => {\n    if (list) {\n      return [...list, ...response.data];\n    } else {\n      return response.data;\n    }\n  }); // console.log(request);\n\n  return {\n    type: 'GET_ITEMS',\n    payload: request\n  };\n} // two requests inside one action, book and user. user reduxthunk\n\nexport function getItemWithContributor(id) {\n  // reduxthunk's dispatched function sends payload to reducers whenever we are ready\n  // as an alternative to getItems\n  const request = axios.get(`/api/getItemById?id=${id}`); // return a dispatch function\n\n  return dispatch => {\n    // get the promise, using {{{destructuring}}}\n    request.then(({\n      data\n    }) => {\n      let item = data; // console.log(item);\n      // axios.get(`/api/getContributor?id=${item.ownerId}`)\n\n      console.log(data); // axios.get(`/api/getContributor?id=${item._id}`)\n\n      axios.get(`/api/getContributor?id=5e99a141fb671004505351b4`).then(({\n        data\n      }) => {\n        let response = {\n          item,\n          // reviewer:data\n          contributor: data\n        }; // console.log(response);\n        // only gets executed when ready\n\n        dispatch({\n          type: 'GET_ITEM_W_CONTRIBUTOR',\n          payload: response\n        });\n      });\n    });\n  };\n}\nexport function clearItemWithContributor() {\n  return {\n    type: 'CLEAR_ITEM_W_REVIEWER',\n    payload: {\n      item: {},\n      reviewer: {}\n    }\n  };\n} // item arg is json data\n\nexport function addItem(item) {\n  const request = axios.post('/api/item', item).then(response => response.data);\n  return {\n    type: 'ADD_ITEM',\n    payload: request\n  };\n}\nexport function clearNewItem() {\n  return {\n    type: 'CLEAR_NEWITEM',\n    payload: null\n  };\n} // // get every post of particular user\n// export function getUserPosts(userId) {\n//     const request = axios.get(`/api/user_posts?user=${userId}`)\n//                         .then(response => response.data);\n//     return {\n//         type:'GET_USER_POSTS',\n//         payload:request\n//     }\n// }\n// * * * * * * * * * *  EDIT ITEMS * * * * * * * * * *  \n\nexport function getItemById(id) {\n  const request = axios.get(`/api/getItemById?id=${id}`).then(response => response.data);\n  return {\n    type: 'GET_ITEM',\n    payload: request\n  };\n}\nexport function updateItem(data) {\n  const request = axios.post(`/api/item_update`, data).then(response => response.data);\n  return {\n    type: 'UPDATE_ITEM',\n    payload: request\n  };\n}\nexport function deleteItem(id) {\n  const request = axios.delete(`/api/delete_item?id=${id}`).then(response => response.data);\n  return {\n    type: 'DELETE_ITEM',\n    payload: request\n  };\n}\nexport function clearItem() {\n  return {\n    type: 'CLEAR_ITEM',\n    payload: {\n      item: null,\n      updateItem: false,\n      postDeleted: false\n    }\n  };\n} // ******************** COLLECTIONS ACTIONS ********************\n\nexport function getAllColls() {\n  const request = axios.get(`/api/collections`).then(response => {\n    return response.data;\n  });\n  return {\n    type: 'GET_ALL_COLLS',\n    payload: request\n  };\n}\nexport function getColl(id) {\n  // console.log('getColl action called');\n  const request = axios.get(`/api/getColl?id=${id}`).then(response => response.data); // console.log(request);\n\n  return {\n    type: 'GET_COLL',\n    payload: request\n  };\n}\nexport function searchItem(key, value) {\n  // console.log('searchItem action called');\n  const request = axios.get(`/api/searchItem?key=${key}&value=${value}`).then(response => response.data); // console.log(request);\n\n  return {\n    type: 'SEARCH_ITEM',\n    payload: request\n  };\n} // decided not to use\n\nexport function getCollWithItems(collId) {\n  const request = axios.get(`/api/getColl?id=${collId}`).then(response => response.data);\n  return dispatch => {\n    request.then(({\n      data\n    }) => {\n      let coll = data;\n      axios.get(`/api/searchItem?id=${collId}`).then(({\n        data\n      }) => {\n        let response = {\n          coll,\n          items: data\n        };\n        dispatch({\n          type: 'GET_COLL_W_ITEMS',\n          payload: response\n        });\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/actions/index.js"],"names":["axios","getBooks","limit","start","order","list","request","get","then","response","data","type","payload","getBookWithReviewer","id","dispatch","book","ownerId","reviewer","clearBookWithReviewer","addBook","post","clearNewBook","getUserPosts","userId","getUserItems","getBook","updateBook","deleteBook","delete","clearBook","postDeleted","loginUser","email","password","auth","getUsers","userRegister","user","userList","users","success","getAllItems","getItems","getItemWithContributor","item","console","log","contributor","clearItemWithContributor","addItem","clearNewItem","getItemById","updateItem","deleteItem","clearItem","getAllColls","getColl","searchItem","key","value","getCollWithItems","collId","coll","items"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n\n\nexport function getBooks(\n    limit = 10,\n    start = 0,\n    order = 'asc',\n    list = ''\n) {\n    const request = axios.get(`/api/books?limit=${limit}&skip=${start}&order=${order}`)\n                        .then(response => {\n                            if(list){\n                                return [...list, ...response.data]\n                            } else {\n                                return response.data\n                            }\n                        })\n\n    // console.log(request);\n\n    return{\n        type:'GET_BOOKS',\n        payload:request\n    }\n}\n\n\n\n\n// two requests inside one action, book and user. user reduxthunk\nexport function getBookWithReviewer(id) {\n\n    // reduxthunk's dispatched function sends payload to reducers whenever we are ready\n    // as an alternative to getBooks\n    const request = axios.get(`/api/getBook?id=${id}`)\n\n    // return a dispatch function\n    return (dispatch) => {\n\n        // get the promise, using {{{destructuring}}}\n        request.then(({data}) => {\n            let book = data;\n            // console.log(book);\n\n            axios.get(`/api/getReviewer?id=${book.ownerId}`)\n                .then(({data}) => {\n                \n                    let response = {\n                        book, \n                        reviewer:data\n                    }\n\n                    // console.log(response);\n\n                    // only gets executed when ready\n                    dispatch({\n                        type:'GET_BOOK_W_REVIEWER',\n                        payload:response\n                    })\n                })\n        })\n    }\n}\n\nexport function clearBookWithReviewer() {\n    return {\n        type:'CLEAR_BOOK_W_REVIEWER',\n        payload:{\n            book:{},\n            reviewer:{}\n        }\n    }\n}\n\n// book arg is json data\nexport function addBook(book) {\n    const request = axios.post('/api/book', book)\n                        .then(response => response.data);\n\n    return {\n        type: 'ADD_BOOK',\n        payload:request\n    }\n}\n\n\nexport function clearNewBook() {\n    return {\n        type:'CLEAR_NEWBOOK',\n        payload:null\n    }\n}\n\n// get every post of particular user\nexport function getUserPosts(userId) {\n    const request = axios.get(`/api/user_posts?user=${userId}`)\n                        .then(response => response.data);\n    return {\n        type:'GET_USER_POSTS',\n        payload:request\n    }\n}\n\n\n\n// * * * * * * * * * *  GET ITEMS  BY USER* * * * * * * * * *  \n\nexport function getUserItems(userId) {\n    const request = axios.get(`/api/user_items?user=${userId}`)\n                        .then(response => response.data);\n    return {\n        type:'GET_USER_ITEMS',\n        payload:request\n    }\n}\n\n\n\n// ******************** EDIT REVIEW ********************\n\nexport function getBook(id) {\n    const request = axios.get(`/api/getBook?id=${id}`)\n                        .then(response => response.data);\n\n    return {\n        type:'GET_BOOK',\n        payload:request\n    }\n}\n\n\nexport function updateBook(data) {\n    const request = axios.post(`/api/book_update`, data)\n                        .then(response => response.data);\n    return {\n        type:'UPDATE_BOOK',\n        payload:request\n    }\n}\n\nexport function deleteBook(id) {\n    const request = axios.delete(`/api/delete_book?id=${id}`)\n                        .then(response => response.data)\n    return {\n        type:'DELETE_BOOK',\n        payload:request\n    }\n}\n\nexport function clearBook() {\n    return {\n        type:'CLEAR_BOOK',\n        payload: {\n            book: null,\n            updateBook:false,\n            postDeleted:false\n        }\n    }\n}\n\n\n\n// ******************** USER ACTIONS ********************\n\nexport function loginUser({email, password}) {\n\n    const request = axios.post('/api/login', {email, password})\n                        .then(response => response.data);\n\n    return {\n        type:'USER_LOGIN',\n        payload:request\n    }\n}\n\n\nexport function auth() {\n    const request = axios.get('/api/auth') \n                        .then(response => response.data);\n\n    return {\n        type:'USER_AUTH',\n        payload:request\n    }\n\n}\n\n\n\nexport function getUsers() {\n    const request = axios.get(`/api/users`)\n                        .then(response => response.data);\n\n    return {\n        type:'GET_USER',\n        payload:request\n    }\n\n}\n\n// uses thunk\nexport function userRegister(user, userList) {\n    const request = axios.post(`/api/register`, user);\n\n    return (dispatch) => {\n        request.then(({data}) => {\n\n            // if register is wrong, don't send new user\n            let users = data.success ? [...userList, data.user] : userList;\n\n            let response = {\n                success:data.success,\n                users    // result of conditional\n            }\n\n            dispatch({\n                type:'USER_REGISTER',\n                payload:response\n            })\n        })\n    }\n}\n\n\n\n\n// ******************** ITEM ACTIONS ********************\n\n\nexport function getAllItems() {\n    const request = axios.get(`/api/allItems`)\n                        .then(response => {\n                                return response.data\n                            }\n                        );\n\n    // console.log(request);\n\n    return {\n        type:'GET_ALL_ITEMS',\n        payload:request\n    }\n}\n\n\n\n\nexport function getItems(\n    limit = 10,\n    start = 0,\n    order = 'asc',\n    list = ''\n) {\n    const request = axios.get(`/api/items?limit=${limit}&skip=${start}&order=${order}`)\n                        .then(response => {\n                            if(list){\n                                return [...list, ...response.data]\n                            } else {\n                                return response.data\n                            }\n                        })\n\n    // console.log(request);\n\n    return{\n        type:'GET_ITEMS',\n        payload:request\n    }\n}\n\n\n\n\n// two requests inside one action, book and user. user reduxthunk\nexport function getItemWithContributor(id) {\n\n    // reduxthunk's dispatched function sends payload to reducers whenever we are ready\n    // as an alternative to getItems\n    const request = axios.get(`/api/getItemById?id=${id}`)\n\n    // return a dispatch function\n    return (dispatch) => {\n\n        // get the promise, using {{{destructuring}}}\n        request.then(({data}) => {\n            let item = data;\n            // console.log(item);\n\n            // axios.get(`/api/getContributor?id=${item.ownerId}`)\n            console.log(data);\n\n            // axios.get(`/api/getContributor?id=${item._id}`)\n            axios.get(`/api/getContributor?id=5e99a141fb671004505351b4`)\n\n                .then(({data}) => {\n                \n                    let response = {\n                        item, \n                        // reviewer:data\n                        contributor:data\n                    }\n\n                    // console.log(response);\n\n                    // only gets executed when ready\n                    dispatch({\n                        type:'GET_ITEM_W_CONTRIBUTOR',\n                        payload:response\n                    })\n                })\n        })\n    }\n}\n\nexport function clearItemWithContributor() {\n    return {\n        type:'CLEAR_ITEM_W_REVIEWER',\n        payload:{\n            item:{},\n            reviewer:{}\n        }\n    }\n}\n\n// item arg is json data\nexport function addItem(item) {\n    const request = axios.post('/api/item', item)\n                        .then(response => response.data);\n\n    return {\n        type: 'ADD_ITEM',\n        payload:request\n    }\n}\n\n\nexport function clearNewItem() {\n    return {\n        type:'CLEAR_NEWITEM',\n        payload:null\n    }\n}\n\n// // get every post of particular user\n// export function getUserPosts(userId) {\n//     const request = axios.get(`/api/user_posts?user=${userId}`)\n//                         .then(response => response.data);\n//     return {\n//         type:'GET_USER_POSTS',\n//         payload:request\n//     }\n// }\n\n\n// * * * * * * * * * *  EDIT ITEMS * * * * * * * * * *  \n\nexport function getItemById(id) {\n    const request = axios.get(`/api/getItemById?id=${id}`)\n                        .then(response => response.data);\n\n    return {\n        type:'GET_ITEM',\n        payload:request\n    }\n}\n\n\nexport function updateItem(data) {\n    const request = axios.post(`/api/item_update`, data)\n                        .then(response => response.data);\n    return {\n        type:'UPDATE_ITEM',\n        payload:request\n    }\n}\n\nexport function deleteItem(id) {\n    const request = axios.delete(`/api/delete_item?id=${id}`)\n                        .then(response => response.data)\n    return {\n        type:'DELETE_ITEM',\n        payload:request\n    }\n}\n\nexport function clearItem() {\n    return {\n        type:'CLEAR_ITEM',\n        payload: {\n            item: null,\n            updateItem:false,\n            postDeleted:false\n        }\n    }\n}\n\n\n\n\n// ******************** COLLECTIONS ACTIONS ********************\n\n\nexport function getAllColls() {\n    const request = axios.get(`/api/collections`)\n                        .then(response => {\n                                return response.data\n                            }\n                        );\nreturn {\n        type:'GET_ALL_COLLS',\n        payload:request\n    }\n}\n\n\n\n\n\nexport function getColl(id) {\n    // console.log('getColl action called');\n    const request = axios.get(`/api/getColl?id=${id}`)\n                        .then(response => response.data);\n\n    // console.log(request);\n\n\n    return {\n        type:'GET_COLL',\n        payload:request\n    }\n}\n\n\nexport function searchItem(key, value) {\n    // console.log('searchItem action called');\n\n    const request = axios.get(`/api/searchItem?key=${key}&value=${value}`)\n    .then(response => response.data);\n\n    // console.log(request);\n\n    return {\n        type:'SEARCH_ITEM',\n        payload:request\n    }\n\n\n}\n\n\n// decided not to use\nexport function getCollWithItems(collId) {\n\n\n    const request = axios.get(`/api/getColl?id=${collId}`)\n        .then(response => response.data);\n\n\n    return (dispatch) => {\n        request.then( ({data}) => {\n            let coll = data;\n\n            axios.get(`/api/searchItem?id=${collId}`)\n                .then( ({data}) => {\n                    let response = {\n                        coll,\n                        items:data\n                    }\n                    dispatch({\n                        type:'GET_COLL_W_ITEMS',\n                        payload:response\n                    })\n                })\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}