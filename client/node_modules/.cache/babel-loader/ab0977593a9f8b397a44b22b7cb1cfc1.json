{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { WithContext as ReactTags } from 'react-tag-input';\nconst KeyCodes = {\n  comma: 188,\n  enter: 13\n};\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nclass Sandbox extends React.Component {//     constructor(props) {\n  //         super(props);\n  //         this.state = {\n  //             tags: [\n  //                 { id: \"Thailand\", text: \"Thailand\" },\n  //                 { id: \"India\", text: \"India\" }\n  //              ],\n  //             suggestions: [\n  //                 { id: 'USA', text: 'USA' },\n  //                 { id: 'Germany', text: 'Germany' },\n  //                 { id: 'Austria', text: 'Austria' },\n  //                 { id: 'Costa Rica', text: 'Costa Rica' },\n  //                 { id: 'Sri Lanka', text: 'Sri Lanka' },\n  //                 { id: 'Thailand', text: 'Thailand' }\n  //              ]\n  //         };\n  //         this.handleDelete = this.handleDelete.bind(this);\n  //         this.handleAddition = this.handleAddition.bind(this);\n  //         this.handleDrag = this.handleDrag.bind(this);\n  //     }\n  //     handleDelete(i) {\n  //         const { tags } = this.state;\n  //         this.setState({\n  //          tags: tags.filter((tag, index) => index !== i),\n  //         });\n  //     }\n  //     handleAddition(tag) {\n  //         this.setState(state => ({ tags: [...state.tags, tag] }));\n  //     }\n  //     handleDrag(tag, currPos, newPos) {\n  //         const tags = [...this.state.tags];\n  //         const newTags = tags.slice();\n  //         newTags.splice(currPos, 1);\n  //         newTags.splice(newPos, 0, tag);\n  //         // re-render\n  //         this.setState({ tags: newTags });\n  //     }\n  //     render() {\n  //         const { tags, suggestions } = this.state;\n  //         return (\n  //             <div>\n  //                 <ReactTags tags={tags}\n  //                     suggestions={suggestions}\n  //                     handleDelete={this.handleDelete}\n  //                     handleAddition={this.handleAddition}\n  //                     handleDrag={this.handleDrag}\n  //                     delimiters={delimiters} />\n  //             </div>\n  //         )\n  //     }\n}\n\n;\nexport default Sandbox;","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js"],"names":["React","ReactDOM","WithContext","ReactTags","KeyCodes","comma","enter","delimiters","Sandbox","Component"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAW,IAAIC,SAAxB,QAAyC,iBAAzC;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE,GADQ;AAEfC,EAAAA,KAAK,EAAE;AAFQ,CAAjB;AAKA,MAAMC,UAAU,GAAG,CAACH,QAAQ,CAACC,KAAV,EAAiBD,QAAQ,CAACE,KAA1B,CAAnB;;AAEA,MAAME,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAsC,CACtC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDsC;;AA0DrC;AAED,eAAeD,OAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { WithContext as ReactTags } from 'react-tag-input';\n \nconst KeyCodes = {\n  comma: 188,\n  enter: 13,\n};\n \nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n \nclass Sandbox extends React.Component {\n//     constructor(props) {\n//         super(props);\n \n//         this.state = {\n//             tags: [\n//                 { id: \"Thailand\", text: \"Thailand\" },\n//                 { id: \"India\", text: \"India\" }\n//              ],\n//             suggestions: [\n//                 { id: 'USA', text: 'USA' },\n//                 { id: 'Germany', text: 'Germany' },\n//                 { id: 'Austria', text: 'Austria' },\n//                 { id: 'Costa Rica', text: 'Costa Rica' },\n//                 { id: 'Sri Lanka', text: 'Sri Lanka' },\n//                 { id: 'Thailand', text: 'Thailand' }\n//              ]\n//         };\n//         this.handleDelete = this.handleDelete.bind(this);\n//         this.handleAddition = this.handleAddition.bind(this);\n//         this.handleDrag = this.handleDrag.bind(this);\n//     }\n \n//     handleDelete(i) {\n//         const { tags } = this.state;\n//         this.setState({\n//          tags: tags.filter((tag, index) => index !== i),\n//         });\n//     }\n \n//     handleAddition(tag) {\n//         this.setState(state => ({ tags: [...state.tags, tag] }));\n//     }\n \n//     handleDrag(tag, currPos, newPos) {\n//         const tags = [...this.state.tags];\n//         const newTags = tags.slice();\n \n//         newTags.splice(currPos, 1);\n//         newTags.splice(newPos, 0, tag);\n \n//         // re-render\n//         this.setState({ tags: newTags });\n//     }\n \n//     render() {\n//         const { tags, suggestions } = this.state;\n//         return (\n//             <div>\n//                 <ReactTags tags={tags}\n//                     suggestions={suggestions}\n//                     handleDelete={this.handleDelete}\n//                     handleAddition={this.handleAddition}\n//                     handleDrag={this.handleDrag}\n//                     delimiters={delimiters} />\n//             </div>\n//         )\n//     }\n};\n \nexport default Sandbox;\n\n"]},"metadata":{},"sourceType":"module"}