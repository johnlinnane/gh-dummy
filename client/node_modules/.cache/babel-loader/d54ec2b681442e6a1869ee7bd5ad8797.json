{"ast":null,"code":"var reFirstKey = /^[^\\[]*/;\nvar reDigitPath = /^\\[(\\d+)\\]/;\nvar reNormalPath = /^\\[([^\\]]+)\\]/;\n\nfunction parsePath(key) {\n  function failure() {\n    return [{\n      type: 'object',\n      key: key,\n      last: true\n    }];\n  }\n\n  var firstKey = reFirstKey.exec(key)[0];\n  if (!firstKey) return failure();\n  var len = key.length;\n  var pos = firstKey.length;\n  var tail = {\n    type: 'object',\n    key: firstKey\n  };\n  var steps = [tail];\n\n  while (pos < len) {\n    var m;\n\n    if (key[pos] === '[' && key[pos + 1] === ']') {\n      pos += 2;\n      tail.append = true;\n      if (pos !== len) return failure();\n      continue;\n    }\n\n    m = reDigitPath.exec(key.substring(pos));\n\n    if (m !== null) {\n      pos += m[0].length;\n      tail.nextType = 'array';\n      tail = {\n        type: 'array',\n        key: parseInt(m[1], 10)\n      };\n      steps.push(tail);\n      continue;\n    }\n\n    m = reNormalPath.exec(key.substring(pos));\n\n    if (m !== null) {\n      pos += m[0].length;\n      tail.nextType = 'object';\n      tail = {\n        type: 'object',\n        key: m[1]\n      };\n      steps.push(tail);\n      continue;\n    }\n\n    return failure();\n  }\n\n  tail.last = true;\n  return steps;\n}\n\nmodule.exports = parsePath;","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/node_modules/append-field/lib/parse-path.js"],"names":["reFirstKey","reDigitPath","reNormalPath","parsePath","key","failure","type","last","firstKey","exec","len","length","pos","tail","steps","m","append","substring","nextType","parseInt","push","module","exports"],"mappings":"AAAA,IAAIA,UAAU,GAAG,SAAjB;AACA,IAAIC,WAAW,GAAG,YAAlB;AACA,IAAIC,YAAY,GAAG,eAAnB;;AAEA,SAASC,SAAT,CAAoBC,GAApB,EAAyB;AACvB,WAASC,OAAT,GAAoB;AAClB,WAAO,CAAC;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBF,MAAAA,GAAG,EAAEA,GAAvB;AAA4BG,MAAAA,IAAI,EAAE;AAAlC,KAAD,CAAP;AACD;;AAED,MAAIC,QAAQ,GAAGR,UAAU,CAACS,IAAX,CAAgBL,GAAhB,EAAqB,CAArB,CAAf;AACA,MAAI,CAACI,QAAL,EAAe,OAAOH,OAAO,EAAd;AAEf,MAAIK,GAAG,GAAGN,GAAG,CAACO,MAAd;AACA,MAAIC,GAAG,GAAGJ,QAAQ,CAACG,MAAnB;AACA,MAAIE,IAAI,GAAG;AAAEP,IAAAA,IAAI,EAAE,QAAR;AAAkBF,IAAAA,GAAG,EAAEI;AAAvB,GAAX;AACA,MAAIM,KAAK,GAAG,CAACD,IAAD,CAAZ;;AAEA,SAAOD,GAAG,GAAGF,GAAb,EAAkB;AAChB,QAAIK,CAAJ;;AAEA,QAAIX,GAAG,CAACQ,GAAD,CAAH,KAAa,GAAb,IAAoBR,GAAG,CAACQ,GAAG,GAAG,CAAP,CAAH,KAAiB,GAAzC,EAA8C;AAC5CA,MAAAA,GAAG,IAAI,CAAP;AACAC,MAAAA,IAAI,CAACG,MAAL,GAAc,IAAd;AACA,UAAIJ,GAAG,KAAKF,GAAZ,EAAiB,OAAOL,OAAO,EAAd;AACjB;AACD;;AAEDU,IAAAA,CAAC,GAAGd,WAAW,CAACQ,IAAZ,CAAiBL,GAAG,CAACa,SAAJ,CAAcL,GAAd,CAAjB,CAAJ;;AACA,QAAIG,CAAC,KAAK,IAAV,EAAgB;AACdH,MAAAA,GAAG,IAAIG,CAAC,CAAC,CAAD,CAAD,CAAKJ,MAAZ;AACAE,MAAAA,IAAI,CAACK,QAAL,GAAgB,OAAhB;AACAL,MAAAA,IAAI,GAAG;AAAEP,QAAAA,IAAI,EAAE,OAAR;AAAiBF,QAAAA,GAAG,EAAEe,QAAQ,CAACJ,CAAC,CAAC,CAAD,CAAF,EAAO,EAAP;AAA9B,OAAP;AACAD,MAAAA,KAAK,CAACM,IAAN,CAAWP,IAAX;AACA;AACD;;AAEDE,IAAAA,CAAC,GAAGb,YAAY,CAACO,IAAb,CAAkBL,GAAG,CAACa,SAAJ,CAAcL,GAAd,CAAlB,CAAJ;;AACA,QAAIG,CAAC,KAAK,IAAV,EAAgB;AACdH,MAAAA,GAAG,IAAIG,CAAC,CAAC,CAAD,CAAD,CAAKJ,MAAZ;AACAE,MAAAA,IAAI,CAACK,QAAL,GAAgB,QAAhB;AACAL,MAAAA,IAAI,GAAG;AAAEP,QAAAA,IAAI,EAAE,QAAR;AAAkBF,QAAAA,GAAG,EAAEW,CAAC,CAAC,CAAD;AAAxB,OAAP;AACAD,MAAAA,KAAK,CAACM,IAAN,CAAWP,IAAX;AACA;AACD;;AAED,WAAOR,OAAO,EAAd;AACD;;AAEDQ,EAAAA,IAAI,CAACN,IAAL,GAAY,IAAZ;AACA,SAAOO,KAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBnB,SAAjB","sourcesContent":["var reFirstKey = /^[^\\[]*/\nvar reDigitPath = /^\\[(\\d+)\\]/\nvar reNormalPath = /^\\[([^\\]]+)\\]/\n\nfunction parsePath (key) {\n  function failure () {\n    return [{ type: 'object', key: key, last: true }]\n  }\n\n  var firstKey = reFirstKey.exec(key)[0]\n  if (!firstKey) return failure()\n\n  var len = key.length\n  var pos = firstKey.length\n  var tail = { type: 'object', key: firstKey }\n  var steps = [tail]\n\n  while (pos < len) {\n    var m\n\n    if (key[pos] === '[' && key[pos + 1] === ']') {\n      pos += 2\n      tail.append = true\n      if (pos !== len) return failure()\n      continue\n    }\n\n    m = reDigitPath.exec(key.substring(pos))\n    if (m !== null) {\n      pos += m[0].length\n      tail.nextType = 'array'\n      tail = { type: 'array', key: parseInt(m[1], 10) }\n      steps.push(tail)\n      continue\n    }\n\n    m = reNormalPath.exec(key.substring(pos))\n    if (m !== null) {\n      pos += m[0].length\n      tail.nextType = 'object'\n      tail = { type: 'object', key: m[1] }\n      steps.push(tail)\n      continue\n    }\n\n    return failure()\n  }\n\n  tail.last = true\n  return steps\n}\n\nmodule.exports = parsePath\n"]},"metadata":{},"sourceType":"script"}