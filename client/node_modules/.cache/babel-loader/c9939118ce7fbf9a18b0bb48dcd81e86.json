{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item_2_sel.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions';\n\nclass EditItem extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataToUpdate: {\n        _id: null,\n        category_ref: [],\n        subcategory_ref: [],\n        tags: [],\n        collection_id: null\n      },\n      catsConverted: null,\n      subcatsConverted: null,\n      collConverted: null,\n      tagsConverted: null,\n      collList: null,\n      catList: null,\n      subcatList: null\n    };\n\n    this.deletePost = () => {\n      this.props.dispatch(deleteItem(this.state.formdata._id));\n      this.props.history.push('/user/all-items');\n    };\n\n    this.redirectUser = url => {\n      setTimeout(() => {\n        this.props.history.push(url);\n      }, 1000);\n    };\n\n    this.handleInputTags = newValue => {\n      let latestData = { ...this.state.dataToUpdate,\n        tags: newValue\n      };\n      this.setState({\n        dataToUpdate: latestData\n      });\n    };\n\n    this.handleInputColl = newValue => {\n      let latestData = { ...this.state.dataToUpdate,\n        collection_id: newValue.value\n      };\n      this.setState({\n        dataToUpdate: latestData\n      });\n    };\n\n    this.handleInputCats = newValue => {\n      let catArray = [];\n      newValue.map(cat => {\n        catArray.push(cat.value);\n      });\n      let latestData = { ...this.state.dataToUpdate,\n        category_ref: catArray\n      };\n      this.setState({\n        dataToUpdate: latestData\n      });\n    };\n\n    this.handleInputSubcats = newValue => {\n      let subcatArray = [];\n      newValue.map(subcat => {\n        subcatArray.push(subcat.value);\n      });\n      let latestData = { ...this.state.dataToUpdate,\n        subcategory_ref: subcatArray\n      };\n      this.setState({\n        dataToUpdate: latestData\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n    };\n\n    this.getCollOptions = () => {\n      let collList = [];\n      this.props.colls.map(coll => {\n        collList.push({\n          value: coll.id,\n          label: coll.title\n        });\n      });\n      this.setState({\n        collList\n      });\n    };\n\n    this.getCatOptions = () => {\n      let catList = [];\n      this.props.cats.map(cat => {\n        catList.push({\n          value: cat.cat_id,\n          label: cat.title\n        });\n      });\n      this.setState({\n        catList\n      });\n    };\n\n    this.getSubCatOptions = () => {\n      let subcatList = [];\n      this.props.subcats.map(subcat => {\n        subcatList.push({\n          value: subcat.subcat_id,\n          label: subcat.title\n        });\n      });\n      this.setState({\n        subcatList\n      });\n    };\n\n    this.renderForm = () => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, \"Edit item:\"), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 33\n      }\n    }, \"Tags\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CreatableSelect, {\n      defaultValue: this.state.tagsConverted,\n      isMulti: true,\n      onChange: this.handleInputTags,\n      options: this.state.tagsConverted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 33\n      }\n    }, \"Collection\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      className: \"basic-single\",\n      classNamePrefix: \"select\",\n      defaultValue: this.state.collConverted,\n      isDisabled: false,\n      isLoading: false,\n      isClearable: true,\n      isRtl: false,\n      isSearchable: true,\n      name: \"color\",\n      options: this.state.collConverted,\n      onChange: this.handleInputColl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      key: `cat_${this.props.items.item._id}`,\n      defaultValue: this.state.catsConverted,\n      isMulti: true,\n      name: \"colors\",\n      options: this.state.catOptions,\n      className: \"basic-multi-select\",\n      classNamePrefix: \"select\",\n      onChange: this.handleInputCats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 33\n      }\n    }, \"Sub-categories\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      key: `cat_${this.props.items.item._id}`,\n      defaultValue: this.state.subcatsConverted,\n      isMulti: true,\n      name: \"colors\",\n      options: this.state.subcatOptions,\n      className: \"basic-multi-select\",\n      classNamePrefix: \"select\",\n      onChange: this.handleInputSubcats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 41\n      }\n    })))))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 25\n      }\n    }, \"Submit Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"delete_post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: e => {\n        if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 29\n      }\n    }, \"Delete item\")));\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById(this.props.match.params.id));\n    this.props.dispatch(getAllColls());\n    this.props.dispatch(getAllCats());\n    this.props.dispatch(getAllSubCats());\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearItem());\n  }\n\n  componentDidUpdate(prevProps) {\n    let item = this.props.items.item;\n\n    if (this.props !== prevProps) {\n      if (this.props.items && this.props.cats && this.props.colls && this.props.subcats) {\n        // REFORMAT EXISTING CATEGORIES\n        let catsForState = [];\n        this.props.items.item.category_ref.map(catref => {\n          this.props.cats.map(cat => {\n            if (cat.cat_id == catref) {\n              catsForState.push({\n                value: cat.cat_id,\n                label: cat.title\n              });\n            }\n          });\n        }); // REFORMAT EXISTING CATEGORIES\n\n        let subcatsForState = [];\n        this.props.items.item.subcategory_ref.map(subcatref => {\n          this.props.subcats.map(subcat => {\n            if (subcat.subcat_id == subcatref) {\n              subcatsForState.push({\n                value: subcat.subcat_id,\n                label: subcat.title\n              });\n            }\n          });\n        }); // REFORMAT EXISTING COLLECTION\n\n        let collForState = null;\n        this.props.colls.map(coll => {\n          if (coll.id == this.props.items.item.collection_id) {\n            collForState = {\n              value: coll.id,\n              label: coll.title\n            };\n          }\n        });\n        let existsForState = {\n          _id: this.props.items.item._id,\n          category_ref: this.props.items.item.category_ref,\n          subcategory_ref: this.props.items.item.subcategory_ref,\n          tags: this.props.items.item.tags,\n          collection_id: this.props.items.item.collection_id\n        };\n        this.setState({\n          catsConverted: catsForState,\n          subcatsConverted: subcatsForState,\n          collConverted: collForState,\n          tagsConverted: this.props.items.item.tags,\n          dataToUpdate: existsForState\n        });\n      }\n    }\n  }\n\n  render() {\n    let items = this.props.items;\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rl_container article edit_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }, items.updateItem ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 29\n      }\n    }, \"Post updated, \", /*#__PURE__*/React.createElement(Link, {\n      to: `/items/${items.item._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 47\n      }\n    }, \"Click here to see your post\")) : null, items.itemDeleted ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red_tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 29\n      }\n    }, \"Item Deleted\", this.redirectUser('/user/all-items')) : null, this.state.tagsConverted && this.state.catsConverted && this.state.subcatsConverted && this.state.collConverted ? this.renderForm() : null);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items,\n    colls: state.collections.colls,\n    cats: state.cats.cats,\n    subcats: state.cats.subcats\n  };\n}\n\nexport default connect(mapStateToProps)(EditItem);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/containers/Admin/edit_item_2_sel.js"],"names":["React","PureComponent","connect","Link","axios","ToastContainer","toast","Select","CreatableSelect","getItemById","updateItem","clearItem","deleteItem","getAllColls","getAllCats","getAllSubCats","EditItem","state","dataToUpdate","_id","category_ref","subcategory_ref","tags","collection_id","catsConverted","subcatsConverted","collConverted","tagsConverted","collList","catList","subcatList","deletePost","props","dispatch","formdata","history","push","redirectUser","url","setTimeout","handleInputTags","newValue","latestData","setState","handleInputColl","value","handleInputCats","catArray","map","cat","handleInputSubcats","subcatArray","subcat","onSubmit","e","preventDefault","getCollOptions","colls","coll","id","label","title","getCatOptions","cats","cat_id","getSubCatOptions","subcats","subcat_id","renderForm","items","item","catOptions","subcatOptions","window","confirm","componentDidMount","match","params","componentWillUnmount","componentDidUpdate","prevProps","catsForState","catref","subcatsForState","subcatref","collForState","existsForState","render","console","log","itemDeleted","mapStateToProps","collections"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\n\n\n\n\nimport { getItemById, updateItem, clearItem, deleteItem } from '../../actions';\nimport { getAllColls, getAllCats, getAllSubCats  } from '../../actions';\n\n\n\nclass EditItem extends PureComponent {\n\n\n    state = {\n\n        dataToUpdate: {\n            _id: null,\n            category_ref: [],\n            subcategory_ref: [],\n            tags: [],\n            collection_id: null\n            \n        },\n        catsConverted: null,\n        subcatsConverted: null,\n        collConverted: null,\n        tagsConverted: null,\n        collList: null,\n        catList: null,\n        subcatList: null\n       \n\n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(getItemById(this.props.match.params.id))\n        this.props.dispatch(getAllColls())\n        this.props.dispatch(getAllCats());\n        this.props.dispatch(getAllSubCats());\n    }\n\n\n    componentWillUnmount() {\n        this.props.dispatch(clearItem())\n    }\n\n\n    componentDidUpdate(prevProps) {\n\n        let item = this.props.items.item;\n        if (this.props !== prevProps) {\n            if (this.props.items && this.props.cats && this.props.colls && this.props.subcats) {\n\n\n                // REFORMAT EXISTING CATEGORIES\n                let catsForState = [];\n                this.props.items.item.category_ref.map( (catref) => {\n                    this.props.cats.map( (cat) => {\n                        if ( cat.cat_id == catref) {\n                            catsForState.push(\n                                {\n                                    value: cat.cat_id,\n                                    label: cat.title\n                                }\n                            )\n                        }\n                    })\n                })\n\n\n                // REFORMAT EXISTING CATEGORIES\n                let subcatsForState = [];\n                this.props.items.item.subcategory_ref.map( (subcatref) => {\n                    this.props.subcats.map( (subcat) => {\n                        if ( subcat.subcat_id == subcatref) {\n                            subcatsForState.push(\n                                {\n                                    value: subcat.subcat_id,\n                                    label: subcat.title\n                                }\n                            )\n                        }\n                    })\n                })\n\n                // REFORMAT EXISTING COLLECTION\n                let collForState = null;\n                this.props.colls.map( (coll) => {\n                    if ( coll.id == this.props.items.item.collection_id) {\n                        collForState = {\n                            value: coll.id,\n                            label: coll.title\n                        }\n                    }\n                })\n\n\n                let existsForState = {\n                    _id: this.props.items.item._id,\n                    category_ref: this.props.items.item.category_ref,\n                    subcategory_ref: this.props.items.item.subcategory_ref,\n                    tags: this.props.items.item.tags,\n                    collection_id: this.props.items.item.collection_id\n                }\n\n                this.setState({\n                    catsConverted: catsForState,\n                    subcatsConverted: subcatsForState,\n                    collConverted: collForState,\n                    tagsConverted: this.props.items.item.tags,\n                    dataToUpdate: existsForState\n                })\n            }\n        } \n    }\n\n\n    deletePost = () => {\n        this.props.dispatch(deleteItem(this.state.formdata._id));\n        this.props.history.push('/user/all-items');\n    }\n\n\n\n    redirectUser = (url) => {\n        setTimeout(() => {\n            this.props.history.push(url)\n        }, 1000)\n    }\n\n\n    handleInputTags = (newValue) => {\n        let latestData = {\n            ...this.state.dataToUpdate,\n            tags: newValue\n        }\n        this.setState({\n            dataToUpdate: latestData\n        })\n    }\n\n    handleInputColl = (newValue) => {\n        let latestData = {\n            ...this.state.dataToUpdate,\n            collection_id: newValue.value\n        }\n        this.setState({\n            dataToUpdate: latestData\n        })\n    }\n\n    handleInputCats = (newValue) => {\n        let catArray = [];\n        newValue.map( cat => {\n            catArray.push(cat.value)\n        })\n        let latestData = {\n            ...this.state.dataToUpdate,\n            category_ref: catArray\n        }\n        this.setState({\n            dataToUpdate: latestData\n        })\n    }\n\n    handleInputSubcats = (newValue) => {\n        let subcatArray = [];\n        newValue.map( subcat => {\n            subcatArray.push(subcat.value)\n        })\n        let latestData = {\n            ...this.state.dataToUpdate,\n            subcategory_ref: subcatArray\n        }\n        this.setState({\n            dataToUpdate: latestData\n        })\n    }\n\n\n\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n    }\n\n\n    getCollOptions = () => {\n        \n        let collList = [];\n        this.props.colls.map( coll => {\n            collList.push({\n                value: coll.id,\n                label: coll.title\n            })\n        })\n        this.setState({\n            collList\n        })\n    }\n\n\n    getCatOptions = () => {\n        let catList = [];\n        this.props.cats.map( cat => {\n            catList.push({\n                value: cat.cat_id,\n                label: cat.title\n            })\n        })\n        this.setState({\n            catList\n        })\n    }\n\n\n\n    getSubCatOptions = () => {\n        let subcatList = [];\n        this.props.subcats.map( subcat => {\n            subcatList.push({\n                value: subcat.subcat_id,\n                label: subcat.title\n            })\n        })\n        this.setState({\n            subcatList\n        })\n    }\n\n\n\n\n    renderForm = () => (\n        <form onSubmit={this.onSubmit}>\n                        \n                        <h2>Edit item:</h2>\n                       \n                        <table>\n                        <tbody>\n               \n                            <tr>\n                                <td>\n                                    Tags\n                                </td>\n                                <td>\n                                    <CreatableSelect\n                                        defaultValue={this.state.tagsConverted}\n                                        isMulti\n                                        onChange={this.handleInputTags}\n                                        options={this.state.tagsConverted}\n                                    />\n                                </td>\n                            </tr>\n                          \n\n                            <tr>\n                                <td>\n                                    Collection\n                                </td>\n                                <td>\n                                    <div className=\"form_element\">\n                                        <Select\n                                            className=\"basic-single\"\n                                            classNamePrefix=\"select\"\n                                            defaultValue={this.state.collConverted}\n                                            isDisabled={false}\n                                            isLoading={false}\n                                            isClearable={true}\n                                            isRtl={false}\n                                            isSearchable={true}\n                                            name=\"color\"\n                                            options={this.state.collConverted}\n                                            onChange={this.handleInputColl}\n                                        />\n                                    </div>\n                                </td>\n                            </tr>\n\n\n                            <tr>\n                                <td>\n                                    Category\n                                </td>\n                                <td>\n                                    <div className=\"form_element\">\n                                        <Select\n                                            key={`cat_${this.props.items.item._id}`}\n                                            defaultValue={this.state.catsConverted}\n                                            isMulti\n                                            name=\"colors\"\n                                            options={this.state.catOptions}\n                                            className=\"basic-multi-select\"\n                                            classNamePrefix=\"select\"\n                                            onChange={this.handleInputCats}\n                                        />\n                                    </div>\n                                </td>\n                            </tr>  \n\n                           \n\n                            <tr>\n                                <td>\n                                    Sub-categories \n                                </td>\n                                <td>\n\n                                    <div className=\"form_element\">\n                                        <Select\n                                            key={`cat_${this.props.items.item._id}`}\n                                            defaultValue={this.state.subcatsConverted}\n                                            isMulti\n                                            name=\"colors\"\n                                            options={this.state.subcatOptions}\n                                            className=\"basic-multi-select\"\n                                            classNamePrefix=\"select\"\n                                            onChange={this.handleInputSubcats}\n                                        />\n                                    </div>\n                                </td>\n                            </tr>\n                            \n                        </tbody>\n                        </table>\n\n                        <button type=\"submit\">Submit Edit</button>\n                        \n                        <div className=\"delete_post\">\n                            <div className=\"button\" onClick={(e) => { if (window.confirm('Are you sure you wish to delete this item?')) this.deletePost(e) } }>\n                                Delete item\n                            </div>\n                        </div>\n\n                    </form>\n    )\n\n    render() {\n      \n\n        let items = this.props.items;\n\n        console.log(this.props);\n\n        return (\n            \n            \n            <div className=\"rl_container article edit_page\">\n                {/* { this.state.loaded ? */}\n                    \n                    {\n                        items.updateItem ?\n                            <div className=\"edit_confirm\">\n                                Post updated, <Link to={`/items/${items.item._id}`}>\n                                    Click here to see your post\n                                </Link>\n                            </div>\n                        : null\n                    }\n\n\n                    {\n                        items.itemDeleted ?\n                            <div className=\"red_tag\">\n                                Item Deleted    \n                                {this.redirectUser('/user/all-items')}\n                            </div>\n\n                        : null\n                    }\n                {this.state.tagsConverted && this.state.catsConverted && this.state.subcatsConverted && this.state.collConverted ?\n                    this.renderForm()    \n                : null }\n                \n                    \n            </div>\n            \n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items:state.items,\n        colls:state.collections.colls,\n        cats:state.cats.cats,\n        subcats:state.cats.subcats\n    }\n}\n\nexport default connect(mapStateToProps)(EditItem)\n\n\n"]},"metadata":{},"sourceType":"module"}