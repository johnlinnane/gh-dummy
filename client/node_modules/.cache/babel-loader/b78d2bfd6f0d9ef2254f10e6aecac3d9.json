{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/Sandbox/sandbox.js\";\nimport React from 'react'; // const express = require('express');\n\nconst multer = require('multer'); // const ejs = require('ejs');\n\n\nconst path = require('path');\n\nconst Sandbox = () => {\n  // // Set The Storage Engine\n  // const storage = multer.diskStorage({\n  // destination: './public/uploads/',\n  // filename: function(req, file, cb){\n  //     cb(null,file.fieldname + '-' + Date.now() + path.extname(file.originalname));\n  // }\n  // });\n  // // Init Upload\n  // const upload = multer({\n  // storage: storage,\n  // limits:{fileSize: 1000000},\n  // fileFilter: function(req, file, cb){\n  //     checkFileType(file, cb);\n  // }\n  // }).single('myImage');\n  // // Check File Type\n  // function checkFileType(file, cb){\n  // // Allowed ext\n  // const filetypes = /jpeg|jpg|png|gif/;\n  // // Check ext\n  // const extname = filetypes.test(path.extname(file.originalname).toLowerCase());\n  // // Check mime\n  // const mimetype = filetypes.test(file.mimetype);\n  // if(mimetype && extname){\n  //     return cb(null,true);\n  // } else {\n  //     cb('Error: Images Only!');\n  // }\n  // }\n  // // Init app\n  // const app = express();\n  // // EJS\n  // // app.set('view engine', 'ejs');\n  // // Public Folder\n  // app.use(express.static('./public'));\n  // // app.get('/', (req, res) => res.render('index'));\n  // app.post('/upload', (req, res) => {\n  // upload(req, res, (err) => {\n  //     if(err){\n  //     res.render('index', {\n  //         msg: err\n  //     });\n  //     } else {\n  //     if(req.file == undefined){\n  //         res.render('index', {\n  //         msg: 'Error: No File Selected!'\n  //         });\n  //     } else {\n  //         res.render('index', {\n  //         msg: 'File Uploaded!',\n  //         file: `uploads/${req.file.filename}`\n  //         });\n  //     }\n  //     }\n  // });\n  // });\n  // const port = 4000;\n  // app.listen(port, () => console.log(`Server started on port ${port}`));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 14\n    }\n  }, \"File Upload\"), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"/upload\",\n    method: \"POST\",\n    encType: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-field input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 18\n    }\n  }, \"File\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"myImage\",\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 18\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-path-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"file-path validate\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 18\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 14\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 14\n    }\n  }));\n};\n\nexport default Sandbox;","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/Sandbox/sandbox.js"],"names":["React","multer","require","path","Sandbox"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB,C,CACA;;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAKA,MAAME,OAAO,GAAG,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,sBACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADL,eAGK;AAAM,IAAA,MAAM,EAAC,SAAb;AAAuB,IAAA,MAAM,EAAC,MAA9B;AAAqC,IAAA,OAAO,EAAC,qBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,SAAS,EAAC,oBAAjB;AAAsC,IAAA,IAAI,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CALJ,CADA,eAUA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVA,CAHL,eAeK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfL,CADJ;AAsBH,CA5FD;;AA8FA,eAAeA,OAAf","sourcesContent":["import React from 'react';\n\n// const express = require('express');\nconst multer = require('multer');\n// const ejs = require('ejs');\nconst path = require('path');\n\n\n\n\nconst Sandbox = () => {\n    // // Set The Storage Engine\n    // const storage = multer.diskStorage({\n    // destination: './public/uploads/',\n    // filename: function(req, file, cb){\n    //     cb(null,file.fieldname + '-' + Date.now() + path.extname(file.originalname));\n    // }\n    // });\n\n    // // Init Upload\n    // const upload = multer({\n    // storage: storage,\n    // limits:{fileSize: 1000000},\n    // fileFilter: function(req, file, cb){\n    //     checkFileType(file, cb);\n    // }\n    // }).single('myImage');\n\n    // // Check File Type\n    // function checkFileType(file, cb){\n    // // Allowed ext\n    // const filetypes = /jpeg|jpg|png|gif/;\n    // // Check ext\n    // const extname = filetypes.test(path.extname(file.originalname).toLowerCase());\n    // // Check mime\n    // const mimetype = filetypes.test(file.mimetype);\n\n    // if(mimetype && extname){\n    //     return cb(null,true);\n    // } else {\n    //     cb('Error: Images Only!');\n    // }\n    // }\n\n    // // Init app\n    // const app = express();\n\n    // // EJS\n    // // app.set('view engine', 'ejs');\n\n    // // Public Folder\n    // app.use(express.static('./public'));\n\n    // // app.get('/', (req, res) => res.render('index'));\n\n    // app.post('/upload', (req, res) => {\n    // upload(req, res, (err) => {\n    //     if(err){\n    //     res.render('index', {\n    //         msg: err\n    //     });\n    //     } else {\n    //     if(req.file == undefined){\n    //         res.render('index', {\n    //         msg: 'Error: No File Selected!'\n    //         });\n    //     } else {\n    //         res.render('index', {\n    //         msg: 'File Uploaded!',\n    //         file: `uploads/${req.file.filename}`\n    //         });\n    //     }\n    //     }\n    // });\n    // });\n\n    // const port = 4000;\n\n    // app.listen(port, () => console.log(`Server started on port ${port}`));\n\n    return (\n        <div class=\"container\">\n             <h1>File Upload</h1>\n             {/* <%= typeof msg != 'undefined' ? msg : '' %> */}\n             <form action=\"/upload\" method=\"POST\" encType=\"multipart/form-data\">\n             <div className=\"file-field input-field\">\n                 <div className=\"btn grey\">\n                 <span>File</span>\n                 <input name=\"myImage\" type=\"file\" />\n                 </div>\n                 <div className=\"file-path-wrapper\">\n                 <input className=\"file-path validate\" type=\"text\" />\n                 </div>\n             </div>\n             <button type=\"submit\" className=\"btn\">Submit</button>\n             </form>\n             <br />\n             {/* <img src=\"<%= typeof file != 'undefined' ? file : '' %>\" class=\"responsive-img\"></img> */}\n         </div>\n    )\n\n\n}\n\nexport default Sandbox;"]},"metadata":{},"sourceType":"module"}