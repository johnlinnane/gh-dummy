{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/AdminSection/admin_cat.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { getAllColls, getAllCats, getAllSubCats } from '../../actions';\n\nclass AdminCat extends Component {\n  componentDidMount() {\n    this.props.dispatch(getAllColls());\n    this.props.dispatch(getAllCats());\n    this.props.dispatch(getAllSubCats());\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Hi\") // <div>\n    //     {this.props.cats ?\n    //         <TabList className=\"vert_tab_list\">\n    //             {this.props.cats.map( (cat, i) => (\n    //                 <Tab key={i}>{cat.title}</Tab>\n    //             ))}\n    //         </TabList>\n    //     : null }\n    //     { this.props.cats ?\n    //             this.props.cats.map( (cat, i) => (\n    //                 <TabPanel key={i}>\n    //                     <form onSubmit={this.submitForm}>\n    //                         <table>\n    //                         <tbody>\n    //                             <tr>\n    //                                 <td>\n    //                                     <h2>Title</h2>\n    //                                 </td>\n    //                                 <td>\n    //                                     <input\n    //                                         type=\"text\"\n    //                                         placeholder={cat.title}\n    //                                         defaultValue={cat.title} \n    //                                         onChange={(event) => this.handleInput(event)}\n    //                                     />\n    //                                 </td>\n    //                             </tr>\n    //                             <tr>\n    //                                 <td>\n    //                                     <h2>Description</h2>\n    //                                 </td>\n    //                                 <td>\n    //                                     <textarea\n    //                                         type=\"text\"\n    //                                         placeholder=\"Enter category description\"\n    //                                         defaultValue={null} \n    //                                         onChange={(event) => this.handleInput(event)}\n    //                                         rows={6}\n    //                                     />\n    //                                 </td>\n    //                             </tr>\n    //                             <tr>\n    //                                 <td>\n    //                                     <img className=\"change_cat_img\" src={`/images/cover_img_cat/${cat._id}.jpg`} key={i} />\n    //                                 </td>\n    //                                 <td>\n    //                                     Change image\n    //                                 </td>\n    //                             </tr>\n    //                             <tr>\n    //                                 <h3>Sub-categories</h3>\n    //                             </tr>\n    //                             { this.props.subcats ?\n    //                                 this.props.subcats.map( (subcat, i) => (\n    //                                             subcat.parent_cat == cat._id ? \n    //                                                 <tr key={i}>\n    //                                                     <td>\n    //                                                         <input\n    //                                                             type=\"text\"\n    //                                                             placeholder={subcat.title}\n    //                                                             defaultValue={subcat.title} \n    //                                                             onChange={(event) => this.handleInput(event)}\n    //                                                         />\n    //                                                     </td>\n    //                                                     <td>\n    //                                                         <input\n    //                                                             type=\"text\"\n    //                                                             placeholder=\"Description\"\n    //                                                             defaultValue={subcat.description} \n    //                                                             onChange={(event) => this.handleInput(event)}\n    //                                                         />\n    //                                                     </td>\n    //                                                     <td>\n    //                                                         <button type=\"button\">Remove</button>\n    //                                                     </td>\n    //                                                 </tr>\n    //                                             : null \n    //                                 ) )    \n    //                             : null }\n    //                             <tr >\n    //                                                     <td>\n    //                                                         <input\n    //                                                             type=\"text\"\n    //                                                             placeholder=\"Add new subcategory\"\n    //                                                             defaultValue={null} \n    //                                                             onChange={(event) => this.handleInput(event)}\n    //                                                         />\n    //                                                     </td>\n    //                                                     <td>\n    //                                                         <input\n    //                                                             type=\"text\"\n    //                                                             placeholder=\"Description\"\n    //                                                             defaultValue={null} \n    //                                                             onChange={(event) => this.handleInput(event)}\n    //                                                         />\n    //                                                     </td>\n    //                                                     <td>\n    //                                                         <button type=\"button\">+</button>\n    //                                                     </td>\n    //                                                 </tr>\n    //                         </tbody>\n    //                         </table>\n    //                     </form>\n    //                     <button type=\"button\">Delete Category</button>\n    //                     <button type=\"submit\">Save</button>\n    //                 </TabPanel>\n    //             ))\n    //     : null }\n    // </div>\n    ;\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    colls: state.collections.colls,\n    cats: state.cats.cats,\n    subcats: state.cats.subcats\n  };\n}\n\nexport default connect(mapStateToProps)(AdminCat);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/AdminSection/admin_cat.js"],"names":["React","Component","connect","Tab","Tabs","TabList","TabPanel","getAllColls","getAllCats","getAllSubCats","AdminCat","componentDidMount","props","dispatch","render","console","log","mapStateToProps","state","colls","collections","cats","subcats"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AACA,OAAO,iCAAP;AAGA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,aAAlC,QAAwD,eAAxD;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAI7BU,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,QAAX,CAAoBN,WAAW,EAA/B;AACA,SAAKK,KAAL,CAAWC,QAAX,CAAoBL,UAAU,EAA9B;AACA,SAAKI,KAAL,CAAWC,QAAX,CAAoBJ,aAAa,EAAjC;AACH;;AAEDK,EAAAA,MAAM,GAAG;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AAGA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAnJJ;AAsJH;;AArK4B;;AAwKjC,SAASK,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHC,IAAAA,KAAK,EAACD,KAAK,CAACE,WAAN,CAAkBD,KADrB;AAEHE,IAAAA,IAAI,EAACH,KAAK,CAACG,IAAN,CAAWA,IAFb;AAGHC,IAAAA,OAAO,EAACJ,KAAK,CAACG,IAAN,CAAWC;AAHhB,GAAP;AAKH;;AAED,eAAepB,OAAO,CAACe,eAAD,CAAP,CAAyBP,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\n\nimport { getAllColls, getAllCats, getAllSubCats  } from '../../actions';\n\nclass AdminCat extends Component {\n\n\n\n    componentDidMount() {\n        this.props.dispatch(getAllColls())\n        this.props.dispatch(getAllCats());\n        this.props.dispatch(getAllSubCats());\n    }\n\n    render() {\n\n        console.log(this.props)\n\n\n        return (\n            <p>Hi</p>\n            // <div>\n            //     {this.props.cats ?\n            //         <TabList className=\"vert_tab_list\">\n            //             {this.props.cats.map( (cat, i) => (\n            //                 <Tab key={i}>{cat.title}</Tab>\n            //             ))}\n            //         </TabList>\n            //     : null }\n\n\n            //     { this.props.cats ?\n                    \n            //             this.props.cats.map( (cat, i) => (\n            //                 <TabPanel key={i}>\n\n\n            //                     <form onSubmit={this.submitForm}>\n            //                         <table>\n            //                         <tbody>\n            //                             <tr>\n            //                                 <td>\n            //                                     <h2>Title</h2>\n            //                                 </td>\n            //                                 <td>\n\n            //                                     <input\n            //                                         type=\"text\"\n            //                                         placeholder={cat.title}\n            //                                         defaultValue={cat.title} \n            //                                         onChange={(event) => this.handleInput(event)}\n            //                                     />\n\n\n\n\n            //                                 </td>\n            //                             </tr>\n\n\n            //                             <tr>\n            //                                 <td>\n            //                                     <h2>Description</h2>\n            //                                 </td>\n            //                                 <td>\n            //                                     <textarea\n            //                                         type=\"text\"\n            //                                         placeholder=\"Enter category description\"\n            //                                         defaultValue={null} \n            //                                         onChange={(event) => this.handleInput(event)}\n            //                                         rows={6}\n            //                                     />\n            //                                 </td>\n            //                             </tr>\n\n\n            //                             <tr>\n            //                                 <td>\n            //                                     <img className=\"change_cat_img\" src={`/images/cover_img_cat/${cat._id}.jpg`} key={i} />\n            //                                 </td>\n            //                                 <td>\n            //                                     Change image\n            //                                 </td>\n            //                             </tr>\n\n            //                             <tr>\n            //                                 <h3>Sub-categories</h3>\n            //                             </tr>\n\n\n            //                             { this.props.subcats ?\n            //                                 this.props.subcats.map( (subcat, i) => (\n                                                \n            //                                             subcat.parent_cat == cat._id ? \n            //                                                 <tr key={i}>\n            //                                                     <td>\n\n            //                                                         <input\n            //                                                             type=\"text\"\n            //                                                             placeholder={subcat.title}\n            //                                                             defaultValue={subcat.title} \n            //                                                             onChange={(event) => this.handleInput(event)}\n            //                                                         />\n\n\n\n\n            //                                                     </td>\n\n            //                                                     <td>\n            //                                                         <input\n            //                                                             type=\"text\"\n            //                                                             placeholder=\"Description\"\n            //                                                             defaultValue={subcat.description} \n            //                                                             onChange={(event) => this.handleInput(event)}\n            //                                                         />\n            //                                                     </td>\n            //                                                     <td>\n            //                                                         <button type=\"button\">Remove</button>\n\n            //                                                     </td>\n            //                                                 </tr>\n                                                        \n            //                                             : null \n                                                    \n                                                \n            //                                 ) )    \n            //                             : null }\n            //                             <tr >\n            //                                                     <td>\n\n            //                                                         <input\n            //                                                             type=\"text\"\n            //                                                             placeholder=\"Add new subcategory\"\n            //                                                             defaultValue={null} \n            //                                                             onChange={(event) => this.handleInput(event)}\n            //                                                         />\n\n\n\n\n            //                                                     </td>\n\n            //                                                     <td>\n            //                                                         <input\n            //                                                             type=\"text\"\n            //                                                             placeholder=\"Description\"\n            //                                                             defaultValue={null} \n            //                                                             onChange={(event) => this.handleInput(event)}\n            //                                                         />\n            //                                                     </td>\n            //                                                     <td>\n            //                                                         <button type=\"button\">+</button>\n\n            //                                                     </td>\n            //                                                 </tr>\n            //                         </tbody>\n            //                         </table>\n            //                     </form>\n            //                     <button type=\"button\">Delete Category</button>\n            //                     <button type=\"submit\">Save</button>\n\n            //                 </TabPanel>\n\n            //             ))\n            //     : null }\n            // </div>\n\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        colls:state.collections.colls,\n        cats:state.cats.cats,\n        subcats:state.cats.subcats\n    }\n}\n\nexport default connect(mapStateToProps)(AdminCat);"]},"metadata":{},"sourceType":"module"}