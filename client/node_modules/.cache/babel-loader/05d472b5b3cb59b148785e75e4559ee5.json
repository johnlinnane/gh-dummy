{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import Select from 'react-select';\n\nimport CreatableSelect from 'react-select/creatable';\nimport { getAllCats, getItemById, updateItem } from '../../actions';\n\nclass Sandbox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // catOptions: [],\n      // selected: [],\n      // savedCats: [],\n      savedTags: [],\n      updated: false,\n      tagOptions: []\n    };\n\n    this.handleChange = newValue => {\n      // console.log(newValue);\n      if (newValue && newValue.length) {\n        // console.log('state set')\n        this.setState({\n          savedTags: [...newValue]\n        }); // console.log(this.state.savedTags);\n        // newValue is not an array if empty\n      } else {\n        this.setState({\n          savedTags: []\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      let updateData = {\n        _id: '5edcbc5027c3271205b2360a',\n        tags: []\n      };\n\n      if (this.state.savedTags && this.state.savedTags.length) {\n        this.state.savedTags.map(tag => {\n          updateData.tags.push(tag.value);\n        });\n      } // console.log(updateData);\n\n\n      this.props.dispatch(updateItem({ ...updateData\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getItemById('5edcbc5027c3271205b2360a'));\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // console.log(nextProps);\n    let tagsFromProps = [];\n\n    if (nextProps.items.item && nextProps.items.item.tags) {\n      nextProps.items.item.tags.map(tag => {\n        tagsFromProps.push({\n          value: tag.value,\n          label: tag.label\n        });\n      });\n    }\n\n    return {\n      savedTags: tagsFromProps,\n      updated: true\n    };\n  }\n\n  render() {\n    console.log(this.state.savedTags);\n    const tagOptions = this.state.tagOptions;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, this.props.items.item && this.props.items.item.title ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, this.props.items.item.title) : null, this.state.updated && this.state.savedTags.length ? /*#__PURE__*/React.createElement(CreatableSelect, {\n      defaultValue: this.state.savedTags,\n      isMulti: true,\n      onChange: this.handleChange,\n      options: tagOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items,\n    cats: state.cats.cats\n  };\n}\n\nexport default connect(mapStateToProps)(Sandbox);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/tc-book/client/src/components/Sandbox/sandbox.js"],"names":["React","connect","CreatableSelect","getAllCats","getItemById","updateItem","Sandbox","Component","state","savedTags","updated","tagOptions","handleChange","newValue","length","setState","onClickHandler","updateData","_id","tags","map","tag","push","value","props","dispatch","componentDidMount","getDerivedStateFromProps","nextProps","prevState","tagsFromProps","items","item","label","render","console","log","title","mapStateToProps","cats"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n// import Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\n\n\nimport { getAllCats, getItemById, updateItem } from '../../actions';\n\n\nclass Sandbox extends React.Component {\n    \n    state = {\n        // catOptions: [],\n        // selected: [],\n        // savedCats: [],\n\n        savedTags: [],\n        updated: false,\n        \n        tagOptions: []\n\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getItemById('5edcbc5027c3271205b2360a'));\n    }\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        // console.log(nextProps);\n\n        let tagsFromProps = [];\n\n        if (nextProps.items.item && nextProps.items.item.tags) {\n            nextProps.items.item.tags.map( tag => {\n                tagsFromProps.push({\n                    value: tag.value,\n                    label: tag.label\n                })\n            })\n        }\n        return {\n            savedTags: tagsFromProps,\n            updated: true\n        }\n        \n\n    }\n\n\n    handleChange = (newValue) => {\n        // console.log(newValue);\n        if (newValue && newValue.length) {\n            // console.log('state set')\n            this.setState({ \n                savedTags: [...newValue]\n            });\n            // console.log(this.state.savedTags);\n\n        // newValue is not an array if empty\n        } else {\n            this.setState({ \n                savedTags: []\n            });\n        }\n    };\n\n    onClickHandler = () => {\n        let updateData = {\n            _id: '5edcbc5027c3271205b2360a',\n            tags: []\n        };\n\n        if (this.state.savedTags && this.state.savedTags.length) {\n            this.state.savedTags.map( tag => {\n                updateData.tags.push(tag.value);\n            })\n        } \n        // console.log(updateData);\n        this.props.dispatch(updateItem({\n            ...updateData\n        }))\n    }\n    \n    render() {\n\n        console.log(this.state.savedTags);\n\n        const tagOptions = this.state.tagOptions;\n\n        return (\n            <div>\n                {this.props.items.item && this.props.items.item.title ?\n                    <h2>{this.props.items.item.title}</h2>\n                : null }\n\n                {this.state.updated && this.state.savedTags.length ?\n                    <CreatableSelect\n                        defaultValue={this.state.savedTags}\n                        isMulti\n                        onChange={this.handleChange}\n                        options={tagOptions}\n                    />\n                  \n\n                : null}\n\n                <button type=\"button\"onClick={this.onClickHandler}>Submit</button> \n            \n            </div>\n        );\n    }\n};\n \n\nfunction mapStateToProps(state) {\n    return {\n        items:state.items,\n        cats:state.cats.cats\n    }\n}\n\nexport default connect(mapStateToProps)(Sandbox);\n\n"]},"metadata":{},"sourceType":"module"}