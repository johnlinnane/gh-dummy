{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/Categories/cat_view.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getItemsByCat, getCatById } from '../../actions';\nimport PanelView from '../PanelView/panel_view';\nimport NavigationBar from '../../widgetsUI/navigation';\n\nclass CatView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      info: []\n    };\n    this.navInfo = {\n      catTitle: null,\n      catId: null,\n      subCatTitle: null,\n      subCatId: null,\n      type: 'Categories'\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n\n    this.renderGrid = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cat_grid_row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cat_grid_column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, this.props.catitems && this.props.catitems.length ? this.props.catitems.map((item, i) => /*#__PURE__*/React.createElement(Link, {\n        to: `/items/${item._id}`,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"figure\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n        alt: item.title,\n        onError: this.addDefaultImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"figcaption\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }\n      }, item.title)))) : /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 23\n        }\n      }, \"There are no items in this category.\")));\n    };\n\n    this.getCatName = () => {\n      if (this.props.catinfo && this.props.catinfo.length) {\n        this.navInfo.catTitle = this.props.catinfo[0].title;\n        this.navInfo.catId = this.props.catinfo[0].cat_id;\n      }\n    };\n  }\n\n  componentDidMount() {\n    let catId = this.props.match.params.id;\n    this.props.dispatch(getItemsByCat(catId));\n    this.props.dispatch(getCatById(catId));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.catitems && nextProps.catitems.length) {\n      let tempArray = [];\n      nextProps.catitems.map((item, i) => tempArray.push({\n        // src: `/images/sq_thumb/${item.omeka.omeka_id}.jpg`,\n        src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n        caption: item.title,\n        link: `/items/${item._id}`\n      }));\n\n      if (tempArray.length) {\n        this.setState({\n          info: [...tempArray]\n        });\n      }\n    }\n\n    if (this.props.catinfo && this.props.catinfo.length) {\n      this.setState({\n        navInfo: {\n          catTitle: this.props.catinfo[0].title,\n          catId: this.props.catinfo[0].cat_id\n        }\n      });\n    }\n  }\n\n  render() {\n    this.getCatName();\n    console.log(this.props);\n    let catinfo = this.props.catinfo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cat_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      navinfo: this.navInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), catinfo && catinfo.length > 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, catinfo[0].title) : null, this.props.catitems ? this.renderGrid() : null));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    catitems: state.cats.catitems,\n    catinfo: state.cats.catinfo\n  };\n}\n\nexport default connect(mapStateToProps)(CatView);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/Categories/cat_view.js"],"names":["React","Component","connect","Link","getItemsByCat","getCatById","PanelView","NavigationBar","CatView","state","info","navInfo","catTitle","catId","subCatTitle","subCatId","type","addDefaultImg","ev","newImg","target","src","renderGrid","props","catitems","length","map","item","i","_id","title","getCatName","catinfo","cat_id","componentDidMount","match","params","id","dispatch","componentWillReceiveProps","nextProps","tempArray","push","caption","link","setState","render","console","log","mapStateToProps","cats"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\nimport { getItemsByCat, getCatById } from '../../actions';\nimport PanelView from '../PanelView/panel_view';\nimport NavigationBar from '../../widgetsUI/navigation';\n\n\nclass CatView  extends Component {\n    \n\n    componentDidMount() {\n        let catId = this.props.match.params.id\n        this.props.dispatch(getItemsByCat(catId));\n        this.props.dispatch(getCatById(catId));\n    }\n\n\n    state = {\n        info: []\n    }\n\n    \n    navInfo = {\n        catTitle: null,\n        catId: null,\n        subCatTitle: null,\n        subCatId: null,\n        type: 'Categories'\n    }\n\n    componentWillReceiveProps(nextProps) {\n        \n        if (nextProps.catitems && nextProps.catitems.length) {\n            let tempArray = []\n            nextProps.catitems.map( (item, i) => (\n                    tempArray.push(\n                        {\n                            // src: `/images/sq_thumb/${item.omeka.omeka_id}.jpg`,\n                            src: `/images/items/${item._id}/sq_thumbnail/0.jpg`,\n                            caption: item.title,\n                            link: `/items/${item._id}` \n                        }\n                    )\n            ))\n            if (tempArray.length) {\n                this.setState({ info: [...tempArray]});\n            }\n        }\n        if (this.props.catinfo && this.props.catinfo.length) {\n            this.setState({\n                navInfo: {\n                    catTitle: this.props.catinfo[0].title,\n                    catId: this.props.catinfo[0].cat_id\n                }\n            })\n        }\n    }\n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    }\n\n    renderGrid = () => {\n        return(\n            <div className=\"cat_grid_row\">\n                <div className=\"cat_grid_column\">\n\n                    { this.props.catitems && this.props.catitems.length ? \n                        this.props.catitems.map ( (item, i) => (\n\n\n\n\n\n                            <Link to={`/items/${item._id}`}key={i}>\n                                <figure key={i}>\n                                    <img src={`/images/items/${item._id}/sq_thumbnail/0.jpg`} \n                                        alt={item.title} \n                                        onError={this.addDefaultImg} />\n                                    <figcaption>{item.title}</figcaption>\n                                </figure>\n                            </Link>\n\n\n\n\n\n                        ))\n                    : <p>There are no items in this category.</p> }\n\n                </div>\n            </div>\n    )}\n\n\n\n\n\n    getCatName = () => {\n        if (this.props.catinfo && this.props.catinfo.length) {\n            this.navInfo.catTitle = this.props.catinfo[0].title;\n            this.navInfo.catId = this.props.catinfo[0].cat_id;\n        }\n    }\n\n\n\n    render() {\n\n        this.getCatName();\n\n        console.log(this.props);\n\n        let catinfo = this.props.catinfo;\n\n        return (\n            <div className=\"main_view\">\n                <div className=\"cat_view\">\n                    <NavigationBar navinfo={this.navInfo}/>\n                    { catinfo && catinfo.length > 0? \n                        <h2 className=\"title\">{catinfo[0].title}</h2>\n                    :null\n                    }\n\n                    {/* <PanelView info={this.state.info}></PanelView> */}\n                    { this.props.catitems ?\n                        this.renderGrid()\n                    : null }\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        catitems: state.cats.catitems,\n        catinfo: state.cats.catinfo\n        \n    }\n}\n\n\nexport default connect(mapStateToProps)(CatView)"]},"metadata":{},"sourceType":"module"}