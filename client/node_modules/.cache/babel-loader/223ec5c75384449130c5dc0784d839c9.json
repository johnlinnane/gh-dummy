{"ast":null,"code":"var _jsxFileName = \"/Users/johnlinnane/DEV/traveller-collection/client/src/components/Categories/cat_view.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getItemsByCat, getCatById, getAllSubCats } from '../../actions';\nimport NavigationBar from '../../widgetsUI/navigation';\n\nclass CatView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      info: [],\n      theseSubcats: [] // subcatsUsed: []\n\n    };\n    this.navInfo = {\n      catTitle: null,\n      catId: null,\n      subCatTitle: null,\n      subCatId: null,\n      type: 'Categories'\n    };\n\n    this.addDefaultImg = ev => {\n      const newImg = '/images/default/default.jpg';\n\n      if (ev.target.src !== newImg) {\n        ev.target.src = newImg;\n      }\n    };\n\n    this.renderImage = subCat => {\n      if (this.props.catitems && this.props.catitems.length) {\n        console.log(this.props.catitems[0].subcategory_ref); //     const firstItem = this.props.catitems.find( item => item.subcategory_ref == subCat._id);\n        //     if (firstItem) {\n\n        return (\n          /*#__PURE__*/\n          // <p>{subCat.title}</p>\n          React.createElement(\"img\", {\n            src: `/images/items/${subCat._id}/sq_thumbnail/0.jpg`,\n            alt: subCat.title,\n            onError: this.addDefaultImg,\n            className: \"subcat_list_img\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }\n          })\n        ); // } else {\n        // return <img src={`/images/default/default.jpg`} alt=\"default item image\" className=\"subcat_list_img\"/>\n        // }\n      }\n    };\n\n    this.renderSubcats = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cat_grid_row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cat_grid_column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, this.state.theseSubcats && this.state.theseSubcats.length ? this.state.theseSubcats.map((subcat, i) => /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/subcategory/${subcat._id}`,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 41\n        }\n      }, this.renderImage(subcat)))) : null));\n    };\n  }\n\n  componentDidMount() {\n    let catId = this.props.match.params.id;\n    this.props.dispatch(getItemsByCat(catId));\n    this.props.dispatch(getCatById(catId));\n    this.props.dispatch(getAllSubCats(catId));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.subcats !== prevProps.subcats) {\n      let theseSubcats = this.state.theseSubcats;\n      this.props.subcats.map(subcat => {\n        if (subcat.parent_cat == this.props.match.params.id) {\n          theseSubcats.push(subcat);\n        }\n      });\n      this.setState({\n        theseSubcats\n      });\n    }\n\n    if (this.props.catinfo) {\n      this.navInfo.catTitle = this.props.catinfo.title;\n      this.navInfo.catId = this.props.catinfo._id;\n    }\n  }\n\n  render() {\n    // console.log(this.props.catitems)\n    let catinfo = this.props.catinfo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      navinfo: this.navInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cat_view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, catinfo ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, catinfo.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, catinfo.description)) : null, this.renderSubcats())));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // console.log(state);\n  return {\n    catinfo: state.cats.catinfo,\n    subcats: state.cats.subcats,\n    catitems: state.cats.catitems\n  };\n}\n\nexport default connect(mapStateToProps)(CatView);","map":{"version":3,"sources":["/Users/johnlinnane/DEV/traveller-collection/client/src/components/Categories/cat_view.js"],"names":["React","Component","connect","Link","getItemsByCat","getCatById","getAllSubCats","NavigationBar","CatView","state","info","theseSubcats","navInfo","catTitle","catId","subCatTitle","subCatId","type","addDefaultImg","ev","newImg","target","src","renderImage","subCat","props","catitems","length","console","log","subcategory_ref","_id","title","renderSubcats","map","subcat","i","componentDidMount","match","params","id","dispatch","componentDidUpdate","prevProps","prevState","subcats","parent_cat","push","setState","catinfo","render","description","mapStateToProps","cats"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,aAApC,QAAyD,eAAzD;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAGA,MAAMC,OAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAS7BQ,KAT6B,GASrB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,YAAY,EAAE,EAFV,CAGJ;;AAHI,KATqB;AAAA,SAe7BC,OAf6B,GAenB;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,WAAW,EAAE,IAHP;AAINC,MAAAA,QAAQ,EAAE,IAJJ;AAKNC,MAAAA,IAAI,EAAE;AALA,KAfmB;;AAAA,SAyB7BC,aAzB6B,GAyBZC,EAAD,IAAQ;AACpB,YAAMC,MAAM,GAAG,6BAAf;;AACA,UAAID,EAAE,CAACE,MAAH,CAAUC,GAAV,KAAkBF,MAAtB,EAA8B;AAC1BD,QAAAA,EAAE,CAACE,MAAH,CAAUC,GAAV,GAAgBF,MAAhB;AACH;AACJ,KA9B4B;;AAAA,SA6D7BG,WA7D6B,GA6DdC,MAAD,IAAY;AACtB,UAAI,KAAKC,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWC,QAAX,CAAoBC,MAA/C,EAAuD;AACnDC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBI,eAAnC,EADmD,CAEvD;AAEA;;AAEQ;AAAA;AACI;AACA;AAAK,YAAA,GAAG,EAAG,iBAAgBN,MAAM,CAACO,GAAI,qBAAtC;AACI,YAAA,GAAG,EAAEP,MAAM,CAACQ,KADhB;AAEI,YAAA,OAAO,EAAE,KAAKd,aAFlB;AAGI,YAAA,SAAS,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,UAN+C,CAanD;AACI;AACJ;AAIH;AACJ,KAlF4B;;AAAA,SAqF7Be,aArF6B,GAqFb,MAAM;AAClB,0BAEY;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKxB,KAAL,CAAWE,YAAX,IAA2B,KAAKF,KAAL,CAAWE,YAAX,CAAwBgB,MAAnD,GAEG,KAAKlB,KAAL,CAAWE,YAAX,CAAwBuB,GAAxB,CAA6B,CAACC,MAAD,EAASC,CAAT,kBAGzB;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,gBAAeD,MAAM,CAACJ,GAAI,EAArC;AAAwC,QAAA,GAAG,EAAEK,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKb,WAAL,CAAiBY,MAAjB,CADD,CADJ,CAHJ,CAFH,GAeC,IAjBN,CADJ,CAFZ;AA2BH,KAjH4B;AAAA;;AAE7BE,EAAAA,iBAAiB,GAAG;AAChB,QAAIvB,KAAK,GAAG,KAAKW,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC;AACA,SAAKf,KAAL,CAAWgB,QAAX,CAAoBrC,aAAa,CAACU,KAAD,CAAjC;AACA,SAAKW,KAAL,CAAWgB,QAAX,CAAoBpC,UAAU,CAACS,KAAD,CAA9B;AACA,SAAKW,KAAL,CAAWgB,QAAX,CAAoBnC,aAAa,CAACQ,KAAD,CAAjC;AACH;;AA2BD4B,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAI,KAAKnB,KAAL,CAAWoB,OAAX,KAAuBF,SAAS,CAACE,OAArC,EAA8C;AAE1C,UAAIlC,YAAY,GAAG,KAAKF,KAAL,CAAWE,YAA9B;AAEA,WAAKc,KAAL,CAAWoB,OAAX,CAAmBX,GAAnB,CAAwBC,MAAM,IAAI;AAC9B,YAAIA,MAAM,CAACW,UAAP,IAAqB,KAAKrB,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjD,EAAqD;AACjD7B,UAAAA,YAAY,CAACoC,IAAb,CAAkBZ,MAAlB;AACH;AACJ,OAJD;AAMA,WAAKa,QAAL,CAAc;AACVrC,QAAAA;AADU,OAAd;AAIH;;AAED,QAAI,KAAKc,KAAL,CAAWwB,OAAf,EAAyB;AAErB,WAAKrC,OAAL,CAAaC,QAAb,GAAwB,KAAKY,KAAL,CAAWwB,OAAX,CAAmBjB,KAA3C;AACA,WAAKpB,OAAL,CAAaE,KAAb,GAAqB,KAAKW,KAAL,CAAWwB,OAAX,CAAmBlB,GAAxC;AAGH;AACJ;;AAgEDmB,EAAAA,MAAM,GAAG;AACL;AACA,QAAID,OAAO,GAAG,KAAKxB,KAAL,CAAWwB,OAAzB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE,KAAKrC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGMqC,OAAO,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBA,OAAO,CAACjB,KAA/B,CADJ,eAEI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BiB,OAAO,CAACE,WAApC,CAFJ,CADK,GAKR,IARL,EAYK,KAAKlB,aAAL,EAZL,CADJ,CAHJ,CADJ;AAsBH;;AApJ4B;;AA0JjC,SAASmB,eAAT,CAAyB3C,KAAzB,EAAgC;AAC5B;AAEA,SAAO;AACHwC,IAAAA,OAAO,EAAExC,KAAK,CAAC4C,IAAN,CAAWJ,OADjB;AAEHJ,IAAAA,OAAO,EAAEpC,KAAK,CAAC4C,IAAN,CAAWR,OAFjB;AAGHnB,IAAAA,QAAQ,EAAEjB,KAAK,CAAC4C,IAAN,CAAW3B;AAHlB,GAAP;AAMH;;AAGD,eAAexB,OAAO,CAACkD,eAAD,CAAP,CAAyB5C,OAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getItemsByCat, getCatById, getAllSubCats } from '../../actions';\nimport NavigationBar from '../../widgetsUI/navigation';\n\n\nclass CatView  extends Component {\n    \n    componentDidMount() {\n        let catId = this.props.match.params.id\n        this.props.dispatch(getItemsByCat(catId));\n        this.props.dispatch(getCatById(catId));\n        this.props.dispatch(getAllSubCats(catId));\n    }\n\n    state = {\n        info: [],\n        theseSubcats: []\n        // subcatsUsed: []\n    }\n    \n    navInfo = {\n        catTitle: null,\n        catId: null,\n        subCatTitle: null,\n        subCatId: null,\n        type: 'Categories'\n    }\n\n \n\n    addDefaultImg = (ev) => {\n        const newImg = '/images/default/default.jpg';\n        if (ev.target.src !== newImg) {\n            ev.target.src = newImg\n        }  \n    }\n\n\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.subcats !== prevProps.subcats) {\n\n            let theseSubcats = this.state.theseSubcats;\n\n            this.props.subcats.map( subcat => {\n                if (subcat.parent_cat == this.props.match.params.id) {\n                    theseSubcats.push(subcat)\n                }\n            })\n\n            this.setState({\n                theseSubcats\n              \n            })\n        }\n\n        if (this.props.catinfo ) {\n           \n            this.navInfo.catTitle = this.props.catinfo.title;\n            this.navInfo.catId = this.props.catinfo._id;\n                \n            \n        }\n    }\n\n\n    renderImage = (subCat) => {\n        if (this.props.catitems && this.props.catitems.length) {\n            console.log(this.props.catitems[0].subcategory_ref)\n        //     const firstItem = this.props.catitems.find( item => item.subcategory_ref == subCat._id);\n            \n        //     if (firstItem) {\n                \n                return (\n                    // <p>{subCat.title}</p>\n                    <img src={`/images/items/${subCat._id}/sq_thumbnail/0.jpg`} \n                        alt={subCat.title} \n                        onError={this.addDefaultImg} \n                        className=\"subcat_list_img\"/>\n                )\n            // } else {\n                // return <img src={`/images/default/default.jpg`} alt=\"default item image\" className=\"subcat_list_img\"/>\n            // }\n           \n                \n            \n        }\n    }\n\n\n    renderSubcats = () => {\n        return (\n           \n                    <div className=\"cat_grid_row\">\n                        <div className=\"cat_grid_column\">\n\n                            {this.state.theseSubcats && this.state.theseSubcats.length ?\n                                \n                                this.state.theseSubcats.map( (subcat, i) => (\n                                \n                                \n                                    <div key={i}>\n                                        <Link to={`/subcategory/${subcat._id}`} key={i}>\n                                        {this.renderImage(subcat)}\n                                            {/* <figure>\n                                                {this.renderImage(subcat)}\n                                                <figcaption>{subcat.title}</figcaption>\n                                            </figure> */}\n                                        </Link>\n                                    </div>\n                                ))\n                            : null }\n\n\n                        </div>\n                    </div>\n            \n        )\n    }\n\n\n\n\n\n  \n\n\n    render() {\n        // console.log(this.props.catitems)\n        let catinfo = this.props.catinfo;\n        \n        return (\n            <div>\n                <NavigationBar navinfo={this.navInfo}/>\n\n                <div className=\"main_view\">\n                    <div className=\"cat_view\">\n\n                        \n                        { catinfo ? \n                            <div>\n                                <h2 className=\"title\">{catinfo.title}</h2>\n                                <p className=\"description\">{catinfo.description}</p>\n                            </div>\n                        :null\n                        }\n\n\n                        {this.renderSubcats()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\n\nfunction mapStateToProps(state) {\n    // console.log(state);\n\n    return {\n        catinfo: state.cats.catinfo,\n        subcats: state.cats.subcats,\n        catitems: state.cats.catitems\n        \n    }\n}\n\n\nexport default connect(mapStateToProps)(CatView)"]},"metadata":{},"sourceType":"module"}